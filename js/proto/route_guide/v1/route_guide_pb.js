// source: route_guide/v1/route_guide.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.route_guide.v1.Feature', null, global);
goog.exportSymbol('proto.route_guide.v1.FeatureDatabase', null, global);
goog.exportSymbol('proto.route_guide.v1.GetFeatureRequest', null, global);
goog.exportSymbol('proto.route_guide.v1.GetFeatureResponse', null, global);
goog.exportSymbol('proto.route_guide.v1.ListFeaturesRequest', null, global);
goog.exportSymbol('proto.route_guide.v1.ListFeaturesResponse', null, global);
goog.exportSymbol('proto.route_guide.v1.Point', null, global);
goog.exportSymbol('proto.route_guide.v1.RecordRouteRequest', null, global);
goog.exportSymbol('proto.route_guide.v1.RecordRouteResponse', null, global);
goog.exportSymbol('proto.route_guide.v1.RouteChatRequest', null, global);
goog.exportSymbol('proto.route_guide.v1.RouteChatResponse', null, global);
goog.exportSymbol('proto.route_guide.v1.RouteNote', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.route_guide.v1.Point = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.route_guide.v1.Point, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.route_guide.v1.Point.displayName = 'proto.route_guide.v1.Point';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.route_guide.v1.ListFeaturesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.route_guide.v1.ListFeaturesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.route_guide.v1.ListFeaturesRequest.displayName = 'proto.route_guide.v1.ListFeaturesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.route_guide.v1.GetFeatureResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.route_guide.v1.GetFeatureResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.route_guide.v1.GetFeatureResponse.displayName = 'proto.route_guide.v1.GetFeatureResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.route_guide.v1.GetFeatureRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.route_guide.v1.GetFeatureRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.route_guide.v1.GetFeatureRequest.displayName = 'proto.route_guide.v1.GetFeatureRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.route_guide.v1.ListFeaturesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.route_guide.v1.ListFeaturesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.route_guide.v1.ListFeaturesResponse.displayName = 'proto.route_guide.v1.ListFeaturesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.route_guide.v1.RecordRouteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.route_guide.v1.RecordRouteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.route_guide.v1.RecordRouteRequest.displayName = 'proto.route_guide.v1.RecordRouteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.route_guide.v1.RouteChatRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.route_guide.v1.RouteChatRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.route_guide.v1.RouteChatRequest.displayName = 'proto.route_guide.v1.RouteChatRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.route_guide.v1.RouteChatResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.route_guide.v1.RouteChatResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.route_guide.v1.RouteChatResponse.displayName = 'proto.route_guide.v1.RouteChatResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.route_guide.v1.Feature = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.route_guide.v1.Feature, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.route_guide.v1.Feature.displayName = 'proto.route_guide.v1.Feature';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.route_guide.v1.FeatureDatabase = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.route_guide.v1.FeatureDatabase.repeatedFields_, null);
};
goog.inherits(proto.route_guide.v1.FeatureDatabase, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.route_guide.v1.FeatureDatabase.displayName = 'proto.route_guide.v1.FeatureDatabase';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.route_guide.v1.RouteNote = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.route_guide.v1.RouteNote, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.route_guide.v1.RouteNote.displayName = 'proto.route_guide.v1.RouteNote';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.route_guide.v1.RecordRouteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.route_guide.v1.RecordRouteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.route_guide.v1.RecordRouteResponse.displayName = 'proto.route_guide.v1.RecordRouteResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.route_guide.v1.Point.prototype.toObject = function(opt_includeInstance) {
  return proto.route_guide.v1.Point.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.route_guide.v1.Point} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.route_guide.v1.Point.toObject = function(includeInstance, msg) {
  var f, obj = {
    latitude: jspb.Message.getFieldWithDefault(msg, 1, 0),
    longitude: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.route_guide.v1.Point}
 */
proto.route_guide.v1.Point.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.route_guide.v1.Point;
  return proto.route_guide.v1.Point.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.route_guide.v1.Point} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.route_guide.v1.Point}
 */
proto.route_guide.v1.Point.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLatitude(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLongitude(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.route_guide.v1.Point.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.route_guide.v1.Point.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.route_guide.v1.Point} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.route_guide.v1.Point.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLatitude();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getLongitude();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 latitude = 1;
 * @return {number}
 */
proto.route_guide.v1.Point.prototype.getLatitude = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.route_guide.v1.Point} returns this
 */
proto.route_guide.v1.Point.prototype.setLatitude = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 longitude = 2;
 * @return {number}
 */
proto.route_guide.v1.Point.prototype.getLongitude = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.route_guide.v1.Point} returns this
 */
proto.route_guide.v1.Point.prototype.setLongitude = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.route_guide.v1.ListFeaturesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.route_guide.v1.ListFeaturesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.route_guide.v1.ListFeaturesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.route_guide.v1.ListFeaturesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    lo: (f = msg.getLo()) && proto.route_guide.v1.Point.toObject(includeInstance, f),
    hi: (f = msg.getHi()) && proto.route_guide.v1.Point.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.route_guide.v1.ListFeaturesRequest}
 */
proto.route_guide.v1.ListFeaturesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.route_guide.v1.ListFeaturesRequest;
  return proto.route_guide.v1.ListFeaturesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.route_guide.v1.ListFeaturesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.route_guide.v1.ListFeaturesRequest}
 */
proto.route_guide.v1.ListFeaturesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.route_guide.v1.Point;
      reader.readMessage(value,proto.route_guide.v1.Point.deserializeBinaryFromReader);
      msg.setLo(value);
      break;
    case 2:
      var value = new proto.route_guide.v1.Point;
      reader.readMessage(value,proto.route_guide.v1.Point.deserializeBinaryFromReader);
      msg.setHi(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.route_guide.v1.ListFeaturesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.route_guide.v1.ListFeaturesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.route_guide.v1.ListFeaturesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.route_guide.v1.ListFeaturesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.route_guide.v1.Point.serializeBinaryToWriter
    );
  }
  f = message.getHi();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.route_guide.v1.Point.serializeBinaryToWriter
    );
  }
};


/**
 * optional Point lo = 1;
 * @return {?proto.route_guide.v1.Point}
 */
proto.route_guide.v1.ListFeaturesRequest.prototype.getLo = function() {
  return /** @type{?proto.route_guide.v1.Point} */ (
    jspb.Message.getWrapperField(this, proto.route_guide.v1.Point, 1));
};


/**
 * @param {?proto.route_guide.v1.Point|undefined} value
 * @return {!proto.route_guide.v1.ListFeaturesRequest} returns this
*/
proto.route_guide.v1.ListFeaturesRequest.prototype.setLo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.route_guide.v1.ListFeaturesRequest} returns this
 */
proto.route_guide.v1.ListFeaturesRequest.prototype.clearLo = function() {
  return this.setLo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.route_guide.v1.ListFeaturesRequest.prototype.hasLo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Point hi = 2;
 * @return {?proto.route_guide.v1.Point}
 */
proto.route_guide.v1.ListFeaturesRequest.prototype.getHi = function() {
  return /** @type{?proto.route_guide.v1.Point} */ (
    jspb.Message.getWrapperField(this, proto.route_guide.v1.Point, 2));
};


/**
 * @param {?proto.route_guide.v1.Point|undefined} value
 * @return {!proto.route_guide.v1.ListFeaturesRequest} returns this
*/
proto.route_guide.v1.ListFeaturesRequest.prototype.setHi = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.route_guide.v1.ListFeaturesRequest} returns this
 */
proto.route_guide.v1.ListFeaturesRequest.prototype.clearHi = function() {
  return this.setHi(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.route_guide.v1.ListFeaturesRequest.prototype.hasHi = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.route_guide.v1.GetFeatureResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.route_guide.v1.GetFeatureResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.route_guide.v1.GetFeatureResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.route_guide.v1.GetFeatureResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    feature: (f = msg.getFeature()) && proto.route_guide.v1.Feature.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.route_guide.v1.GetFeatureResponse}
 */
proto.route_guide.v1.GetFeatureResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.route_guide.v1.GetFeatureResponse;
  return proto.route_guide.v1.GetFeatureResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.route_guide.v1.GetFeatureResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.route_guide.v1.GetFeatureResponse}
 */
proto.route_guide.v1.GetFeatureResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.route_guide.v1.Feature;
      reader.readMessage(value,proto.route_guide.v1.Feature.deserializeBinaryFromReader);
      msg.setFeature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.route_guide.v1.GetFeatureResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.route_guide.v1.GetFeatureResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.route_guide.v1.GetFeatureResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.route_guide.v1.GetFeatureResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFeature();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.route_guide.v1.Feature.serializeBinaryToWriter
    );
  }
};


/**
 * optional Feature feature = 1;
 * @return {?proto.route_guide.v1.Feature}
 */
proto.route_guide.v1.GetFeatureResponse.prototype.getFeature = function() {
  return /** @type{?proto.route_guide.v1.Feature} */ (
    jspb.Message.getWrapperField(this, proto.route_guide.v1.Feature, 1));
};


/**
 * @param {?proto.route_guide.v1.Feature|undefined} value
 * @return {!proto.route_guide.v1.GetFeatureResponse} returns this
*/
proto.route_guide.v1.GetFeatureResponse.prototype.setFeature = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.route_guide.v1.GetFeatureResponse} returns this
 */
proto.route_guide.v1.GetFeatureResponse.prototype.clearFeature = function() {
  return this.setFeature(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.route_guide.v1.GetFeatureResponse.prototype.hasFeature = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.route_guide.v1.GetFeatureRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.route_guide.v1.GetFeatureRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.route_guide.v1.GetFeatureRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.route_guide.v1.GetFeatureRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    point: (f = msg.getPoint()) && proto.route_guide.v1.Point.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.route_guide.v1.GetFeatureRequest}
 */
proto.route_guide.v1.GetFeatureRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.route_guide.v1.GetFeatureRequest;
  return proto.route_guide.v1.GetFeatureRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.route_guide.v1.GetFeatureRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.route_guide.v1.GetFeatureRequest}
 */
proto.route_guide.v1.GetFeatureRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.route_guide.v1.Point;
      reader.readMessage(value,proto.route_guide.v1.Point.deserializeBinaryFromReader);
      msg.setPoint(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.route_guide.v1.GetFeatureRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.route_guide.v1.GetFeatureRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.route_guide.v1.GetFeatureRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.route_guide.v1.GetFeatureRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPoint();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.route_guide.v1.Point.serializeBinaryToWriter
    );
  }
};


/**
 * optional Point point = 1;
 * @return {?proto.route_guide.v1.Point}
 */
proto.route_guide.v1.GetFeatureRequest.prototype.getPoint = function() {
  return /** @type{?proto.route_guide.v1.Point} */ (
    jspb.Message.getWrapperField(this, proto.route_guide.v1.Point, 1));
};


/**
 * @param {?proto.route_guide.v1.Point|undefined} value
 * @return {!proto.route_guide.v1.GetFeatureRequest} returns this
*/
proto.route_guide.v1.GetFeatureRequest.prototype.setPoint = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.route_guide.v1.GetFeatureRequest} returns this
 */
proto.route_guide.v1.GetFeatureRequest.prototype.clearPoint = function() {
  return this.setPoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.route_guide.v1.GetFeatureRequest.prototype.hasPoint = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.route_guide.v1.ListFeaturesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.route_guide.v1.ListFeaturesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.route_guide.v1.ListFeaturesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.route_guide.v1.ListFeaturesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    feature: (f = msg.getFeature()) && proto.route_guide.v1.Feature.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.route_guide.v1.ListFeaturesResponse}
 */
proto.route_guide.v1.ListFeaturesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.route_guide.v1.ListFeaturesResponse;
  return proto.route_guide.v1.ListFeaturesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.route_guide.v1.ListFeaturesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.route_guide.v1.ListFeaturesResponse}
 */
proto.route_guide.v1.ListFeaturesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.route_guide.v1.Feature;
      reader.readMessage(value,proto.route_guide.v1.Feature.deserializeBinaryFromReader);
      msg.setFeature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.route_guide.v1.ListFeaturesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.route_guide.v1.ListFeaturesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.route_guide.v1.ListFeaturesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.route_guide.v1.ListFeaturesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFeature();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.route_guide.v1.Feature.serializeBinaryToWriter
    );
  }
};


/**
 * optional Feature feature = 1;
 * @return {?proto.route_guide.v1.Feature}
 */
proto.route_guide.v1.ListFeaturesResponse.prototype.getFeature = function() {
  return /** @type{?proto.route_guide.v1.Feature} */ (
    jspb.Message.getWrapperField(this, proto.route_guide.v1.Feature, 1));
};


/**
 * @param {?proto.route_guide.v1.Feature|undefined} value
 * @return {!proto.route_guide.v1.ListFeaturesResponse} returns this
*/
proto.route_guide.v1.ListFeaturesResponse.prototype.setFeature = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.route_guide.v1.ListFeaturesResponse} returns this
 */
proto.route_guide.v1.ListFeaturesResponse.prototype.clearFeature = function() {
  return this.setFeature(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.route_guide.v1.ListFeaturesResponse.prototype.hasFeature = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.route_guide.v1.RecordRouteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.route_guide.v1.RecordRouteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.route_guide.v1.RecordRouteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.route_guide.v1.RecordRouteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    point: (f = msg.getPoint()) && proto.route_guide.v1.Point.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.route_guide.v1.RecordRouteRequest}
 */
proto.route_guide.v1.RecordRouteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.route_guide.v1.RecordRouteRequest;
  return proto.route_guide.v1.RecordRouteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.route_guide.v1.RecordRouteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.route_guide.v1.RecordRouteRequest}
 */
proto.route_guide.v1.RecordRouteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.route_guide.v1.Point;
      reader.readMessage(value,proto.route_guide.v1.Point.deserializeBinaryFromReader);
      msg.setPoint(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.route_guide.v1.RecordRouteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.route_guide.v1.RecordRouteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.route_guide.v1.RecordRouteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.route_guide.v1.RecordRouteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPoint();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.route_guide.v1.Point.serializeBinaryToWriter
    );
  }
};


/**
 * optional Point point = 1;
 * @return {?proto.route_guide.v1.Point}
 */
proto.route_guide.v1.RecordRouteRequest.prototype.getPoint = function() {
  return /** @type{?proto.route_guide.v1.Point} */ (
    jspb.Message.getWrapperField(this, proto.route_guide.v1.Point, 1));
};


/**
 * @param {?proto.route_guide.v1.Point|undefined} value
 * @return {!proto.route_guide.v1.RecordRouteRequest} returns this
*/
proto.route_guide.v1.RecordRouteRequest.prototype.setPoint = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.route_guide.v1.RecordRouteRequest} returns this
 */
proto.route_guide.v1.RecordRouteRequest.prototype.clearPoint = function() {
  return this.setPoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.route_guide.v1.RecordRouteRequest.prototype.hasPoint = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.route_guide.v1.RouteChatRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.route_guide.v1.RouteChatRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.route_guide.v1.RouteChatRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.route_guide.v1.RouteChatRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    routeNote: (f = msg.getRouteNote()) && proto.route_guide.v1.RouteNote.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.route_guide.v1.RouteChatRequest}
 */
proto.route_guide.v1.RouteChatRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.route_guide.v1.RouteChatRequest;
  return proto.route_guide.v1.RouteChatRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.route_guide.v1.RouteChatRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.route_guide.v1.RouteChatRequest}
 */
proto.route_guide.v1.RouteChatRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.route_guide.v1.RouteNote;
      reader.readMessage(value,proto.route_guide.v1.RouteNote.deserializeBinaryFromReader);
      msg.setRouteNote(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.route_guide.v1.RouteChatRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.route_guide.v1.RouteChatRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.route_guide.v1.RouteChatRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.route_guide.v1.RouteChatRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRouteNote();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.route_guide.v1.RouteNote.serializeBinaryToWriter
    );
  }
};


/**
 * optional RouteNote route_note = 1;
 * @return {?proto.route_guide.v1.RouteNote}
 */
proto.route_guide.v1.RouteChatRequest.prototype.getRouteNote = function() {
  return /** @type{?proto.route_guide.v1.RouteNote} */ (
    jspb.Message.getWrapperField(this, proto.route_guide.v1.RouteNote, 1));
};


/**
 * @param {?proto.route_guide.v1.RouteNote|undefined} value
 * @return {!proto.route_guide.v1.RouteChatRequest} returns this
*/
proto.route_guide.v1.RouteChatRequest.prototype.setRouteNote = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.route_guide.v1.RouteChatRequest} returns this
 */
proto.route_guide.v1.RouteChatRequest.prototype.clearRouteNote = function() {
  return this.setRouteNote(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.route_guide.v1.RouteChatRequest.prototype.hasRouteNote = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.route_guide.v1.RouteChatResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.route_guide.v1.RouteChatResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.route_guide.v1.RouteChatResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.route_guide.v1.RouteChatResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    routeNote: (f = msg.getRouteNote()) && proto.route_guide.v1.RouteNote.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.route_guide.v1.RouteChatResponse}
 */
proto.route_guide.v1.RouteChatResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.route_guide.v1.RouteChatResponse;
  return proto.route_guide.v1.RouteChatResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.route_guide.v1.RouteChatResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.route_guide.v1.RouteChatResponse}
 */
proto.route_guide.v1.RouteChatResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.route_guide.v1.RouteNote;
      reader.readMessage(value,proto.route_guide.v1.RouteNote.deserializeBinaryFromReader);
      msg.setRouteNote(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.route_guide.v1.RouteChatResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.route_guide.v1.RouteChatResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.route_guide.v1.RouteChatResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.route_guide.v1.RouteChatResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRouteNote();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.route_guide.v1.RouteNote.serializeBinaryToWriter
    );
  }
};


/**
 * optional RouteNote route_note = 1;
 * @return {?proto.route_guide.v1.RouteNote}
 */
proto.route_guide.v1.RouteChatResponse.prototype.getRouteNote = function() {
  return /** @type{?proto.route_guide.v1.RouteNote} */ (
    jspb.Message.getWrapperField(this, proto.route_guide.v1.RouteNote, 1));
};


/**
 * @param {?proto.route_guide.v1.RouteNote|undefined} value
 * @return {!proto.route_guide.v1.RouteChatResponse} returns this
*/
proto.route_guide.v1.RouteChatResponse.prototype.setRouteNote = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.route_guide.v1.RouteChatResponse} returns this
 */
proto.route_guide.v1.RouteChatResponse.prototype.clearRouteNote = function() {
  return this.setRouteNote(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.route_guide.v1.RouteChatResponse.prototype.hasRouteNote = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.route_guide.v1.Feature.prototype.toObject = function(opt_includeInstance) {
  return proto.route_guide.v1.Feature.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.route_guide.v1.Feature} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.route_guide.v1.Feature.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    location: (f = msg.getLocation()) && proto.route_guide.v1.Point.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.route_guide.v1.Feature}
 */
proto.route_guide.v1.Feature.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.route_guide.v1.Feature;
  return proto.route_guide.v1.Feature.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.route_guide.v1.Feature} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.route_guide.v1.Feature}
 */
proto.route_guide.v1.Feature.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.route_guide.v1.Point;
      reader.readMessage(value,proto.route_guide.v1.Point.deserializeBinaryFromReader);
      msg.setLocation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.route_guide.v1.Feature.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.route_guide.v1.Feature.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.route_guide.v1.Feature} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.route_guide.v1.Feature.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLocation();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.route_guide.v1.Point.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.route_guide.v1.Feature.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.route_guide.v1.Feature} returns this
 */
proto.route_guide.v1.Feature.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Point location = 2;
 * @return {?proto.route_guide.v1.Point}
 */
proto.route_guide.v1.Feature.prototype.getLocation = function() {
  return /** @type{?proto.route_guide.v1.Point} */ (
    jspb.Message.getWrapperField(this, proto.route_guide.v1.Point, 2));
};


/**
 * @param {?proto.route_guide.v1.Point|undefined} value
 * @return {!proto.route_guide.v1.Feature} returns this
*/
proto.route_guide.v1.Feature.prototype.setLocation = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.route_guide.v1.Feature} returns this
 */
proto.route_guide.v1.Feature.prototype.clearLocation = function() {
  return this.setLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.route_guide.v1.Feature.prototype.hasLocation = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.route_guide.v1.FeatureDatabase.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.route_guide.v1.FeatureDatabase.prototype.toObject = function(opt_includeInstance) {
  return proto.route_guide.v1.FeatureDatabase.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.route_guide.v1.FeatureDatabase} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.route_guide.v1.FeatureDatabase.toObject = function(includeInstance, msg) {
  var f, obj = {
    featureList: jspb.Message.toObjectList(msg.getFeatureList(),
    proto.route_guide.v1.Feature.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.route_guide.v1.FeatureDatabase}
 */
proto.route_guide.v1.FeatureDatabase.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.route_guide.v1.FeatureDatabase;
  return proto.route_guide.v1.FeatureDatabase.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.route_guide.v1.FeatureDatabase} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.route_guide.v1.FeatureDatabase}
 */
proto.route_guide.v1.FeatureDatabase.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.route_guide.v1.Feature;
      reader.readMessage(value,proto.route_guide.v1.Feature.deserializeBinaryFromReader);
      msg.addFeature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.route_guide.v1.FeatureDatabase.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.route_guide.v1.FeatureDatabase.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.route_guide.v1.FeatureDatabase} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.route_guide.v1.FeatureDatabase.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFeatureList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.route_guide.v1.Feature.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Feature feature = 1;
 * @return {!Array<!proto.route_guide.v1.Feature>}
 */
proto.route_guide.v1.FeatureDatabase.prototype.getFeatureList = function() {
  return /** @type{!Array<!proto.route_guide.v1.Feature>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.route_guide.v1.Feature, 1));
};


/**
 * @param {!Array<!proto.route_guide.v1.Feature>} value
 * @return {!proto.route_guide.v1.FeatureDatabase} returns this
*/
proto.route_guide.v1.FeatureDatabase.prototype.setFeatureList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.route_guide.v1.Feature=} opt_value
 * @param {number=} opt_index
 * @return {!proto.route_guide.v1.Feature}
 */
proto.route_guide.v1.FeatureDatabase.prototype.addFeature = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.route_guide.v1.Feature, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.route_guide.v1.FeatureDatabase} returns this
 */
proto.route_guide.v1.FeatureDatabase.prototype.clearFeatureList = function() {
  return this.setFeatureList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.route_guide.v1.RouteNote.prototype.toObject = function(opt_includeInstance) {
  return proto.route_guide.v1.RouteNote.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.route_guide.v1.RouteNote} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.route_guide.v1.RouteNote.toObject = function(includeInstance, msg) {
  var f, obj = {
    location: (f = msg.getLocation()) && proto.route_guide.v1.Point.toObject(includeInstance, f),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.route_guide.v1.RouteNote}
 */
proto.route_guide.v1.RouteNote.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.route_guide.v1.RouteNote;
  return proto.route_guide.v1.RouteNote.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.route_guide.v1.RouteNote} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.route_guide.v1.RouteNote}
 */
proto.route_guide.v1.RouteNote.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.route_guide.v1.Point;
      reader.readMessage(value,proto.route_guide.v1.Point.deserializeBinaryFromReader);
      msg.setLocation(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.route_guide.v1.RouteNote.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.route_guide.v1.RouteNote.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.route_guide.v1.RouteNote} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.route_guide.v1.RouteNote.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLocation();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.route_guide.v1.Point.serializeBinaryToWriter
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Point location = 1;
 * @return {?proto.route_guide.v1.Point}
 */
proto.route_guide.v1.RouteNote.prototype.getLocation = function() {
  return /** @type{?proto.route_guide.v1.Point} */ (
    jspb.Message.getWrapperField(this, proto.route_guide.v1.Point, 1));
};


/**
 * @param {?proto.route_guide.v1.Point|undefined} value
 * @return {!proto.route_guide.v1.RouteNote} returns this
*/
proto.route_guide.v1.RouteNote.prototype.setLocation = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.route_guide.v1.RouteNote} returns this
 */
proto.route_guide.v1.RouteNote.prototype.clearLocation = function() {
  return this.setLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.route_guide.v1.RouteNote.prototype.hasLocation = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.route_guide.v1.RouteNote.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.route_guide.v1.RouteNote} returns this
 */
proto.route_guide.v1.RouteNote.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.route_guide.v1.RecordRouteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.route_guide.v1.RecordRouteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.route_guide.v1.RecordRouteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.route_guide.v1.RecordRouteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    pointCount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    featureCount: jspb.Message.getFieldWithDefault(msg, 2, 0),
    distance: jspb.Message.getFieldWithDefault(msg, 3, 0),
    elapsedTime: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.route_guide.v1.RecordRouteResponse}
 */
proto.route_guide.v1.RecordRouteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.route_guide.v1.RecordRouteResponse;
  return proto.route_guide.v1.RecordRouteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.route_guide.v1.RecordRouteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.route_guide.v1.RecordRouteResponse}
 */
proto.route_guide.v1.RecordRouteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPointCount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFeatureCount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDistance(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setElapsedTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.route_guide.v1.RecordRouteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.route_guide.v1.RecordRouteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.route_guide.v1.RecordRouteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.route_guide.v1.RecordRouteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPointCount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getFeatureCount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getDistance();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getElapsedTime();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * optional int32 point_count = 1;
 * @return {number}
 */
proto.route_guide.v1.RecordRouteResponse.prototype.getPointCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.route_guide.v1.RecordRouteResponse} returns this
 */
proto.route_guide.v1.RecordRouteResponse.prototype.setPointCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 feature_count = 2;
 * @return {number}
 */
proto.route_guide.v1.RecordRouteResponse.prototype.getFeatureCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.route_guide.v1.RecordRouteResponse} returns this
 */
proto.route_guide.v1.RecordRouteResponse.prototype.setFeatureCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 distance = 3;
 * @return {number}
 */
proto.route_guide.v1.RecordRouteResponse.prototype.getDistance = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.route_guide.v1.RecordRouteResponse} returns this
 */
proto.route_guide.v1.RecordRouteResponse.prototype.setDistance = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 elapsed_time = 4;
 * @return {number}
 */
proto.route_guide.v1.RecordRouteResponse.prototype.getElapsedTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.route_guide.v1.RecordRouteResponse} returns this
 */
proto.route_guide.v1.RecordRouteResponse.prototype.setElapsedTime = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


goog.object.extend(exports, proto.route_guide.v1);
