// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/geo/v1/geometry.proto

package geo.v1;

/**
 * <pre>
 * response message for insertion and updates to stac db
 * </pre>
 *
 * Protobuf type {@code geo.v1.GeometryRequest}
 */
public final class GeometryRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:geo.v1.GeometryRequest)
    GeometryRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use GeometryRequest.newBuilder() to construct.
  private GeometryRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private GeometryRequest() {
    operator_ = 0;
    resultEncoding_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new GeometryRequest();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private GeometryRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            geo.v1.GeometryData.Builder subBuilder = null;
            if (leftCase_ == 1) {
              subBuilder = ((geo.v1.GeometryData) left_).toBuilder();
            }
            left_ =
                input.readMessage(geo.v1.GeometryData.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((geo.v1.GeometryData) left_);
              left_ = subBuilder.buildPartial();
            }
            leftCase_ = 1;
            break;
          }
          case 18: {
            geo.v1.GeometryData.Builder subBuilder = null;
            if (leftCase_ == 2) {
              subBuilder = ((geo.v1.GeometryData) left_).toBuilder();
            }
            left_ =
                input.readMessage(geo.v1.GeometryData.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((geo.v1.GeometryData) left_);
              left_ = subBuilder.buildPartial();
            }
            leftCase_ = 2;
            break;
          }
          case 26: {
            geo.v1.GeometryRequest.Builder subBuilder = null;
            if (leftCase_ == 3) {
              subBuilder = ((geo.v1.GeometryRequest) left_).toBuilder();
            }
            left_ =
                input.readMessage(geo.v1.GeometryRequest.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((geo.v1.GeometryRequest) left_);
              left_ = subBuilder.buildPartial();
            }
            leftCase_ = 3;
            break;
          }
          case 34: {
            geo.v1.GeometryRequest.Builder subBuilder = null;
            if (leftCase_ == 4) {
              subBuilder = ((geo.v1.GeometryRequest) left_).toBuilder();
            }
            left_ =
                input.readMessage(geo.v1.GeometryRequest.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((geo.v1.GeometryRequest) left_);
              left_ = subBuilder.buildPartial();
            }
            leftCase_ = 4;
            break;
          }
          case 42: {
            geo.v1.GeometryData.Builder subBuilder = null;
            if (rightCase_ == 5) {
              subBuilder = ((geo.v1.GeometryData) right_).toBuilder();
            }
            right_ =
                input.readMessage(geo.v1.GeometryData.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((geo.v1.GeometryData) right_);
              right_ = subBuilder.buildPartial();
            }
            rightCase_ = 5;
            break;
          }
          case 50: {
            geo.v1.GeometryRequest.Builder subBuilder = null;
            if (rightCase_ == 6) {
              subBuilder = ((geo.v1.GeometryRequest) right_).toBuilder();
            }
            right_ =
                input.readMessage(geo.v1.GeometryRequest.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((geo.v1.GeometryRequest) right_);
              right_ = subBuilder.buildPartial();
            }
            rightCase_ = 6;
            break;
          }
          case 56: {
            int rawValue = input.readEnum();

            operator_ = rawValue;
            break;
          }
          case 64: {
            int rawValue = input.readEnum();

            resultEncoding_ = rawValue;
            break;
          }
          case 74: {
            geo.v1.ProjectionData.Builder subBuilder = null;
            if (operationProj_ != null) {
              subBuilder = operationProj_.toBuilder();
            }
            operationProj_ = input.readMessage(geo.v1.ProjectionData.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(operationProj_);
              operationProj_ = subBuilder.buildPartial();
            }

            break;
          }
          case 82: {
            geo.v1.ProjectionData.Builder subBuilder = null;
            if (resultProj_ != null) {
              subBuilder = resultProj_.toBuilder();
            }
            resultProj_ = input.readMessage(geo.v1.ProjectionData.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(resultProj_);
              resultProj_ = subBuilder.buildPartial();
            }

            break;
          }
          case 90: {
            geo.v1.Params.Buffer.Builder subBuilder = null;
            if (paramsCase_ == 11) {
              subBuilder = ((geo.v1.Params.Buffer) params_).toBuilder();
            }
            params_ =
                input.readMessage(geo.v1.Params.Buffer.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((geo.v1.Params.Buffer) params_);
              params_ = subBuilder.buildPartial();
            }
            paramsCase_ = 11;
            break;
          }
          case 98: {
            geo.v1.Params.Convex.Builder subBuilder = null;
            if (paramsCase_ == 12) {
              subBuilder = ((geo.v1.Params.Convex) params_).toBuilder();
            }
            params_ =
                input.readMessage(geo.v1.Params.Convex.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((geo.v1.Params.Convex) params_);
              params_ = subBuilder.buildPartial();
            }
            paramsCase_ = 12;
            break;
          }
          case 106: {
            geo.v1.Params.Relate.Builder subBuilder = null;
            if (paramsCase_ == 13) {
              subBuilder = ((geo.v1.Params.Relate) params_).toBuilder();
            }
            params_ =
                input.readMessage(geo.v1.Params.Relate.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((geo.v1.Params.Relate) params_);
              params_ = subBuilder.buildPartial();
            }
            paramsCase_ = 13;
            break;
          }
          case 114: {
            geo.v1.Params.RandomPoints.Builder subBuilder = null;
            if (paramsCase_ == 14) {
              subBuilder = ((geo.v1.Params.RandomPoints) params_).toBuilder();
            }
            params_ =
                input.readMessage(geo.v1.Params.RandomPoints.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((geo.v1.Params.RandomPoints) params_);
              params_ = subBuilder.buildPartial();
            }
            paramsCase_ = 14;
            break;
          }
          case 122: {
            geo.v1.Params.Generalize.Builder subBuilder = null;
            if (paramsCase_ == 15) {
              subBuilder = ((geo.v1.Params.Generalize) params_).toBuilder();
            }
            params_ =
                input.readMessage(geo.v1.Params.Generalize.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((geo.v1.Params.Generalize) params_);
              params_ = subBuilder.buildPartial();
            }
            paramsCase_ = 15;
            break;
          }
          case 130: {
            geo.v1.Params.Intersection.Builder subBuilder = null;
            if (paramsCase_ == 16) {
              subBuilder = ((geo.v1.Params.Intersection) params_).toBuilder();
            }
            params_ =
                input.readMessage(geo.v1.Params.Intersection.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((geo.v1.Params.Intersection) params_);
              params_ = subBuilder.buildPartial();
            }
            paramsCase_ = 16;
            break;
          }
          case 138: {
            geo.v1.Params.Offset.Builder subBuilder = null;
            if (paramsCase_ == 17) {
              subBuilder = ((geo.v1.Params.Offset) params_).toBuilder();
            }
            params_ =
                input.readMessage(geo.v1.Params.Offset.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((geo.v1.Params.Offset) params_);
              params_ = subBuilder.buildPartial();
            }
            paramsCase_ = 17;
            break;
          }
          case 146: {
            geo.v1.Params.Cut.Builder subBuilder = null;
            if (paramsCase_ == 18) {
              subBuilder = ((geo.v1.Params.Cut) params_).toBuilder();
            }
            params_ =
                input.readMessage(geo.v1.Params.Cut.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((geo.v1.Params.Cut) params_);
              params_ = subBuilder.buildPartial();
            }
            paramsCase_ = 18;
            break;
          }
          case 154: {
            geo.v1.Params.Clip.Builder subBuilder = null;
            if (paramsCase_ == 19) {
              subBuilder = ((geo.v1.Params.Clip) params_).toBuilder();
            }
            params_ =
                input.readMessage(geo.v1.Params.Clip.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((geo.v1.Params.Clip) params_);
              params_ = subBuilder.buildPartial();
            }
            paramsCase_ = 19;
            break;
          }
          case 162: {
            geo.v1.Params.Densify.Builder subBuilder = null;
            if (paramsCase_ == 20) {
              subBuilder = ((geo.v1.Params.Densify) params_).toBuilder();
            }
            params_ =
                input.readMessage(geo.v1.Params.Densify.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((geo.v1.Params.Densify) params_);
              params_ = subBuilder.buildPartial();
            }
            paramsCase_ = 20;
            break;
          }
          case 170: {
            geo.v1.Params.Simplify.Builder subBuilder = null;
            if (paramsCase_ == 21) {
              subBuilder = ((geo.v1.Params.Simplify) params_).toBuilder();
            }
            params_ =
                input.readMessage(geo.v1.Params.Simplify.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((geo.v1.Params.Simplify) params_);
              params_ = subBuilder.buildPartial();
            }
            paramsCase_ = 21;
            break;
          }
          case 178: {
            geo.v1.Params.GeneralizeByArea.Builder subBuilder = null;
            if (paramsCase_ == 22) {
              subBuilder = ((geo.v1.Params.GeneralizeByArea) params_).toBuilder();
            }
            params_ =
                input.readMessage(geo.v1.Params.GeneralizeByArea.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((geo.v1.Params.GeneralizeByArea) params_);
              params_ = subBuilder.buildPartial();
            }
            paramsCase_ = 22;
            break;
          }
          case 186: {
            geo.v1.Params.AffineTransform.Builder subBuilder = null;
            if (paramsCase_ == 23) {
              subBuilder = ((geo.v1.Params.AffineTransform) params_).toBuilder();
            }
            params_ =
                input.readMessage(geo.v1.Params.AffineTransform.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((geo.v1.Params.AffineTransform) params_);
              params_ = subBuilder.buildPartial();
            }
            paramsCase_ = 23;
            break;
          }
          case 194: {
            geo.v1.Params.GeodeticBuffer.Builder subBuilder = null;
            if (paramsCase_ == 24) {
              subBuilder = ((geo.v1.Params.GeodeticBuffer) params_).toBuilder();
            }
            params_ =
                input.readMessage(geo.v1.Params.GeodeticBuffer.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((geo.v1.Params.GeodeticBuffer) params_);
              params_ = subBuilder.buildPartial();
            }
            paramsCase_ = 24;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return geo.v1.GeometryProto.internal_static_geo_v1_GeometryRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return geo.v1.GeometryProto.internal_static_geo_v1_GeometryRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            geo.v1.GeometryRequest.class, geo.v1.GeometryRequest.Builder.class);
  }

  private int leftCase_ = 0;
  private java.lang.Object left_;
  public enum LeftCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    GEOMETRY(1),
    LEFT_GEOMETRY(2),
    GEOMETRY_REQUEST(3),
    LEFT_GEOMETRY_REQUEST(4),
    LEFT_NOT_SET(0);
    private final int value;
    private LeftCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LeftCase valueOf(int value) {
      return forNumber(value);
    }

    public static LeftCase forNumber(int value) {
      switch (value) {
        case 1: return GEOMETRY;
        case 2: return LEFT_GEOMETRY;
        case 3: return GEOMETRY_REQUEST;
        case 4: return LEFT_GEOMETRY_REQUEST;
        case 0: return LEFT_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public LeftCase
  getLeftCase() {
    return LeftCase.forNumber(
        leftCase_);
  }

  private int rightCase_ = 0;
  private java.lang.Object right_;
  public enum RightCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    RIGHT_GEOMETRY(5),
    RIGHT_GEOMETRY_REQUEST(6),
    RIGHT_NOT_SET(0);
    private final int value;
    private RightCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RightCase valueOf(int value) {
      return forNumber(value);
    }

    public static RightCase forNumber(int value) {
      switch (value) {
        case 5: return RIGHT_GEOMETRY;
        case 6: return RIGHT_GEOMETRY_REQUEST;
        case 0: return RIGHT_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public RightCase
  getRightCase() {
    return RightCase.forNumber(
        rightCase_);
  }

  private int paramsCase_ = 0;
  private java.lang.Object params_;
  public enum ParamsCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    BUFFER_PARAMS(11),
    CONVEX_PARAMS(12),
    RELATE_PARAMS(13),
    RANDOM_POINTS_PARAMS(14),
    GENERALIZE_PARAMS(15),
    INTERSECTION_PARAMS(16),
    OFFSET_PARAMS(17),
    CUT_PARAMS(18),
    CLIP_PARAMS(19),
    DENSIFY_PARAMS(20),
    SIMPLIFY_PARAMS(21),
    GENERALIZE_BY_AREA_PARAMS(22),
    AFFINE_TRANSFORM_PARAMS(23),
    GEODETIC_BUFFER_PARAMS(24),
    PARAMS_NOT_SET(0);
    private final int value;
    private ParamsCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ParamsCase valueOf(int value) {
      return forNumber(value);
    }

    public static ParamsCase forNumber(int value) {
      switch (value) {
        case 11: return BUFFER_PARAMS;
        case 12: return CONVEX_PARAMS;
        case 13: return RELATE_PARAMS;
        case 14: return RANDOM_POINTS_PARAMS;
        case 15: return GENERALIZE_PARAMS;
        case 16: return INTERSECTION_PARAMS;
        case 17: return OFFSET_PARAMS;
        case 18: return CUT_PARAMS;
        case 19: return CLIP_PARAMS;
        case 20: return DENSIFY_PARAMS;
        case 21: return SIMPLIFY_PARAMS;
        case 22: return GENERALIZE_BY_AREA_PARAMS;
        case 23: return AFFINE_TRANSFORM_PARAMS;
        case 24: return GEODETIC_BUFFER_PARAMS;
        case 0: return PARAMS_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public ParamsCase
  getParamsCase() {
    return ParamsCase.forNumber(
        paramsCase_);
  }

  public static final int GEOMETRY_FIELD_NUMBER = 1;
  /**
   * <pre>
   * geometry to be operated on
   * </pre>
   *
   * <code>.geo.v1.GeometryData geometry = 1 [json_name = "geometry"];</code>
   * @return Whether the geometry field is set.
   */
  @java.lang.Override
  public boolean hasGeometry() {
    return leftCase_ == 1;
  }
  /**
   * <pre>
   * geometry to be operated on
   * </pre>
   *
   * <code>.geo.v1.GeometryData geometry = 1 [json_name = "geometry"];</code>
   * @return The geometry.
   */
  @java.lang.Override
  public geo.v1.GeometryData getGeometry() {
    if (leftCase_ == 1) {
       return (geo.v1.GeometryData) left_;
    }
    return geo.v1.GeometryData.getDefaultInstance();
  }
  /**
   * <pre>
   * geometry to be operated on
   * </pre>
   *
   * <code>.geo.v1.GeometryData geometry = 1 [json_name = "geometry"];</code>
   */
  @java.lang.Override
  public geo.v1.GeometryDataOrBuilder getGeometryOrBuilder() {
    if (leftCase_ == 1) {
       return (geo.v1.GeometryData) left_;
    }
    return geo.v1.GeometryData.getDefaultInstance();
  }

  public static final int LEFT_GEOMETRY_FIELD_NUMBER = 2;
  /**
   * <pre>
   * if there are two geometries to operate on, then this is the first geometry
   * </pre>
   *
   * <code>.geo.v1.GeometryData left_geometry = 2 [json_name = "leftGeometry"];</code>
   * @return Whether the leftGeometry field is set.
   */
  @java.lang.Override
  public boolean hasLeftGeometry() {
    return leftCase_ == 2;
  }
  /**
   * <pre>
   * if there are two geometries to operate on, then this is the first geometry
   * </pre>
   *
   * <code>.geo.v1.GeometryData left_geometry = 2 [json_name = "leftGeometry"];</code>
   * @return The leftGeometry.
   */
  @java.lang.Override
  public geo.v1.GeometryData getLeftGeometry() {
    if (leftCase_ == 2) {
       return (geo.v1.GeometryData) left_;
    }
    return geo.v1.GeometryData.getDefaultInstance();
  }
  /**
   * <pre>
   * if there are two geometries to operate on, then this is the first geometry
   * </pre>
   *
   * <code>.geo.v1.GeometryData left_geometry = 2 [json_name = "leftGeometry"];</code>
   */
  @java.lang.Override
  public geo.v1.GeometryDataOrBuilder getLeftGeometryOrBuilder() {
    if (leftCase_ == 2) {
       return (geo.v1.GeometryData) left_;
    }
    return geo.v1.GeometryData.getDefaultInstance();
  }

  public static final int GEOMETRY_REQUEST_FIELD_NUMBER = 3;
  /**
   * <pre>
   * the result of the geometry request is to be operated on by this request
   * </pre>
   *
   * <code>.geo.v1.GeometryRequest geometry_request = 3 [json_name = "geometryRequest"];</code>
   * @return Whether the geometryRequest field is set.
   */
  @java.lang.Override
  public boolean hasGeometryRequest() {
    return leftCase_ == 3;
  }
  /**
   * <pre>
   * the result of the geometry request is to be operated on by this request
   * </pre>
   *
   * <code>.geo.v1.GeometryRequest geometry_request = 3 [json_name = "geometryRequest"];</code>
   * @return The geometryRequest.
   */
  @java.lang.Override
  public geo.v1.GeometryRequest getGeometryRequest() {
    if (leftCase_ == 3) {
       return (geo.v1.GeometryRequest) left_;
    }
    return geo.v1.GeometryRequest.getDefaultInstance();
  }
  /**
   * <pre>
   * the result of the geometry request is to be operated on by this request
   * </pre>
   *
   * <code>.geo.v1.GeometryRequest geometry_request = 3 [json_name = "geometryRequest"];</code>
   */
  @java.lang.Override
  public geo.v1.GeometryRequestOrBuilder getGeometryRequestOrBuilder() {
    if (leftCase_ == 3) {
       return (geo.v1.GeometryRequest) left_;
    }
    return geo.v1.GeometryRequest.getDefaultInstance();
  }

  public static final int LEFT_GEOMETRY_REQUEST_FIELD_NUMBER = 4;
  /**
   * <pre>
   * if there are two geometries, the left geometry request is to be operated on by this request
   * </pre>
   *
   * <code>.geo.v1.GeometryRequest left_geometry_request = 4 [json_name = "leftGeometryRequest"];</code>
   * @return Whether the leftGeometryRequest field is set.
   */
  @java.lang.Override
  public boolean hasLeftGeometryRequest() {
    return leftCase_ == 4;
  }
  /**
   * <pre>
   * if there are two geometries, the left geometry request is to be operated on by this request
   * </pre>
   *
   * <code>.geo.v1.GeometryRequest left_geometry_request = 4 [json_name = "leftGeometryRequest"];</code>
   * @return The leftGeometryRequest.
   */
  @java.lang.Override
  public geo.v1.GeometryRequest getLeftGeometryRequest() {
    if (leftCase_ == 4) {
       return (geo.v1.GeometryRequest) left_;
    }
    return geo.v1.GeometryRequest.getDefaultInstance();
  }
  /**
   * <pre>
   * if there are two geometries, the left geometry request is to be operated on by this request
   * </pre>
   *
   * <code>.geo.v1.GeometryRequest left_geometry_request = 4 [json_name = "leftGeometryRequest"];</code>
   */
  @java.lang.Override
  public geo.v1.GeometryRequestOrBuilder getLeftGeometryRequestOrBuilder() {
    if (leftCase_ == 4) {
       return (geo.v1.GeometryRequest) left_;
    }
    return geo.v1.GeometryRequest.getDefaultInstance();
  }

  public static final int RIGHT_GEOMETRY_FIELD_NUMBER = 5;
  /**
   * <pre>
   * if there are two geometries to operate on, then this is the second geometry
   * </pre>
   *
   * <code>.geo.v1.GeometryData right_geometry = 5 [json_name = "rightGeometry"];</code>
   * @return Whether the rightGeometry field is set.
   */
  @java.lang.Override
  public boolean hasRightGeometry() {
    return rightCase_ == 5;
  }
  /**
   * <pre>
   * if there are two geometries to operate on, then this is the second geometry
   * </pre>
   *
   * <code>.geo.v1.GeometryData right_geometry = 5 [json_name = "rightGeometry"];</code>
   * @return The rightGeometry.
   */
  @java.lang.Override
  public geo.v1.GeometryData getRightGeometry() {
    if (rightCase_ == 5) {
       return (geo.v1.GeometryData) right_;
    }
    return geo.v1.GeometryData.getDefaultInstance();
  }
  /**
   * <pre>
   * if there are two geometries to operate on, then this is the second geometry
   * </pre>
   *
   * <code>.geo.v1.GeometryData right_geometry = 5 [json_name = "rightGeometry"];</code>
   */
  @java.lang.Override
  public geo.v1.GeometryDataOrBuilder getRightGeometryOrBuilder() {
    if (rightCase_ == 5) {
       return (geo.v1.GeometryData) right_;
    }
    return geo.v1.GeometryData.getDefaultInstance();
  }

  public static final int RIGHT_GEOMETRY_REQUEST_FIELD_NUMBER = 6;
  /**
   * <pre>
   * if there are two geometries, the right geometry request is to be operated on by this request
   * </pre>
   *
   * <code>.geo.v1.GeometryRequest right_geometry_request = 6 [json_name = "rightGeometryRequest"];</code>
   * @return Whether the rightGeometryRequest field is set.
   */
  @java.lang.Override
  public boolean hasRightGeometryRequest() {
    return rightCase_ == 6;
  }
  /**
   * <pre>
   * if there are two geometries, the right geometry request is to be operated on by this request
   * </pre>
   *
   * <code>.geo.v1.GeometryRequest right_geometry_request = 6 [json_name = "rightGeometryRequest"];</code>
   * @return The rightGeometryRequest.
   */
  @java.lang.Override
  public geo.v1.GeometryRequest getRightGeometryRequest() {
    if (rightCase_ == 6) {
       return (geo.v1.GeometryRequest) right_;
    }
    return geo.v1.GeometryRequest.getDefaultInstance();
  }
  /**
   * <pre>
   * if there are two geometries, the right geometry request is to be operated on by this request
   * </pre>
   *
   * <code>.geo.v1.GeometryRequest right_geometry_request = 6 [json_name = "rightGeometryRequest"];</code>
   */
  @java.lang.Override
  public geo.v1.GeometryRequestOrBuilder getRightGeometryRequestOrBuilder() {
    if (rightCase_ == 6) {
       return (geo.v1.GeometryRequest) right_;
    }
    return geo.v1.GeometryRequest.getDefaultInstance();
  }

  public static final int OPERATOR_FIELD_NUMBER = 7;
  private int operator_;
  /**
   * <pre>
   * (default is PROJECT) geometry operation to perform on input geometries
   * </pre>
   *
   * <code>.geo.v1.OperatorType operator = 7 [json_name = "operator"];</code>
   * @return The enum numeric value on the wire for operator.
   */
  @java.lang.Override public int getOperatorValue() {
    return operator_;
  }
  /**
   * <pre>
   * (default is PROJECT) geometry operation to perform on input geometries
   * </pre>
   *
   * <code>.geo.v1.OperatorType operator = 7 [json_name = "operator"];</code>
   * @return The operator.
   */
  @java.lang.Override public geo.v1.OperatorType getOperator() {
    @SuppressWarnings("deprecation")
    geo.v1.OperatorType result = geo.v1.OperatorType.valueOf(operator_);
    return result == null ? geo.v1.OperatorType.UNRECOGNIZED : result;
  }

  public static final int RESULT_ENCODING_FIELD_NUMBER = 8;
  private int resultEncoding_;
  /**
   * <pre>
   * (default is wkb) encoding, wkt, wkb, esri_shape, etc
   * </pre>
   *
   * <code>.geo.v1.Encoding result_encoding = 8 [json_name = "resultEncoding"];</code>
   * @return The enum numeric value on the wire for resultEncoding.
   */
  @java.lang.Override public int getResultEncodingValue() {
    return resultEncoding_;
  }
  /**
   * <pre>
   * (default is wkb) encoding, wkt, wkb, esri_shape, etc
   * </pre>
   *
   * <code>.geo.v1.Encoding result_encoding = 8 [json_name = "resultEncoding"];</code>
   * @return The resultEncoding.
   */
  @java.lang.Override public geo.v1.Encoding getResultEncoding() {
    @SuppressWarnings("deprecation")
    geo.v1.Encoding result = geo.v1.Encoding.valueOf(resultEncoding_);
    return result == null ? geo.v1.Encoding.UNRECOGNIZED : result;
  }

  public static final int OPERATION_PROJ_FIELD_NUMBER = 9;
  private geo.v1.ProjectionData operationProj_;
  /**
   * <pre>
   * (optional) the spatial reference the geometric operation should take place in. If both inputs are in different spatial references, you can use this to define a common reference system for the geometric operation.
   * </pre>
   *
   * <code>.geo.v1.ProjectionData operation_proj = 9 [json_name = "operationProj"];</code>
   * @return Whether the operationProj field is set.
   */
  @java.lang.Override
  public boolean hasOperationProj() {
    return operationProj_ != null;
  }
  /**
   * <pre>
   * (optional) the spatial reference the geometric operation should take place in. If both inputs are in different spatial references, you can use this to define a common reference system for the geometric operation.
   * </pre>
   *
   * <code>.geo.v1.ProjectionData operation_proj = 9 [json_name = "operationProj"];</code>
   * @return The operationProj.
   */
  @java.lang.Override
  public geo.v1.ProjectionData getOperationProj() {
    return operationProj_ == null ? geo.v1.ProjectionData.getDefaultInstance() : operationProj_;
  }
  /**
   * <pre>
   * (optional) the spatial reference the geometric operation should take place in. If both inputs are in different spatial references, you can use this to define a common reference system for the geometric operation.
   * </pre>
   *
   * <code>.geo.v1.ProjectionData operation_proj = 9 [json_name = "operationProj"];</code>
   */
  @java.lang.Override
  public geo.v1.ProjectionDataOrBuilder getOperationProjOrBuilder() {
    return getOperationProj();
  }

  public static final int RESULT_PROJ_FIELD_NUMBER = 10;
  private geo.v1.ProjectionData resultProj_;
  /**
   * <pre>
   * (optional) after the operation has been completed, project the results to a new spatial reference.
   * </pre>
   *
   * <code>.geo.v1.ProjectionData result_proj = 10 [json_name = "resultProj"];</code>
   * @return Whether the resultProj field is set.
   */
  @java.lang.Override
  public boolean hasResultProj() {
    return resultProj_ != null;
  }
  /**
   * <pre>
   * (optional) after the operation has been completed, project the results to a new spatial reference.
   * </pre>
   *
   * <code>.geo.v1.ProjectionData result_proj = 10 [json_name = "resultProj"];</code>
   * @return The resultProj.
   */
  @java.lang.Override
  public geo.v1.ProjectionData getResultProj() {
    return resultProj_ == null ? geo.v1.ProjectionData.getDefaultInstance() : resultProj_;
  }
  /**
   * <pre>
   * (optional) after the operation has been completed, project the results to a new spatial reference.
   * </pre>
   *
   * <code>.geo.v1.ProjectionData result_proj = 10 [json_name = "resultProj"];</code>
   */
  @java.lang.Override
  public geo.v1.ProjectionDataOrBuilder getResultProjOrBuilder() {
    return getResultProj();
  }

  public static final int BUFFER_PARAMS_FIELD_NUMBER = 11;
  /**
   * <code>.geo.v1.Params.Buffer buffer_params = 11 [json_name = "bufferParams"];</code>
   * @return Whether the bufferParams field is set.
   */
  @java.lang.Override
  public boolean hasBufferParams() {
    return paramsCase_ == 11;
  }
  /**
   * <code>.geo.v1.Params.Buffer buffer_params = 11 [json_name = "bufferParams"];</code>
   * @return The bufferParams.
   */
  @java.lang.Override
  public geo.v1.Params.Buffer getBufferParams() {
    if (paramsCase_ == 11) {
       return (geo.v1.Params.Buffer) params_;
    }
    return geo.v1.Params.Buffer.getDefaultInstance();
  }
  /**
   * <code>.geo.v1.Params.Buffer buffer_params = 11 [json_name = "bufferParams"];</code>
   */
  @java.lang.Override
  public geo.v1.Params.BufferOrBuilder getBufferParamsOrBuilder() {
    if (paramsCase_ == 11) {
       return (geo.v1.Params.Buffer) params_;
    }
    return geo.v1.Params.Buffer.getDefaultInstance();
  }

  public static final int CONVEX_PARAMS_FIELD_NUMBER = 12;
  /**
   * <code>.geo.v1.Params.Convex convex_params = 12 [json_name = "convexParams"];</code>
   * @return Whether the convexParams field is set.
   */
  @java.lang.Override
  public boolean hasConvexParams() {
    return paramsCase_ == 12;
  }
  /**
   * <code>.geo.v1.Params.Convex convex_params = 12 [json_name = "convexParams"];</code>
   * @return The convexParams.
   */
  @java.lang.Override
  public geo.v1.Params.Convex getConvexParams() {
    if (paramsCase_ == 12) {
       return (geo.v1.Params.Convex) params_;
    }
    return geo.v1.Params.Convex.getDefaultInstance();
  }
  /**
   * <code>.geo.v1.Params.Convex convex_params = 12 [json_name = "convexParams"];</code>
   */
  @java.lang.Override
  public geo.v1.Params.ConvexOrBuilder getConvexParamsOrBuilder() {
    if (paramsCase_ == 12) {
       return (geo.v1.Params.Convex) params_;
    }
    return geo.v1.Params.Convex.getDefaultInstance();
  }

  public static final int RELATE_PARAMS_FIELD_NUMBER = 13;
  /**
   * <code>.geo.v1.Params.Relate relate_params = 13 [json_name = "relateParams"];</code>
   * @return Whether the relateParams field is set.
   */
  @java.lang.Override
  public boolean hasRelateParams() {
    return paramsCase_ == 13;
  }
  /**
   * <code>.geo.v1.Params.Relate relate_params = 13 [json_name = "relateParams"];</code>
   * @return The relateParams.
   */
  @java.lang.Override
  public geo.v1.Params.Relate getRelateParams() {
    if (paramsCase_ == 13) {
       return (geo.v1.Params.Relate) params_;
    }
    return geo.v1.Params.Relate.getDefaultInstance();
  }
  /**
   * <code>.geo.v1.Params.Relate relate_params = 13 [json_name = "relateParams"];</code>
   */
  @java.lang.Override
  public geo.v1.Params.RelateOrBuilder getRelateParamsOrBuilder() {
    if (paramsCase_ == 13) {
       return (geo.v1.Params.Relate) params_;
    }
    return geo.v1.Params.Relate.getDefaultInstance();
  }

  public static final int RANDOM_POINTS_PARAMS_FIELD_NUMBER = 14;
  /**
   * <code>.geo.v1.Params.RandomPoints random_points_params = 14 [json_name = "randomPointsParams"];</code>
   * @return Whether the randomPointsParams field is set.
   */
  @java.lang.Override
  public boolean hasRandomPointsParams() {
    return paramsCase_ == 14;
  }
  /**
   * <code>.geo.v1.Params.RandomPoints random_points_params = 14 [json_name = "randomPointsParams"];</code>
   * @return The randomPointsParams.
   */
  @java.lang.Override
  public geo.v1.Params.RandomPoints getRandomPointsParams() {
    if (paramsCase_ == 14) {
       return (geo.v1.Params.RandomPoints) params_;
    }
    return geo.v1.Params.RandomPoints.getDefaultInstance();
  }
  /**
   * <code>.geo.v1.Params.RandomPoints random_points_params = 14 [json_name = "randomPointsParams"];</code>
   */
  @java.lang.Override
  public geo.v1.Params.RandomPointsOrBuilder getRandomPointsParamsOrBuilder() {
    if (paramsCase_ == 14) {
       return (geo.v1.Params.RandomPoints) params_;
    }
    return geo.v1.Params.RandomPoints.getDefaultInstance();
  }

  public static final int GENERALIZE_PARAMS_FIELD_NUMBER = 15;
  /**
   * <code>.geo.v1.Params.Generalize generalize_params = 15 [json_name = "generalizeParams"];</code>
   * @return Whether the generalizeParams field is set.
   */
  @java.lang.Override
  public boolean hasGeneralizeParams() {
    return paramsCase_ == 15;
  }
  /**
   * <code>.geo.v1.Params.Generalize generalize_params = 15 [json_name = "generalizeParams"];</code>
   * @return The generalizeParams.
   */
  @java.lang.Override
  public geo.v1.Params.Generalize getGeneralizeParams() {
    if (paramsCase_ == 15) {
       return (geo.v1.Params.Generalize) params_;
    }
    return geo.v1.Params.Generalize.getDefaultInstance();
  }
  /**
   * <code>.geo.v1.Params.Generalize generalize_params = 15 [json_name = "generalizeParams"];</code>
   */
  @java.lang.Override
  public geo.v1.Params.GeneralizeOrBuilder getGeneralizeParamsOrBuilder() {
    if (paramsCase_ == 15) {
       return (geo.v1.Params.Generalize) params_;
    }
    return geo.v1.Params.Generalize.getDefaultInstance();
  }

  public static final int INTERSECTION_PARAMS_FIELD_NUMBER = 16;
  /**
   * <code>.geo.v1.Params.Intersection intersection_params = 16 [json_name = "intersectionParams"];</code>
   * @return Whether the intersectionParams field is set.
   */
  @java.lang.Override
  public boolean hasIntersectionParams() {
    return paramsCase_ == 16;
  }
  /**
   * <code>.geo.v1.Params.Intersection intersection_params = 16 [json_name = "intersectionParams"];</code>
   * @return The intersectionParams.
   */
  @java.lang.Override
  public geo.v1.Params.Intersection getIntersectionParams() {
    if (paramsCase_ == 16) {
       return (geo.v1.Params.Intersection) params_;
    }
    return geo.v1.Params.Intersection.getDefaultInstance();
  }
  /**
   * <code>.geo.v1.Params.Intersection intersection_params = 16 [json_name = "intersectionParams"];</code>
   */
  @java.lang.Override
  public geo.v1.Params.IntersectionOrBuilder getIntersectionParamsOrBuilder() {
    if (paramsCase_ == 16) {
       return (geo.v1.Params.Intersection) params_;
    }
    return geo.v1.Params.Intersection.getDefaultInstance();
  }

  public static final int OFFSET_PARAMS_FIELD_NUMBER = 17;
  /**
   * <code>.geo.v1.Params.Offset offset_params = 17 [json_name = "offsetParams"];</code>
   * @return Whether the offsetParams field is set.
   */
  @java.lang.Override
  public boolean hasOffsetParams() {
    return paramsCase_ == 17;
  }
  /**
   * <code>.geo.v1.Params.Offset offset_params = 17 [json_name = "offsetParams"];</code>
   * @return The offsetParams.
   */
  @java.lang.Override
  public geo.v1.Params.Offset getOffsetParams() {
    if (paramsCase_ == 17) {
       return (geo.v1.Params.Offset) params_;
    }
    return geo.v1.Params.Offset.getDefaultInstance();
  }
  /**
   * <code>.geo.v1.Params.Offset offset_params = 17 [json_name = "offsetParams"];</code>
   */
  @java.lang.Override
  public geo.v1.Params.OffsetOrBuilder getOffsetParamsOrBuilder() {
    if (paramsCase_ == 17) {
       return (geo.v1.Params.Offset) params_;
    }
    return geo.v1.Params.Offset.getDefaultInstance();
  }

  public static final int CUT_PARAMS_FIELD_NUMBER = 18;
  /**
   * <code>.geo.v1.Params.Cut cut_params = 18 [json_name = "cutParams"];</code>
   * @return Whether the cutParams field is set.
   */
  @java.lang.Override
  public boolean hasCutParams() {
    return paramsCase_ == 18;
  }
  /**
   * <code>.geo.v1.Params.Cut cut_params = 18 [json_name = "cutParams"];</code>
   * @return The cutParams.
   */
  @java.lang.Override
  public geo.v1.Params.Cut getCutParams() {
    if (paramsCase_ == 18) {
       return (geo.v1.Params.Cut) params_;
    }
    return geo.v1.Params.Cut.getDefaultInstance();
  }
  /**
   * <code>.geo.v1.Params.Cut cut_params = 18 [json_name = "cutParams"];</code>
   */
  @java.lang.Override
  public geo.v1.Params.CutOrBuilder getCutParamsOrBuilder() {
    if (paramsCase_ == 18) {
       return (geo.v1.Params.Cut) params_;
    }
    return geo.v1.Params.Cut.getDefaultInstance();
  }

  public static final int CLIP_PARAMS_FIELD_NUMBER = 19;
  /**
   * <code>.geo.v1.Params.Clip clip_params = 19 [json_name = "clipParams"];</code>
   * @return Whether the clipParams field is set.
   */
  @java.lang.Override
  public boolean hasClipParams() {
    return paramsCase_ == 19;
  }
  /**
   * <code>.geo.v1.Params.Clip clip_params = 19 [json_name = "clipParams"];</code>
   * @return The clipParams.
   */
  @java.lang.Override
  public geo.v1.Params.Clip getClipParams() {
    if (paramsCase_ == 19) {
       return (geo.v1.Params.Clip) params_;
    }
    return geo.v1.Params.Clip.getDefaultInstance();
  }
  /**
   * <code>.geo.v1.Params.Clip clip_params = 19 [json_name = "clipParams"];</code>
   */
  @java.lang.Override
  public geo.v1.Params.ClipOrBuilder getClipParamsOrBuilder() {
    if (paramsCase_ == 19) {
       return (geo.v1.Params.Clip) params_;
    }
    return geo.v1.Params.Clip.getDefaultInstance();
  }

  public static final int DENSIFY_PARAMS_FIELD_NUMBER = 20;
  /**
   * <code>.geo.v1.Params.Densify densify_params = 20 [json_name = "densifyParams"];</code>
   * @return Whether the densifyParams field is set.
   */
  @java.lang.Override
  public boolean hasDensifyParams() {
    return paramsCase_ == 20;
  }
  /**
   * <code>.geo.v1.Params.Densify densify_params = 20 [json_name = "densifyParams"];</code>
   * @return The densifyParams.
   */
  @java.lang.Override
  public geo.v1.Params.Densify getDensifyParams() {
    if (paramsCase_ == 20) {
       return (geo.v1.Params.Densify) params_;
    }
    return geo.v1.Params.Densify.getDefaultInstance();
  }
  /**
   * <code>.geo.v1.Params.Densify densify_params = 20 [json_name = "densifyParams"];</code>
   */
  @java.lang.Override
  public geo.v1.Params.DensifyOrBuilder getDensifyParamsOrBuilder() {
    if (paramsCase_ == 20) {
       return (geo.v1.Params.Densify) params_;
    }
    return geo.v1.Params.Densify.getDefaultInstance();
  }

  public static final int SIMPLIFY_PARAMS_FIELD_NUMBER = 21;
  /**
   * <code>.geo.v1.Params.Simplify simplify_params = 21 [json_name = "simplifyParams"];</code>
   * @return Whether the simplifyParams field is set.
   */
  @java.lang.Override
  public boolean hasSimplifyParams() {
    return paramsCase_ == 21;
  }
  /**
   * <code>.geo.v1.Params.Simplify simplify_params = 21 [json_name = "simplifyParams"];</code>
   * @return The simplifyParams.
   */
  @java.lang.Override
  public geo.v1.Params.Simplify getSimplifyParams() {
    if (paramsCase_ == 21) {
       return (geo.v1.Params.Simplify) params_;
    }
    return geo.v1.Params.Simplify.getDefaultInstance();
  }
  /**
   * <code>.geo.v1.Params.Simplify simplify_params = 21 [json_name = "simplifyParams"];</code>
   */
  @java.lang.Override
  public geo.v1.Params.SimplifyOrBuilder getSimplifyParamsOrBuilder() {
    if (paramsCase_ == 21) {
       return (geo.v1.Params.Simplify) params_;
    }
    return geo.v1.Params.Simplify.getDefaultInstance();
  }

  public static final int GENERALIZE_BY_AREA_PARAMS_FIELD_NUMBER = 22;
  /**
   * <code>.geo.v1.Params.GeneralizeByArea generalize_by_area_params = 22 [json_name = "generalizeByAreaParams"];</code>
   * @return Whether the generalizeByAreaParams field is set.
   */
  @java.lang.Override
  public boolean hasGeneralizeByAreaParams() {
    return paramsCase_ == 22;
  }
  /**
   * <code>.geo.v1.Params.GeneralizeByArea generalize_by_area_params = 22 [json_name = "generalizeByAreaParams"];</code>
   * @return The generalizeByAreaParams.
   */
  @java.lang.Override
  public geo.v1.Params.GeneralizeByArea getGeneralizeByAreaParams() {
    if (paramsCase_ == 22) {
       return (geo.v1.Params.GeneralizeByArea) params_;
    }
    return geo.v1.Params.GeneralizeByArea.getDefaultInstance();
  }
  /**
   * <code>.geo.v1.Params.GeneralizeByArea generalize_by_area_params = 22 [json_name = "generalizeByAreaParams"];</code>
   */
  @java.lang.Override
  public geo.v1.Params.GeneralizeByAreaOrBuilder getGeneralizeByAreaParamsOrBuilder() {
    if (paramsCase_ == 22) {
       return (geo.v1.Params.GeneralizeByArea) params_;
    }
    return geo.v1.Params.GeneralizeByArea.getDefaultInstance();
  }

  public static final int AFFINE_TRANSFORM_PARAMS_FIELD_NUMBER = 23;
  /**
   * <code>.geo.v1.Params.AffineTransform affine_transform_params = 23 [json_name = "affineTransformParams"];</code>
   * @return Whether the affineTransformParams field is set.
   */
  @java.lang.Override
  public boolean hasAffineTransformParams() {
    return paramsCase_ == 23;
  }
  /**
   * <code>.geo.v1.Params.AffineTransform affine_transform_params = 23 [json_name = "affineTransformParams"];</code>
   * @return The affineTransformParams.
   */
  @java.lang.Override
  public geo.v1.Params.AffineTransform getAffineTransformParams() {
    if (paramsCase_ == 23) {
       return (geo.v1.Params.AffineTransform) params_;
    }
    return geo.v1.Params.AffineTransform.getDefaultInstance();
  }
  /**
   * <code>.geo.v1.Params.AffineTransform affine_transform_params = 23 [json_name = "affineTransformParams"];</code>
   */
  @java.lang.Override
  public geo.v1.Params.AffineTransformOrBuilder getAffineTransformParamsOrBuilder() {
    if (paramsCase_ == 23) {
       return (geo.v1.Params.AffineTransform) params_;
    }
    return geo.v1.Params.AffineTransform.getDefaultInstance();
  }

  public static final int GEODETIC_BUFFER_PARAMS_FIELD_NUMBER = 24;
  /**
   * <code>.geo.v1.Params.GeodeticBuffer geodetic_buffer_params = 24 [json_name = "geodeticBufferParams"];</code>
   * @return Whether the geodeticBufferParams field is set.
   */
  @java.lang.Override
  public boolean hasGeodeticBufferParams() {
    return paramsCase_ == 24;
  }
  /**
   * <code>.geo.v1.Params.GeodeticBuffer geodetic_buffer_params = 24 [json_name = "geodeticBufferParams"];</code>
   * @return The geodeticBufferParams.
   */
  @java.lang.Override
  public geo.v1.Params.GeodeticBuffer getGeodeticBufferParams() {
    if (paramsCase_ == 24) {
       return (geo.v1.Params.GeodeticBuffer) params_;
    }
    return geo.v1.Params.GeodeticBuffer.getDefaultInstance();
  }
  /**
   * <code>.geo.v1.Params.GeodeticBuffer geodetic_buffer_params = 24 [json_name = "geodeticBufferParams"];</code>
   */
  @java.lang.Override
  public geo.v1.Params.GeodeticBufferOrBuilder getGeodeticBufferParamsOrBuilder() {
    if (paramsCase_ == 24) {
       return (geo.v1.Params.GeodeticBuffer) params_;
    }
    return geo.v1.Params.GeodeticBuffer.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (leftCase_ == 1) {
      output.writeMessage(1, (geo.v1.GeometryData) left_);
    }
    if (leftCase_ == 2) {
      output.writeMessage(2, (geo.v1.GeometryData) left_);
    }
    if (leftCase_ == 3) {
      output.writeMessage(3, (geo.v1.GeometryRequest) left_);
    }
    if (leftCase_ == 4) {
      output.writeMessage(4, (geo.v1.GeometryRequest) left_);
    }
    if (rightCase_ == 5) {
      output.writeMessage(5, (geo.v1.GeometryData) right_);
    }
    if (rightCase_ == 6) {
      output.writeMessage(6, (geo.v1.GeometryRequest) right_);
    }
    if (operator_ != geo.v1.OperatorType.UNKNOWN_OPERATOR.getNumber()) {
      output.writeEnum(7, operator_);
    }
    if (resultEncoding_ != geo.v1.Encoding.UNKNOWN_ENCODING.getNumber()) {
      output.writeEnum(8, resultEncoding_);
    }
    if (operationProj_ != null) {
      output.writeMessage(9, getOperationProj());
    }
    if (resultProj_ != null) {
      output.writeMessage(10, getResultProj());
    }
    if (paramsCase_ == 11) {
      output.writeMessage(11, (geo.v1.Params.Buffer) params_);
    }
    if (paramsCase_ == 12) {
      output.writeMessage(12, (geo.v1.Params.Convex) params_);
    }
    if (paramsCase_ == 13) {
      output.writeMessage(13, (geo.v1.Params.Relate) params_);
    }
    if (paramsCase_ == 14) {
      output.writeMessage(14, (geo.v1.Params.RandomPoints) params_);
    }
    if (paramsCase_ == 15) {
      output.writeMessage(15, (geo.v1.Params.Generalize) params_);
    }
    if (paramsCase_ == 16) {
      output.writeMessage(16, (geo.v1.Params.Intersection) params_);
    }
    if (paramsCase_ == 17) {
      output.writeMessage(17, (geo.v1.Params.Offset) params_);
    }
    if (paramsCase_ == 18) {
      output.writeMessage(18, (geo.v1.Params.Cut) params_);
    }
    if (paramsCase_ == 19) {
      output.writeMessage(19, (geo.v1.Params.Clip) params_);
    }
    if (paramsCase_ == 20) {
      output.writeMessage(20, (geo.v1.Params.Densify) params_);
    }
    if (paramsCase_ == 21) {
      output.writeMessage(21, (geo.v1.Params.Simplify) params_);
    }
    if (paramsCase_ == 22) {
      output.writeMessage(22, (geo.v1.Params.GeneralizeByArea) params_);
    }
    if (paramsCase_ == 23) {
      output.writeMessage(23, (geo.v1.Params.AffineTransform) params_);
    }
    if (paramsCase_ == 24) {
      output.writeMessage(24, (geo.v1.Params.GeodeticBuffer) params_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (leftCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (geo.v1.GeometryData) left_);
    }
    if (leftCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (geo.v1.GeometryData) left_);
    }
    if (leftCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (geo.v1.GeometryRequest) left_);
    }
    if (leftCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (geo.v1.GeometryRequest) left_);
    }
    if (rightCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, (geo.v1.GeometryData) right_);
    }
    if (rightCase_ == 6) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, (geo.v1.GeometryRequest) right_);
    }
    if (operator_ != geo.v1.OperatorType.UNKNOWN_OPERATOR.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(7, operator_);
    }
    if (resultEncoding_ != geo.v1.Encoding.UNKNOWN_ENCODING.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(8, resultEncoding_);
    }
    if (operationProj_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, getOperationProj());
    }
    if (resultProj_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, getResultProj());
    }
    if (paramsCase_ == 11) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, (geo.v1.Params.Buffer) params_);
    }
    if (paramsCase_ == 12) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(12, (geo.v1.Params.Convex) params_);
    }
    if (paramsCase_ == 13) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(13, (geo.v1.Params.Relate) params_);
    }
    if (paramsCase_ == 14) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(14, (geo.v1.Params.RandomPoints) params_);
    }
    if (paramsCase_ == 15) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(15, (geo.v1.Params.Generalize) params_);
    }
    if (paramsCase_ == 16) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(16, (geo.v1.Params.Intersection) params_);
    }
    if (paramsCase_ == 17) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(17, (geo.v1.Params.Offset) params_);
    }
    if (paramsCase_ == 18) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(18, (geo.v1.Params.Cut) params_);
    }
    if (paramsCase_ == 19) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(19, (geo.v1.Params.Clip) params_);
    }
    if (paramsCase_ == 20) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(20, (geo.v1.Params.Densify) params_);
    }
    if (paramsCase_ == 21) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(21, (geo.v1.Params.Simplify) params_);
    }
    if (paramsCase_ == 22) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(22, (geo.v1.Params.GeneralizeByArea) params_);
    }
    if (paramsCase_ == 23) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(23, (geo.v1.Params.AffineTransform) params_);
    }
    if (paramsCase_ == 24) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(24, (geo.v1.Params.GeodeticBuffer) params_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof geo.v1.GeometryRequest)) {
      return super.equals(obj);
    }
    geo.v1.GeometryRequest other = (geo.v1.GeometryRequest) obj;

    if (operator_ != other.operator_) return false;
    if (resultEncoding_ != other.resultEncoding_) return false;
    if (hasOperationProj() != other.hasOperationProj()) return false;
    if (hasOperationProj()) {
      if (!getOperationProj()
          .equals(other.getOperationProj())) return false;
    }
    if (hasResultProj() != other.hasResultProj()) return false;
    if (hasResultProj()) {
      if (!getResultProj()
          .equals(other.getResultProj())) return false;
    }
    if (!getLeftCase().equals(other.getLeftCase())) return false;
    switch (leftCase_) {
      case 1:
        if (!getGeometry()
            .equals(other.getGeometry())) return false;
        break;
      case 2:
        if (!getLeftGeometry()
            .equals(other.getLeftGeometry())) return false;
        break;
      case 3:
        if (!getGeometryRequest()
            .equals(other.getGeometryRequest())) return false;
        break;
      case 4:
        if (!getLeftGeometryRequest()
            .equals(other.getLeftGeometryRequest())) return false;
        break;
      case 0:
      default:
    }
    if (!getRightCase().equals(other.getRightCase())) return false;
    switch (rightCase_) {
      case 5:
        if (!getRightGeometry()
            .equals(other.getRightGeometry())) return false;
        break;
      case 6:
        if (!getRightGeometryRequest()
            .equals(other.getRightGeometryRequest())) return false;
        break;
      case 0:
      default:
    }
    if (!getParamsCase().equals(other.getParamsCase())) return false;
    switch (paramsCase_) {
      case 11:
        if (!getBufferParams()
            .equals(other.getBufferParams())) return false;
        break;
      case 12:
        if (!getConvexParams()
            .equals(other.getConvexParams())) return false;
        break;
      case 13:
        if (!getRelateParams()
            .equals(other.getRelateParams())) return false;
        break;
      case 14:
        if (!getRandomPointsParams()
            .equals(other.getRandomPointsParams())) return false;
        break;
      case 15:
        if (!getGeneralizeParams()
            .equals(other.getGeneralizeParams())) return false;
        break;
      case 16:
        if (!getIntersectionParams()
            .equals(other.getIntersectionParams())) return false;
        break;
      case 17:
        if (!getOffsetParams()
            .equals(other.getOffsetParams())) return false;
        break;
      case 18:
        if (!getCutParams()
            .equals(other.getCutParams())) return false;
        break;
      case 19:
        if (!getClipParams()
            .equals(other.getClipParams())) return false;
        break;
      case 20:
        if (!getDensifyParams()
            .equals(other.getDensifyParams())) return false;
        break;
      case 21:
        if (!getSimplifyParams()
            .equals(other.getSimplifyParams())) return false;
        break;
      case 22:
        if (!getGeneralizeByAreaParams()
            .equals(other.getGeneralizeByAreaParams())) return false;
        break;
      case 23:
        if (!getAffineTransformParams()
            .equals(other.getAffineTransformParams())) return false;
        break;
      case 24:
        if (!getGeodeticBufferParams()
            .equals(other.getGeodeticBufferParams())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + OPERATOR_FIELD_NUMBER;
    hash = (53 * hash) + operator_;
    hash = (37 * hash) + RESULT_ENCODING_FIELD_NUMBER;
    hash = (53 * hash) + resultEncoding_;
    if (hasOperationProj()) {
      hash = (37 * hash) + OPERATION_PROJ_FIELD_NUMBER;
      hash = (53 * hash) + getOperationProj().hashCode();
    }
    if (hasResultProj()) {
      hash = (37 * hash) + RESULT_PROJ_FIELD_NUMBER;
      hash = (53 * hash) + getResultProj().hashCode();
    }
    switch (leftCase_) {
      case 1:
        hash = (37 * hash) + GEOMETRY_FIELD_NUMBER;
        hash = (53 * hash) + getGeometry().hashCode();
        break;
      case 2:
        hash = (37 * hash) + LEFT_GEOMETRY_FIELD_NUMBER;
        hash = (53 * hash) + getLeftGeometry().hashCode();
        break;
      case 3:
        hash = (37 * hash) + GEOMETRY_REQUEST_FIELD_NUMBER;
        hash = (53 * hash) + getGeometryRequest().hashCode();
        break;
      case 4:
        hash = (37 * hash) + LEFT_GEOMETRY_REQUEST_FIELD_NUMBER;
        hash = (53 * hash) + getLeftGeometryRequest().hashCode();
        break;
      case 0:
      default:
    }
    switch (rightCase_) {
      case 5:
        hash = (37 * hash) + RIGHT_GEOMETRY_FIELD_NUMBER;
        hash = (53 * hash) + getRightGeometry().hashCode();
        break;
      case 6:
        hash = (37 * hash) + RIGHT_GEOMETRY_REQUEST_FIELD_NUMBER;
        hash = (53 * hash) + getRightGeometryRequest().hashCode();
        break;
      case 0:
      default:
    }
    switch (paramsCase_) {
      case 11:
        hash = (37 * hash) + BUFFER_PARAMS_FIELD_NUMBER;
        hash = (53 * hash) + getBufferParams().hashCode();
        break;
      case 12:
        hash = (37 * hash) + CONVEX_PARAMS_FIELD_NUMBER;
        hash = (53 * hash) + getConvexParams().hashCode();
        break;
      case 13:
        hash = (37 * hash) + RELATE_PARAMS_FIELD_NUMBER;
        hash = (53 * hash) + getRelateParams().hashCode();
        break;
      case 14:
        hash = (37 * hash) + RANDOM_POINTS_PARAMS_FIELD_NUMBER;
        hash = (53 * hash) + getRandomPointsParams().hashCode();
        break;
      case 15:
        hash = (37 * hash) + GENERALIZE_PARAMS_FIELD_NUMBER;
        hash = (53 * hash) + getGeneralizeParams().hashCode();
        break;
      case 16:
        hash = (37 * hash) + INTERSECTION_PARAMS_FIELD_NUMBER;
        hash = (53 * hash) + getIntersectionParams().hashCode();
        break;
      case 17:
        hash = (37 * hash) + OFFSET_PARAMS_FIELD_NUMBER;
        hash = (53 * hash) + getOffsetParams().hashCode();
        break;
      case 18:
        hash = (37 * hash) + CUT_PARAMS_FIELD_NUMBER;
        hash = (53 * hash) + getCutParams().hashCode();
        break;
      case 19:
        hash = (37 * hash) + CLIP_PARAMS_FIELD_NUMBER;
        hash = (53 * hash) + getClipParams().hashCode();
        break;
      case 20:
        hash = (37 * hash) + DENSIFY_PARAMS_FIELD_NUMBER;
        hash = (53 * hash) + getDensifyParams().hashCode();
        break;
      case 21:
        hash = (37 * hash) + SIMPLIFY_PARAMS_FIELD_NUMBER;
        hash = (53 * hash) + getSimplifyParams().hashCode();
        break;
      case 22:
        hash = (37 * hash) + GENERALIZE_BY_AREA_PARAMS_FIELD_NUMBER;
        hash = (53 * hash) + getGeneralizeByAreaParams().hashCode();
        break;
      case 23:
        hash = (37 * hash) + AFFINE_TRANSFORM_PARAMS_FIELD_NUMBER;
        hash = (53 * hash) + getAffineTransformParams().hashCode();
        break;
      case 24:
        hash = (37 * hash) + GEODETIC_BUFFER_PARAMS_FIELD_NUMBER;
        hash = (53 * hash) + getGeodeticBufferParams().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static geo.v1.GeometryRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static geo.v1.GeometryRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static geo.v1.GeometryRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static geo.v1.GeometryRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static geo.v1.GeometryRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static geo.v1.GeometryRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static geo.v1.GeometryRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static geo.v1.GeometryRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static geo.v1.GeometryRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static geo.v1.GeometryRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static geo.v1.GeometryRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static geo.v1.GeometryRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(geo.v1.GeometryRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * response message for insertion and updates to stac db
   * </pre>
   *
   * Protobuf type {@code geo.v1.GeometryRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:geo.v1.GeometryRequest)
      geo.v1.GeometryRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return geo.v1.GeometryProto.internal_static_geo_v1_GeometryRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return geo.v1.GeometryProto.internal_static_geo_v1_GeometryRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              geo.v1.GeometryRequest.class, geo.v1.GeometryRequest.Builder.class);
    }

    // Construct using geo.v1.GeometryRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      operator_ = 0;

      resultEncoding_ = 0;

      if (operationProjBuilder_ == null) {
        operationProj_ = null;
      } else {
        operationProj_ = null;
        operationProjBuilder_ = null;
      }
      if (resultProjBuilder_ == null) {
        resultProj_ = null;
      } else {
        resultProj_ = null;
        resultProjBuilder_ = null;
      }
      leftCase_ = 0;
      left_ = null;
      rightCase_ = 0;
      right_ = null;
      paramsCase_ = 0;
      params_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return geo.v1.GeometryProto.internal_static_geo_v1_GeometryRequest_descriptor;
    }

    @java.lang.Override
    public geo.v1.GeometryRequest getDefaultInstanceForType() {
      return geo.v1.GeometryRequest.getDefaultInstance();
    }

    @java.lang.Override
    public geo.v1.GeometryRequest build() {
      geo.v1.GeometryRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public geo.v1.GeometryRequest buildPartial() {
      geo.v1.GeometryRequest result = new geo.v1.GeometryRequest(this);
      if (leftCase_ == 1) {
        if (geometryBuilder_ == null) {
          result.left_ = left_;
        } else {
          result.left_ = geometryBuilder_.build();
        }
      }
      if (leftCase_ == 2) {
        if (leftGeometryBuilder_ == null) {
          result.left_ = left_;
        } else {
          result.left_ = leftGeometryBuilder_.build();
        }
      }
      if (leftCase_ == 3) {
        if (geometryRequestBuilder_ == null) {
          result.left_ = left_;
        } else {
          result.left_ = geometryRequestBuilder_.build();
        }
      }
      if (leftCase_ == 4) {
        if (leftGeometryRequestBuilder_ == null) {
          result.left_ = left_;
        } else {
          result.left_ = leftGeometryRequestBuilder_.build();
        }
      }
      if (rightCase_ == 5) {
        if (rightGeometryBuilder_ == null) {
          result.right_ = right_;
        } else {
          result.right_ = rightGeometryBuilder_.build();
        }
      }
      if (rightCase_ == 6) {
        if (rightGeometryRequestBuilder_ == null) {
          result.right_ = right_;
        } else {
          result.right_ = rightGeometryRequestBuilder_.build();
        }
      }
      result.operator_ = operator_;
      result.resultEncoding_ = resultEncoding_;
      if (operationProjBuilder_ == null) {
        result.operationProj_ = operationProj_;
      } else {
        result.operationProj_ = operationProjBuilder_.build();
      }
      if (resultProjBuilder_ == null) {
        result.resultProj_ = resultProj_;
      } else {
        result.resultProj_ = resultProjBuilder_.build();
      }
      if (paramsCase_ == 11) {
        if (bufferParamsBuilder_ == null) {
          result.params_ = params_;
        } else {
          result.params_ = bufferParamsBuilder_.build();
        }
      }
      if (paramsCase_ == 12) {
        if (convexParamsBuilder_ == null) {
          result.params_ = params_;
        } else {
          result.params_ = convexParamsBuilder_.build();
        }
      }
      if (paramsCase_ == 13) {
        if (relateParamsBuilder_ == null) {
          result.params_ = params_;
        } else {
          result.params_ = relateParamsBuilder_.build();
        }
      }
      if (paramsCase_ == 14) {
        if (randomPointsParamsBuilder_ == null) {
          result.params_ = params_;
        } else {
          result.params_ = randomPointsParamsBuilder_.build();
        }
      }
      if (paramsCase_ == 15) {
        if (generalizeParamsBuilder_ == null) {
          result.params_ = params_;
        } else {
          result.params_ = generalizeParamsBuilder_.build();
        }
      }
      if (paramsCase_ == 16) {
        if (intersectionParamsBuilder_ == null) {
          result.params_ = params_;
        } else {
          result.params_ = intersectionParamsBuilder_.build();
        }
      }
      if (paramsCase_ == 17) {
        if (offsetParamsBuilder_ == null) {
          result.params_ = params_;
        } else {
          result.params_ = offsetParamsBuilder_.build();
        }
      }
      if (paramsCase_ == 18) {
        if (cutParamsBuilder_ == null) {
          result.params_ = params_;
        } else {
          result.params_ = cutParamsBuilder_.build();
        }
      }
      if (paramsCase_ == 19) {
        if (clipParamsBuilder_ == null) {
          result.params_ = params_;
        } else {
          result.params_ = clipParamsBuilder_.build();
        }
      }
      if (paramsCase_ == 20) {
        if (densifyParamsBuilder_ == null) {
          result.params_ = params_;
        } else {
          result.params_ = densifyParamsBuilder_.build();
        }
      }
      if (paramsCase_ == 21) {
        if (simplifyParamsBuilder_ == null) {
          result.params_ = params_;
        } else {
          result.params_ = simplifyParamsBuilder_.build();
        }
      }
      if (paramsCase_ == 22) {
        if (generalizeByAreaParamsBuilder_ == null) {
          result.params_ = params_;
        } else {
          result.params_ = generalizeByAreaParamsBuilder_.build();
        }
      }
      if (paramsCase_ == 23) {
        if (affineTransformParamsBuilder_ == null) {
          result.params_ = params_;
        } else {
          result.params_ = affineTransformParamsBuilder_.build();
        }
      }
      if (paramsCase_ == 24) {
        if (geodeticBufferParamsBuilder_ == null) {
          result.params_ = params_;
        } else {
          result.params_ = geodeticBufferParamsBuilder_.build();
        }
      }
      result.leftCase_ = leftCase_;
      result.rightCase_ = rightCase_;
      result.paramsCase_ = paramsCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof geo.v1.GeometryRequest) {
        return mergeFrom((geo.v1.GeometryRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(geo.v1.GeometryRequest other) {
      if (other == geo.v1.GeometryRequest.getDefaultInstance()) return this;
      if (other.operator_ != 0) {
        setOperatorValue(other.getOperatorValue());
      }
      if (other.resultEncoding_ != 0) {
        setResultEncodingValue(other.getResultEncodingValue());
      }
      if (other.hasOperationProj()) {
        mergeOperationProj(other.getOperationProj());
      }
      if (other.hasResultProj()) {
        mergeResultProj(other.getResultProj());
      }
      switch (other.getLeftCase()) {
        case GEOMETRY: {
          mergeGeometry(other.getGeometry());
          break;
        }
        case LEFT_GEOMETRY: {
          mergeLeftGeometry(other.getLeftGeometry());
          break;
        }
        case GEOMETRY_REQUEST: {
          mergeGeometryRequest(other.getGeometryRequest());
          break;
        }
        case LEFT_GEOMETRY_REQUEST: {
          mergeLeftGeometryRequest(other.getLeftGeometryRequest());
          break;
        }
        case LEFT_NOT_SET: {
          break;
        }
      }
      switch (other.getRightCase()) {
        case RIGHT_GEOMETRY: {
          mergeRightGeometry(other.getRightGeometry());
          break;
        }
        case RIGHT_GEOMETRY_REQUEST: {
          mergeRightGeometryRequest(other.getRightGeometryRequest());
          break;
        }
        case RIGHT_NOT_SET: {
          break;
        }
      }
      switch (other.getParamsCase()) {
        case BUFFER_PARAMS: {
          mergeBufferParams(other.getBufferParams());
          break;
        }
        case CONVEX_PARAMS: {
          mergeConvexParams(other.getConvexParams());
          break;
        }
        case RELATE_PARAMS: {
          mergeRelateParams(other.getRelateParams());
          break;
        }
        case RANDOM_POINTS_PARAMS: {
          mergeRandomPointsParams(other.getRandomPointsParams());
          break;
        }
        case GENERALIZE_PARAMS: {
          mergeGeneralizeParams(other.getGeneralizeParams());
          break;
        }
        case INTERSECTION_PARAMS: {
          mergeIntersectionParams(other.getIntersectionParams());
          break;
        }
        case OFFSET_PARAMS: {
          mergeOffsetParams(other.getOffsetParams());
          break;
        }
        case CUT_PARAMS: {
          mergeCutParams(other.getCutParams());
          break;
        }
        case CLIP_PARAMS: {
          mergeClipParams(other.getClipParams());
          break;
        }
        case DENSIFY_PARAMS: {
          mergeDensifyParams(other.getDensifyParams());
          break;
        }
        case SIMPLIFY_PARAMS: {
          mergeSimplifyParams(other.getSimplifyParams());
          break;
        }
        case GENERALIZE_BY_AREA_PARAMS: {
          mergeGeneralizeByAreaParams(other.getGeneralizeByAreaParams());
          break;
        }
        case AFFINE_TRANSFORM_PARAMS: {
          mergeAffineTransformParams(other.getAffineTransformParams());
          break;
        }
        case GEODETIC_BUFFER_PARAMS: {
          mergeGeodeticBufferParams(other.getGeodeticBufferParams());
          break;
        }
        case PARAMS_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      geo.v1.GeometryRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (geo.v1.GeometryRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int leftCase_ = 0;
    private java.lang.Object left_;
    public LeftCase
        getLeftCase() {
      return LeftCase.forNumber(
          leftCase_);
    }

    public Builder clearLeft() {
      leftCase_ = 0;
      left_ = null;
      onChanged();
      return this;
    }

    private int rightCase_ = 0;
    private java.lang.Object right_;
    public RightCase
        getRightCase() {
      return RightCase.forNumber(
          rightCase_);
    }

    public Builder clearRight() {
      rightCase_ = 0;
      right_ = null;
      onChanged();
      return this;
    }

    private int paramsCase_ = 0;
    private java.lang.Object params_;
    public ParamsCase
        getParamsCase() {
      return ParamsCase.forNumber(
          paramsCase_);
    }

    public Builder clearParams() {
      paramsCase_ = 0;
      params_ = null;
      onChanged();
      return this;
    }


    private com.google.protobuf.SingleFieldBuilderV3<
        geo.v1.GeometryData, geo.v1.GeometryData.Builder, geo.v1.GeometryDataOrBuilder> geometryBuilder_;
    /**
     * <pre>
     * geometry to be operated on
     * </pre>
     *
     * <code>.geo.v1.GeometryData geometry = 1 [json_name = "geometry"];</code>
     * @return Whether the geometry field is set.
     */
    @java.lang.Override
    public boolean hasGeometry() {
      return leftCase_ == 1;
    }
    /**
     * <pre>
     * geometry to be operated on
     * </pre>
     *
     * <code>.geo.v1.GeometryData geometry = 1 [json_name = "geometry"];</code>
     * @return The geometry.
     */
    @java.lang.Override
    public geo.v1.GeometryData getGeometry() {
      if (geometryBuilder_ == null) {
        if (leftCase_ == 1) {
          return (geo.v1.GeometryData) left_;
        }
        return geo.v1.GeometryData.getDefaultInstance();
      } else {
        if (leftCase_ == 1) {
          return geometryBuilder_.getMessage();
        }
        return geo.v1.GeometryData.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * geometry to be operated on
     * </pre>
     *
     * <code>.geo.v1.GeometryData geometry = 1 [json_name = "geometry"];</code>
     */
    public Builder setGeometry(geo.v1.GeometryData value) {
      if (geometryBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        left_ = value;
        onChanged();
      } else {
        geometryBuilder_.setMessage(value);
      }
      leftCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * geometry to be operated on
     * </pre>
     *
     * <code>.geo.v1.GeometryData geometry = 1 [json_name = "geometry"];</code>
     */
    public Builder setGeometry(
        geo.v1.GeometryData.Builder builderForValue) {
      if (geometryBuilder_ == null) {
        left_ = builderForValue.build();
        onChanged();
      } else {
        geometryBuilder_.setMessage(builderForValue.build());
      }
      leftCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * geometry to be operated on
     * </pre>
     *
     * <code>.geo.v1.GeometryData geometry = 1 [json_name = "geometry"];</code>
     */
    public Builder mergeGeometry(geo.v1.GeometryData value) {
      if (geometryBuilder_ == null) {
        if (leftCase_ == 1 &&
            left_ != geo.v1.GeometryData.getDefaultInstance()) {
          left_ = geo.v1.GeometryData.newBuilder((geo.v1.GeometryData) left_)
              .mergeFrom(value).buildPartial();
        } else {
          left_ = value;
        }
        onChanged();
      } else {
        if (leftCase_ == 1) {
          geometryBuilder_.mergeFrom(value);
        }
        geometryBuilder_.setMessage(value);
      }
      leftCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * geometry to be operated on
     * </pre>
     *
     * <code>.geo.v1.GeometryData geometry = 1 [json_name = "geometry"];</code>
     */
    public Builder clearGeometry() {
      if (geometryBuilder_ == null) {
        if (leftCase_ == 1) {
          leftCase_ = 0;
          left_ = null;
          onChanged();
        }
      } else {
        if (leftCase_ == 1) {
          leftCase_ = 0;
          left_ = null;
        }
        geometryBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * geometry to be operated on
     * </pre>
     *
     * <code>.geo.v1.GeometryData geometry = 1 [json_name = "geometry"];</code>
     */
    public geo.v1.GeometryData.Builder getGeometryBuilder() {
      return getGeometryFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * geometry to be operated on
     * </pre>
     *
     * <code>.geo.v1.GeometryData geometry = 1 [json_name = "geometry"];</code>
     */
    @java.lang.Override
    public geo.v1.GeometryDataOrBuilder getGeometryOrBuilder() {
      if ((leftCase_ == 1) && (geometryBuilder_ != null)) {
        return geometryBuilder_.getMessageOrBuilder();
      } else {
        if (leftCase_ == 1) {
          return (geo.v1.GeometryData) left_;
        }
        return geo.v1.GeometryData.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * geometry to be operated on
     * </pre>
     *
     * <code>.geo.v1.GeometryData geometry = 1 [json_name = "geometry"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        geo.v1.GeometryData, geo.v1.GeometryData.Builder, geo.v1.GeometryDataOrBuilder> 
        getGeometryFieldBuilder() {
      if (geometryBuilder_ == null) {
        if (!(leftCase_ == 1)) {
          left_ = geo.v1.GeometryData.getDefaultInstance();
        }
        geometryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            geo.v1.GeometryData, geo.v1.GeometryData.Builder, geo.v1.GeometryDataOrBuilder>(
                (geo.v1.GeometryData) left_,
                getParentForChildren(),
                isClean());
        left_ = null;
      }
      leftCase_ = 1;
      onChanged();;
      return geometryBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        geo.v1.GeometryData, geo.v1.GeometryData.Builder, geo.v1.GeometryDataOrBuilder> leftGeometryBuilder_;
    /**
     * <pre>
     * if there are two geometries to operate on, then this is the first geometry
     * </pre>
     *
     * <code>.geo.v1.GeometryData left_geometry = 2 [json_name = "leftGeometry"];</code>
     * @return Whether the leftGeometry field is set.
     */
    @java.lang.Override
    public boolean hasLeftGeometry() {
      return leftCase_ == 2;
    }
    /**
     * <pre>
     * if there are two geometries to operate on, then this is the first geometry
     * </pre>
     *
     * <code>.geo.v1.GeometryData left_geometry = 2 [json_name = "leftGeometry"];</code>
     * @return The leftGeometry.
     */
    @java.lang.Override
    public geo.v1.GeometryData getLeftGeometry() {
      if (leftGeometryBuilder_ == null) {
        if (leftCase_ == 2) {
          return (geo.v1.GeometryData) left_;
        }
        return geo.v1.GeometryData.getDefaultInstance();
      } else {
        if (leftCase_ == 2) {
          return leftGeometryBuilder_.getMessage();
        }
        return geo.v1.GeometryData.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * if there are two geometries to operate on, then this is the first geometry
     * </pre>
     *
     * <code>.geo.v1.GeometryData left_geometry = 2 [json_name = "leftGeometry"];</code>
     */
    public Builder setLeftGeometry(geo.v1.GeometryData value) {
      if (leftGeometryBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        left_ = value;
        onChanged();
      } else {
        leftGeometryBuilder_.setMessage(value);
      }
      leftCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * if there are two geometries to operate on, then this is the first geometry
     * </pre>
     *
     * <code>.geo.v1.GeometryData left_geometry = 2 [json_name = "leftGeometry"];</code>
     */
    public Builder setLeftGeometry(
        geo.v1.GeometryData.Builder builderForValue) {
      if (leftGeometryBuilder_ == null) {
        left_ = builderForValue.build();
        onChanged();
      } else {
        leftGeometryBuilder_.setMessage(builderForValue.build());
      }
      leftCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * if there are two geometries to operate on, then this is the first geometry
     * </pre>
     *
     * <code>.geo.v1.GeometryData left_geometry = 2 [json_name = "leftGeometry"];</code>
     */
    public Builder mergeLeftGeometry(geo.v1.GeometryData value) {
      if (leftGeometryBuilder_ == null) {
        if (leftCase_ == 2 &&
            left_ != geo.v1.GeometryData.getDefaultInstance()) {
          left_ = geo.v1.GeometryData.newBuilder((geo.v1.GeometryData) left_)
              .mergeFrom(value).buildPartial();
        } else {
          left_ = value;
        }
        onChanged();
      } else {
        if (leftCase_ == 2) {
          leftGeometryBuilder_.mergeFrom(value);
        }
        leftGeometryBuilder_.setMessage(value);
      }
      leftCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * if there are two geometries to operate on, then this is the first geometry
     * </pre>
     *
     * <code>.geo.v1.GeometryData left_geometry = 2 [json_name = "leftGeometry"];</code>
     */
    public Builder clearLeftGeometry() {
      if (leftGeometryBuilder_ == null) {
        if (leftCase_ == 2) {
          leftCase_ = 0;
          left_ = null;
          onChanged();
        }
      } else {
        if (leftCase_ == 2) {
          leftCase_ = 0;
          left_ = null;
        }
        leftGeometryBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * if there are two geometries to operate on, then this is the first geometry
     * </pre>
     *
     * <code>.geo.v1.GeometryData left_geometry = 2 [json_name = "leftGeometry"];</code>
     */
    public geo.v1.GeometryData.Builder getLeftGeometryBuilder() {
      return getLeftGeometryFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * if there are two geometries to operate on, then this is the first geometry
     * </pre>
     *
     * <code>.geo.v1.GeometryData left_geometry = 2 [json_name = "leftGeometry"];</code>
     */
    @java.lang.Override
    public geo.v1.GeometryDataOrBuilder getLeftGeometryOrBuilder() {
      if ((leftCase_ == 2) && (leftGeometryBuilder_ != null)) {
        return leftGeometryBuilder_.getMessageOrBuilder();
      } else {
        if (leftCase_ == 2) {
          return (geo.v1.GeometryData) left_;
        }
        return geo.v1.GeometryData.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * if there are two geometries to operate on, then this is the first geometry
     * </pre>
     *
     * <code>.geo.v1.GeometryData left_geometry = 2 [json_name = "leftGeometry"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        geo.v1.GeometryData, geo.v1.GeometryData.Builder, geo.v1.GeometryDataOrBuilder> 
        getLeftGeometryFieldBuilder() {
      if (leftGeometryBuilder_ == null) {
        if (!(leftCase_ == 2)) {
          left_ = geo.v1.GeometryData.getDefaultInstance();
        }
        leftGeometryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            geo.v1.GeometryData, geo.v1.GeometryData.Builder, geo.v1.GeometryDataOrBuilder>(
                (geo.v1.GeometryData) left_,
                getParentForChildren(),
                isClean());
        left_ = null;
      }
      leftCase_ = 2;
      onChanged();;
      return leftGeometryBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        geo.v1.GeometryRequest, geo.v1.GeometryRequest.Builder, geo.v1.GeometryRequestOrBuilder> geometryRequestBuilder_;
    /**
     * <pre>
     * the result of the geometry request is to be operated on by this request
     * </pre>
     *
     * <code>.geo.v1.GeometryRequest geometry_request = 3 [json_name = "geometryRequest"];</code>
     * @return Whether the geometryRequest field is set.
     */
    @java.lang.Override
    public boolean hasGeometryRequest() {
      return leftCase_ == 3;
    }
    /**
     * <pre>
     * the result of the geometry request is to be operated on by this request
     * </pre>
     *
     * <code>.geo.v1.GeometryRequest geometry_request = 3 [json_name = "geometryRequest"];</code>
     * @return The geometryRequest.
     */
    @java.lang.Override
    public geo.v1.GeometryRequest getGeometryRequest() {
      if (geometryRequestBuilder_ == null) {
        if (leftCase_ == 3) {
          return (geo.v1.GeometryRequest) left_;
        }
        return geo.v1.GeometryRequest.getDefaultInstance();
      } else {
        if (leftCase_ == 3) {
          return geometryRequestBuilder_.getMessage();
        }
        return geo.v1.GeometryRequest.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * the result of the geometry request is to be operated on by this request
     * </pre>
     *
     * <code>.geo.v1.GeometryRequest geometry_request = 3 [json_name = "geometryRequest"];</code>
     */
    public Builder setGeometryRequest(geo.v1.GeometryRequest value) {
      if (geometryRequestBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        left_ = value;
        onChanged();
      } else {
        geometryRequestBuilder_.setMessage(value);
      }
      leftCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * the result of the geometry request is to be operated on by this request
     * </pre>
     *
     * <code>.geo.v1.GeometryRequest geometry_request = 3 [json_name = "geometryRequest"];</code>
     */
    public Builder setGeometryRequest(
        geo.v1.GeometryRequest.Builder builderForValue) {
      if (geometryRequestBuilder_ == null) {
        left_ = builderForValue.build();
        onChanged();
      } else {
        geometryRequestBuilder_.setMessage(builderForValue.build());
      }
      leftCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * the result of the geometry request is to be operated on by this request
     * </pre>
     *
     * <code>.geo.v1.GeometryRequest geometry_request = 3 [json_name = "geometryRequest"];</code>
     */
    public Builder mergeGeometryRequest(geo.v1.GeometryRequest value) {
      if (geometryRequestBuilder_ == null) {
        if (leftCase_ == 3 &&
            left_ != geo.v1.GeometryRequest.getDefaultInstance()) {
          left_ = geo.v1.GeometryRequest.newBuilder((geo.v1.GeometryRequest) left_)
              .mergeFrom(value).buildPartial();
        } else {
          left_ = value;
        }
        onChanged();
      } else {
        if (leftCase_ == 3) {
          geometryRequestBuilder_.mergeFrom(value);
        }
        geometryRequestBuilder_.setMessage(value);
      }
      leftCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * the result of the geometry request is to be operated on by this request
     * </pre>
     *
     * <code>.geo.v1.GeometryRequest geometry_request = 3 [json_name = "geometryRequest"];</code>
     */
    public Builder clearGeometryRequest() {
      if (geometryRequestBuilder_ == null) {
        if (leftCase_ == 3) {
          leftCase_ = 0;
          left_ = null;
          onChanged();
        }
      } else {
        if (leftCase_ == 3) {
          leftCase_ = 0;
          left_ = null;
        }
        geometryRequestBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * the result of the geometry request is to be operated on by this request
     * </pre>
     *
     * <code>.geo.v1.GeometryRequest geometry_request = 3 [json_name = "geometryRequest"];</code>
     */
    public geo.v1.GeometryRequest.Builder getGeometryRequestBuilder() {
      return getGeometryRequestFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * the result of the geometry request is to be operated on by this request
     * </pre>
     *
     * <code>.geo.v1.GeometryRequest geometry_request = 3 [json_name = "geometryRequest"];</code>
     */
    @java.lang.Override
    public geo.v1.GeometryRequestOrBuilder getGeometryRequestOrBuilder() {
      if ((leftCase_ == 3) && (geometryRequestBuilder_ != null)) {
        return geometryRequestBuilder_.getMessageOrBuilder();
      } else {
        if (leftCase_ == 3) {
          return (geo.v1.GeometryRequest) left_;
        }
        return geo.v1.GeometryRequest.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * the result of the geometry request is to be operated on by this request
     * </pre>
     *
     * <code>.geo.v1.GeometryRequest geometry_request = 3 [json_name = "geometryRequest"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        geo.v1.GeometryRequest, geo.v1.GeometryRequest.Builder, geo.v1.GeometryRequestOrBuilder> 
        getGeometryRequestFieldBuilder() {
      if (geometryRequestBuilder_ == null) {
        if (!(leftCase_ == 3)) {
          left_ = geo.v1.GeometryRequest.getDefaultInstance();
        }
        geometryRequestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            geo.v1.GeometryRequest, geo.v1.GeometryRequest.Builder, geo.v1.GeometryRequestOrBuilder>(
                (geo.v1.GeometryRequest) left_,
                getParentForChildren(),
                isClean());
        left_ = null;
      }
      leftCase_ = 3;
      onChanged();;
      return geometryRequestBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        geo.v1.GeometryRequest, geo.v1.GeometryRequest.Builder, geo.v1.GeometryRequestOrBuilder> leftGeometryRequestBuilder_;
    /**
     * <pre>
     * if there are two geometries, the left geometry request is to be operated on by this request
     * </pre>
     *
     * <code>.geo.v1.GeometryRequest left_geometry_request = 4 [json_name = "leftGeometryRequest"];</code>
     * @return Whether the leftGeometryRequest field is set.
     */
    @java.lang.Override
    public boolean hasLeftGeometryRequest() {
      return leftCase_ == 4;
    }
    /**
     * <pre>
     * if there are two geometries, the left geometry request is to be operated on by this request
     * </pre>
     *
     * <code>.geo.v1.GeometryRequest left_geometry_request = 4 [json_name = "leftGeometryRequest"];</code>
     * @return The leftGeometryRequest.
     */
    @java.lang.Override
    public geo.v1.GeometryRequest getLeftGeometryRequest() {
      if (leftGeometryRequestBuilder_ == null) {
        if (leftCase_ == 4) {
          return (geo.v1.GeometryRequest) left_;
        }
        return geo.v1.GeometryRequest.getDefaultInstance();
      } else {
        if (leftCase_ == 4) {
          return leftGeometryRequestBuilder_.getMessage();
        }
        return geo.v1.GeometryRequest.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * if there are two geometries, the left geometry request is to be operated on by this request
     * </pre>
     *
     * <code>.geo.v1.GeometryRequest left_geometry_request = 4 [json_name = "leftGeometryRequest"];</code>
     */
    public Builder setLeftGeometryRequest(geo.v1.GeometryRequest value) {
      if (leftGeometryRequestBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        left_ = value;
        onChanged();
      } else {
        leftGeometryRequestBuilder_.setMessage(value);
      }
      leftCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * if there are two geometries, the left geometry request is to be operated on by this request
     * </pre>
     *
     * <code>.geo.v1.GeometryRequest left_geometry_request = 4 [json_name = "leftGeometryRequest"];</code>
     */
    public Builder setLeftGeometryRequest(
        geo.v1.GeometryRequest.Builder builderForValue) {
      if (leftGeometryRequestBuilder_ == null) {
        left_ = builderForValue.build();
        onChanged();
      } else {
        leftGeometryRequestBuilder_.setMessage(builderForValue.build());
      }
      leftCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * if there are two geometries, the left geometry request is to be operated on by this request
     * </pre>
     *
     * <code>.geo.v1.GeometryRequest left_geometry_request = 4 [json_name = "leftGeometryRequest"];</code>
     */
    public Builder mergeLeftGeometryRequest(geo.v1.GeometryRequest value) {
      if (leftGeometryRequestBuilder_ == null) {
        if (leftCase_ == 4 &&
            left_ != geo.v1.GeometryRequest.getDefaultInstance()) {
          left_ = geo.v1.GeometryRequest.newBuilder((geo.v1.GeometryRequest) left_)
              .mergeFrom(value).buildPartial();
        } else {
          left_ = value;
        }
        onChanged();
      } else {
        if (leftCase_ == 4) {
          leftGeometryRequestBuilder_.mergeFrom(value);
        }
        leftGeometryRequestBuilder_.setMessage(value);
      }
      leftCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * if there are two geometries, the left geometry request is to be operated on by this request
     * </pre>
     *
     * <code>.geo.v1.GeometryRequest left_geometry_request = 4 [json_name = "leftGeometryRequest"];</code>
     */
    public Builder clearLeftGeometryRequest() {
      if (leftGeometryRequestBuilder_ == null) {
        if (leftCase_ == 4) {
          leftCase_ = 0;
          left_ = null;
          onChanged();
        }
      } else {
        if (leftCase_ == 4) {
          leftCase_ = 0;
          left_ = null;
        }
        leftGeometryRequestBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * if there are two geometries, the left geometry request is to be operated on by this request
     * </pre>
     *
     * <code>.geo.v1.GeometryRequest left_geometry_request = 4 [json_name = "leftGeometryRequest"];</code>
     */
    public geo.v1.GeometryRequest.Builder getLeftGeometryRequestBuilder() {
      return getLeftGeometryRequestFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * if there are two geometries, the left geometry request is to be operated on by this request
     * </pre>
     *
     * <code>.geo.v1.GeometryRequest left_geometry_request = 4 [json_name = "leftGeometryRequest"];</code>
     */
    @java.lang.Override
    public geo.v1.GeometryRequestOrBuilder getLeftGeometryRequestOrBuilder() {
      if ((leftCase_ == 4) && (leftGeometryRequestBuilder_ != null)) {
        return leftGeometryRequestBuilder_.getMessageOrBuilder();
      } else {
        if (leftCase_ == 4) {
          return (geo.v1.GeometryRequest) left_;
        }
        return geo.v1.GeometryRequest.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * if there are two geometries, the left geometry request is to be operated on by this request
     * </pre>
     *
     * <code>.geo.v1.GeometryRequest left_geometry_request = 4 [json_name = "leftGeometryRequest"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        geo.v1.GeometryRequest, geo.v1.GeometryRequest.Builder, geo.v1.GeometryRequestOrBuilder> 
        getLeftGeometryRequestFieldBuilder() {
      if (leftGeometryRequestBuilder_ == null) {
        if (!(leftCase_ == 4)) {
          left_ = geo.v1.GeometryRequest.getDefaultInstance();
        }
        leftGeometryRequestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            geo.v1.GeometryRequest, geo.v1.GeometryRequest.Builder, geo.v1.GeometryRequestOrBuilder>(
                (geo.v1.GeometryRequest) left_,
                getParentForChildren(),
                isClean());
        left_ = null;
      }
      leftCase_ = 4;
      onChanged();;
      return leftGeometryRequestBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        geo.v1.GeometryData, geo.v1.GeometryData.Builder, geo.v1.GeometryDataOrBuilder> rightGeometryBuilder_;
    /**
     * <pre>
     * if there are two geometries to operate on, then this is the second geometry
     * </pre>
     *
     * <code>.geo.v1.GeometryData right_geometry = 5 [json_name = "rightGeometry"];</code>
     * @return Whether the rightGeometry field is set.
     */
    @java.lang.Override
    public boolean hasRightGeometry() {
      return rightCase_ == 5;
    }
    /**
     * <pre>
     * if there are two geometries to operate on, then this is the second geometry
     * </pre>
     *
     * <code>.geo.v1.GeometryData right_geometry = 5 [json_name = "rightGeometry"];</code>
     * @return The rightGeometry.
     */
    @java.lang.Override
    public geo.v1.GeometryData getRightGeometry() {
      if (rightGeometryBuilder_ == null) {
        if (rightCase_ == 5) {
          return (geo.v1.GeometryData) right_;
        }
        return geo.v1.GeometryData.getDefaultInstance();
      } else {
        if (rightCase_ == 5) {
          return rightGeometryBuilder_.getMessage();
        }
        return geo.v1.GeometryData.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * if there are two geometries to operate on, then this is the second geometry
     * </pre>
     *
     * <code>.geo.v1.GeometryData right_geometry = 5 [json_name = "rightGeometry"];</code>
     */
    public Builder setRightGeometry(geo.v1.GeometryData value) {
      if (rightGeometryBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        right_ = value;
        onChanged();
      } else {
        rightGeometryBuilder_.setMessage(value);
      }
      rightCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * if there are two geometries to operate on, then this is the second geometry
     * </pre>
     *
     * <code>.geo.v1.GeometryData right_geometry = 5 [json_name = "rightGeometry"];</code>
     */
    public Builder setRightGeometry(
        geo.v1.GeometryData.Builder builderForValue) {
      if (rightGeometryBuilder_ == null) {
        right_ = builderForValue.build();
        onChanged();
      } else {
        rightGeometryBuilder_.setMessage(builderForValue.build());
      }
      rightCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * if there are two geometries to operate on, then this is the second geometry
     * </pre>
     *
     * <code>.geo.v1.GeometryData right_geometry = 5 [json_name = "rightGeometry"];</code>
     */
    public Builder mergeRightGeometry(geo.v1.GeometryData value) {
      if (rightGeometryBuilder_ == null) {
        if (rightCase_ == 5 &&
            right_ != geo.v1.GeometryData.getDefaultInstance()) {
          right_ = geo.v1.GeometryData.newBuilder((geo.v1.GeometryData) right_)
              .mergeFrom(value).buildPartial();
        } else {
          right_ = value;
        }
        onChanged();
      } else {
        if (rightCase_ == 5) {
          rightGeometryBuilder_.mergeFrom(value);
        }
        rightGeometryBuilder_.setMessage(value);
      }
      rightCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * if there are two geometries to operate on, then this is the second geometry
     * </pre>
     *
     * <code>.geo.v1.GeometryData right_geometry = 5 [json_name = "rightGeometry"];</code>
     */
    public Builder clearRightGeometry() {
      if (rightGeometryBuilder_ == null) {
        if (rightCase_ == 5) {
          rightCase_ = 0;
          right_ = null;
          onChanged();
        }
      } else {
        if (rightCase_ == 5) {
          rightCase_ = 0;
          right_ = null;
        }
        rightGeometryBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * if there are two geometries to operate on, then this is the second geometry
     * </pre>
     *
     * <code>.geo.v1.GeometryData right_geometry = 5 [json_name = "rightGeometry"];</code>
     */
    public geo.v1.GeometryData.Builder getRightGeometryBuilder() {
      return getRightGeometryFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * if there are two geometries to operate on, then this is the second geometry
     * </pre>
     *
     * <code>.geo.v1.GeometryData right_geometry = 5 [json_name = "rightGeometry"];</code>
     */
    @java.lang.Override
    public geo.v1.GeometryDataOrBuilder getRightGeometryOrBuilder() {
      if ((rightCase_ == 5) && (rightGeometryBuilder_ != null)) {
        return rightGeometryBuilder_.getMessageOrBuilder();
      } else {
        if (rightCase_ == 5) {
          return (geo.v1.GeometryData) right_;
        }
        return geo.v1.GeometryData.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * if there are two geometries to operate on, then this is the second geometry
     * </pre>
     *
     * <code>.geo.v1.GeometryData right_geometry = 5 [json_name = "rightGeometry"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        geo.v1.GeometryData, geo.v1.GeometryData.Builder, geo.v1.GeometryDataOrBuilder> 
        getRightGeometryFieldBuilder() {
      if (rightGeometryBuilder_ == null) {
        if (!(rightCase_ == 5)) {
          right_ = geo.v1.GeometryData.getDefaultInstance();
        }
        rightGeometryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            geo.v1.GeometryData, geo.v1.GeometryData.Builder, geo.v1.GeometryDataOrBuilder>(
                (geo.v1.GeometryData) right_,
                getParentForChildren(),
                isClean());
        right_ = null;
      }
      rightCase_ = 5;
      onChanged();;
      return rightGeometryBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        geo.v1.GeometryRequest, geo.v1.GeometryRequest.Builder, geo.v1.GeometryRequestOrBuilder> rightGeometryRequestBuilder_;
    /**
     * <pre>
     * if there are two geometries, the right geometry request is to be operated on by this request
     * </pre>
     *
     * <code>.geo.v1.GeometryRequest right_geometry_request = 6 [json_name = "rightGeometryRequest"];</code>
     * @return Whether the rightGeometryRequest field is set.
     */
    @java.lang.Override
    public boolean hasRightGeometryRequest() {
      return rightCase_ == 6;
    }
    /**
     * <pre>
     * if there are two geometries, the right geometry request is to be operated on by this request
     * </pre>
     *
     * <code>.geo.v1.GeometryRequest right_geometry_request = 6 [json_name = "rightGeometryRequest"];</code>
     * @return The rightGeometryRequest.
     */
    @java.lang.Override
    public geo.v1.GeometryRequest getRightGeometryRequest() {
      if (rightGeometryRequestBuilder_ == null) {
        if (rightCase_ == 6) {
          return (geo.v1.GeometryRequest) right_;
        }
        return geo.v1.GeometryRequest.getDefaultInstance();
      } else {
        if (rightCase_ == 6) {
          return rightGeometryRequestBuilder_.getMessage();
        }
        return geo.v1.GeometryRequest.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * if there are two geometries, the right geometry request is to be operated on by this request
     * </pre>
     *
     * <code>.geo.v1.GeometryRequest right_geometry_request = 6 [json_name = "rightGeometryRequest"];</code>
     */
    public Builder setRightGeometryRequest(geo.v1.GeometryRequest value) {
      if (rightGeometryRequestBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        right_ = value;
        onChanged();
      } else {
        rightGeometryRequestBuilder_.setMessage(value);
      }
      rightCase_ = 6;
      return this;
    }
    /**
     * <pre>
     * if there are two geometries, the right geometry request is to be operated on by this request
     * </pre>
     *
     * <code>.geo.v1.GeometryRequest right_geometry_request = 6 [json_name = "rightGeometryRequest"];</code>
     */
    public Builder setRightGeometryRequest(
        geo.v1.GeometryRequest.Builder builderForValue) {
      if (rightGeometryRequestBuilder_ == null) {
        right_ = builderForValue.build();
        onChanged();
      } else {
        rightGeometryRequestBuilder_.setMessage(builderForValue.build());
      }
      rightCase_ = 6;
      return this;
    }
    /**
     * <pre>
     * if there are two geometries, the right geometry request is to be operated on by this request
     * </pre>
     *
     * <code>.geo.v1.GeometryRequest right_geometry_request = 6 [json_name = "rightGeometryRequest"];</code>
     */
    public Builder mergeRightGeometryRequest(geo.v1.GeometryRequest value) {
      if (rightGeometryRequestBuilder_ == null) {
        if (rightCase_ == 6 &&
            right_ != geo.v1.GeometryRequest.getDefaultInstance()) {
          right_ = geo.v1.GeometryRequest.newBuilder((geo.v1.GeometryRequest) right_)
              .mergeFrom(value).buildPartial();
        } else {
          right_ = value;
        }
        onChanged();
      } else {
        if (rightCase_ == 6) {
          rightGeometryRequestBuilder_.mergeFrom(value);
        }
        rightGeometryRequestBuilder_.setMessage(value);
      }
      rightCase_ = 6;
      return this;
    }
    /**
     * <pre>
     * if there are two geometries, the right geometry request is to be operated on by this request
     * </pre>
     *
     * <code>.geo.v1.GeometryRequest right_geometry_request = 6 [json_name = "rightGeometryRequest"];</code>
     */
    public Builder clearRightGeometryRequest() {
      if (rightGeometryRequestBuilder_ == null) {
        if (rightCase_ == 6) {
          rightCase_ = 0;
          right_ = null;
          onChanged();
        }
      } else {
        if (rightCase_ == 6) {
          rightCase_ = 0;
          right_ = null;
        }
        rightGeometryRequestBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * if there are two geometries, the right geometry request is to be operated on by this request
     * </pre>
     *
     * <code>.geo.v1.GeometryRequest right_geometry_request = 6 [json_name = "rightGeometryRequest"];</code>
     */
    public geo.v1.GeometryRequest.Builder getRightGeometryRequestBuilder() {
      return getRightGeometryRequestFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * if there are two geometries, the right geometry request is to be operated on by this request
     * </pre>
     *
     * <code>.geo.v1.GeometryRequest right_geometry_request = 6 [json_name = "rightGeometryRequest"];</code>
     */
    @java.lang.Override
    public geo.v1.GeometryRequestOrBuilder getRightGeometryRequestOrBuilder() {
      if ((rightCase_ == 6) && (rightGeometryRequestBuilder_ != null)) {
        return rightGeometryRequestBuilder_.getMessageOrBuilder();
      } else {
        if (rightCase_ == 6) {
          return (geo.v1.GeometryRequest) right_;
        }
        return geo.v1.GeometryRequest.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * if there are two geometries, the right geometry request is to be operated on by this request
     * </pre>
     *
     * <code>.geo.v1.GeometryRequest right_geometry_request = 6 [json_name = "rightGeometryRequest"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        geo.v1.GeometryRequest, geo.v1.GeometryRequest.Builder, geo.v1.GeometryRequestOrBuilder> 
        getRightGeometryRequestFieldBuilder() {
      if (rightGeometryRequestBuilder_ == null) {
        if (!(rightCase_ == 6)) {
          right_ = geo.v1.GeometryRequest.getDefaultInstance();
        }
        rightGeometryRequestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            geo.v1.GeometryRequest, geo.v1.GeometryRequest.Builder, geo.v1.GeometryRequestOrBuilder>(
                (geo.v1.GeometryRequest) right_,
                getParentForChildren(),
                isClean());
        right_ = null;
      }
      rightCase_ = 6;
      onChanged();;
      return rightGeometryRequestBuilder_;
    }

    private int operator_ = 0;
    /**
     * <pre>
     * (default is PROJECT) geometry operation to perform on input geometries
     * </pre>
     *
     * <code>.geo.v1.OperatorType operator = 7 [json_name = "operator"];</code>
     * @return The enum numeric value on the wire for operator.
     */
    @java.lang.Override public int getOperatorValue() {
      return operator_;
    }
    /**
     * <pre>
     * (default is PROJECT) geometry operation to perform on input geometries
     * </pre>
     *
     * <code>.geo.v1.OperatorType operator = 7 [json_name = "operator"];</code>
     * @param value The enum numeric value on the wire for operator to set.
     * @return This builder for chaining.
     */
    public Builder setOperatorValue(int value) {
      
      operator_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * (default is PROJECT) geometry operation to perform on input geometries
     * </pre>
     *
     * <code>.geo.v1.OperatorType operator = 7 [json_name = "operator"];</code>
     * @return The operator.
     */
    @java.lang.Override
    public geo.v1.OperatorType getOperator() {
      @SuppressWarnings("deprecation")
      geo.v1.OperatorType result = geo.v1.OperatorType.valueOf(operator_);
      return result == null ? geo.v1.OperatorType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * (default is PROJECT) geometry operation to perform on input geometries
     * </pre>
     *
     * <code>.geo.v1.OperatorType operator = 7 [json_name = "operator"];</code>
     * @param value The operator to set.
     * @return This builder for chaining.
     */
    public Builder setOperator(geo.v1.OperatorType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      operator_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * (default is PROJECT) geometry operation to perform on input geometries
     * </pre>
     *
     * <code>.geo.v1.OperatorType operator = 7 [json_name = "operator"];</code>
     * @return This builder for chaining.
     */
    public Builder clearOperator() {
      
      operator_ = 0;
      onChanged();
      return this;
    }

    private int resultEncoding_ = 0;
    /**
     * <pre>
     * (default is wkb) encoding, wkt, wkb, esri_shape, etc
     * </pre>
     *
     * <code>.geo.v1.Encoding result_encoding = 8 [json_name = "resultEncoding"];</code>
     * @return The enum numeric value on the wire for resultEncoding.
     */
    @java.lang.Override public int getResultEncodingValue() {
      return resultEncoding_;
    }
    /**
     * <pre>
     * (default is wkb) encoding, wkt, wkb, esri_shape, etc
     * </pre>
     *
     * <code>.geo.v1.Encoding result_encoding = 8 [json_name = "resultEncoding"];</code>
     * @param value The enum numeric value on the wire for resultEncoding to set.
     * @return This builder for chaining.
     */
    public Builder setResultEncodingValue(int value) {
      
      resultEncoding_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * (default is wkb) encoding, wkt, wkb, esri_shape, etc
     * </pre>
     *
     * <code>.geo.v1.Encoding result_encoding = 8 [json_name = "resultEncoding"];</code>
     * @return The resultEncoding.
     */
    @java.lang.Override
    public geo.v1.Encoding getResultEncoding() {
      @SuppressWarnings("deprecation")
      geo.v1.Encoding result = geo.v1.Encoding.valueOf(resultEncoding_);
      return result == null ? geo.v1.Encoding.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * (default is wkb) encoding, wkt, wkb, esri_shape, etc
     * </pre>
     *
     * <code>.geo.v1.Encoding result_encoding = 8 [json_name = "resultEncoding"];</code>
     * @param value The resultEncoding to set.
     * @return This builder for chaining.
     */
    public Builder setResultEncoding(geo.v1.Encoding value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      resultEncoding_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * (default is wkb) encoding, wkt, wkb, esri_shape, etc
     * </pre>
     *
     * <code>.geo.v1.Encoding result_encoding = 8 [json_name = "resultEncoding"];</code>
     * @return This builder for chaining.
     */
    public Builder clearResultEncoding() {
      
      resultEncoding_ = 0;
      onChanged();
      return this;
    }

    private geo.v1.ProjectionData operationProj_;
    private com.google.protobuf.SingleFieldBuilderV3<
        geo.v1.ProjectionData, geo.v1.ProjectionData.Builder, geo.v1.ProjectionDataOrBuilder> operationProjBuilder_;
    /**
     * <pre>
     * (optional) the spatial reference the geometric operation should take place in. If both inputs are in different spatial references, you can use this to define a common reference system for the geometric operation.
     * </pre>
     *
     * <code>.geo.v1.ProjectionData operation_proj = 9 [json_name = "operationProj"];</code>
     * @return Whether the operationProj field is set.
     */
    public boolean hasOperationProj() {
      return operationProjBuilder_ != null || operationProj_ != null;
    }
    /**
     * <pre>
     * (optional) the spatial reference the geometric operation should take place in. If both inputs are in different spatial references, you can use this to define a common reference system for the geometric operation.
     * </pre>
     *
     * <code>.geo.v1.ProjectionData operation_proj = 9 [json_name = "operationProj"];</code>
     * @return The operationProj.
     */
    public geo.v1.ProjectionData getOperationProj() {
      if (operationProjBuilder_ == null) {
        return operationProj_ == null ? geo.v1.ProjectionData.getDefaultInstance() : operationProj_;
      } else {
        return operationProjBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * (optional) the spatial reference the geometric operation should take place in. If both inputs are in different spatial references, you can use this to define a common reference system for the geometric operation.
     * </pre>
     *
     * <code>.geo.v1.ProjectionData operation_proj = 9 [json_name = "operationProj"];</code>
     */
    public Builder setOperationProj(geo.v1.ProjectionData value) {
      if (operationProjBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        operationProj_ = value;
        onChanged();
      } else {
        operationProjBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * (optional) the spatial reference the geometric operation should take place in. If both inputs are in different spatial references, you can use this to define a common reference system for the geometric operation.
     * </pre>
     *
     * <code>.geo.v1.ProjectionData operation_proj = 9 [json_name = "operationProj"];</code>
     */
    public Builder setOperationProj(
        geo.v1.ProjectionData.Builder builderForValue) {
      if (operationProjBuilder_ == null) {
        operationProj_ = builderForValue.build();
        onChanged();
      } else {
        operationProjBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * (optional) the spatial reference the geometric operation should take place in. If both inputs are in different spatial references, you can use this to define a common reference system for the geometric operation.
     * </pre>
     *
     * <code>.geo.v1.ProjectionData operation_proj = 9 [json_name = "operationProj"];</code>
     */
    public Builder mergeOperationProj(geo.v1.ProjectionData value) {
      if (operationProjBuilder_ == null) {
        if (operationProj_ != null) {
          operationProj_ =
            geo.v1.ProjectionData.newBuilder(operationProj_).mergeFrom(value).buildPartial();
        } else {
          operationProj_ = value;
        }
        onChanged();
      } else {
        operationProjBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * (optional) the spatial reference the geometric operation should take place in. If both inputs are in different spatial references, you can use this to define a common reference system for the geometric operation.
     * </pre>
     *
     * <code>.geo.v1.ProjectionData operation_proj = 9 [json_name = "operationProj"];</code>
     */
    public Builder clearOperationProj() {
      if (operationProjBuilder_ == null) {
        operationProj_ = null;
        onChanged();
      } else {
        operationProj_ = null;
        operationProjBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * (optional) the spatial reference the geometric operation should take place in. If both inputs are in different spatial references, you can use this to define a common reference system for the geometric operation.
     * </pre>
     *
     * <code>.geo.v1.ProjectionData operation_proj = 9 [json_name = "operationProj"];</code>
     */
    public geo.v1.ProjectionData.Builder getOperationProjBuilder() {
      
      onChanged();
      return getOperationProjFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * (optional) the spatial reference the geometric operation should take place in. If both inputs are in different spatial references, you can use this to define a common reference system for the geometric operation.
     * </pre>
     *
     * <code>.geo.v1.ProjectionData operation_proj = 9 [json_name = "operationProj"];</code>
     */
    public geo.v1.ProjectionDataOrBuilder getOperationProjOrBuilder() {
      if (operationProjBuilder_ != null) {
        return operationProjBuilder_.getMessageOrBuilder();
      } else {
        return operationProj_ == null ?
            geo.v1.ProjectionData.getDefaultInstance() : operationProj_;
      }
    }
    /**
     * <pre>
     * (optional) the spatial reference the geometric operation should take place in. If both inputs are in different spatial references, you can use this to define a common reference system for the geometric operation.
     * </pre>
     *
     * <code>.geo.v1.ProjectionData operation_proj = 9 [json_name = "operationProj"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        geo.v1.ProjectionData, geo.v1.ProjectionData.Builder, geo.v1.ProjectionDataOrBuilder> 
        getOperationProjFieldBuilder() {
      if (operationProjBuilder_ == null) {
        operationProjBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            geo.v1.ProjectionData, geo.v1.ProjectionData.Builder, geo.v1.ProjectionDataOrBuilder>(
                getOperationProj(),
                getParentForChildren(),
                isClean());
        operationProj_ = null;
      }
      return operationProjBuilder_;
    }

    private geo.v1.ProjectionData resultProj_;
    private com.google.protobuf.SingleFieldBuilderV3<
        geo.v1.ProjectionData, geo.v1.ProjectionData.Builder, geo.v1.ProjectionDataOrBuilder> resultProjBuilder_;
    /**
     * <pre>
     * (optional) after the operation has been completed, project the results to a new spatial reference.
     * </pre>
     *
     * <code>.geo.v1.ProjectionData result_proj = 10 [json_name = "resultProj"];</code>
     * @return Whether the resultProj field is set.
     */
    public boolean hasResultProj() {
      return resultProjBuilder_ != null || resultProj_ != null;
    }
    /**
     * <pre>
     * (optional) after the operation has been completed, project the results to a new spatial reference.
     * </pre>
     *
     * <code>.geo.v1.ProjectionData result_proj = 10 [json_name = "resultProj"];</code>
     * @return The resultProj.
     */
    public geo.v1.ProjectionData getResultProj() {
      if (resultProjBuilder_ == null) {
        return resultProj_ == null ? geo.v1.ProjectionData.getDefaultInstance() : resultProj_;
      } else {
        return resultProjBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * (optional) after the operation has been completed, project the results to a new spatial reference.
     * </pre>
     *
     * <code>.geo.v1.ProjectionData result_proj = 10 [json_name = "resultProj"];</code>
     */
    public Builder setResultProj(geo.v1.ProjectionData value) {
      if (resultProjBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        resultProj_ = value;
        onChanged();
      } else {
        resultProjBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * (optional) after the operation has been completed, project the results to a new spatial reference.
     * </pre>
     *
     * <code>.geo.v1.ProjectionData result_proj = 10 [json_name = "resultProj"];</code>
     */
    public Builder setResultProj(
        geo.v1.ProjectionData.Builder builderForValue) {
      if (resultProjBuilder_ == null) {
        resultProj_ = builderForValue.build();
        onChanged();
      } else {
        resultProjBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * (optional) after the operation has been completed, project the results to a new spatial reference.
     * </pre>
     *
     * <code>.geo.v1.ProjectionData result_proj = 10 [json_name = "resultProj"];</code>
     */
    public Builder mergeResultProj(geo.v1.ProjectionData value) {
      if (resultProjBuilder_ == null) {
        if (resultProj_ != null) {
          resultProj_ =
            geo.v1.ProjectionData.newBuilder(resultProj_).mergeFrom(value).buildPartial();
        } else {
          resultProj_ = value;
        }
        onChanged();
      } else {
        resultProjBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * (optional) after the operation has been completed, project the results to a new spatial reference.
     * </pre>
     *
     * <code>.geo.v1.ProjectionData result_proj = 10 [json_name = "resultProj"];</code>
     */
    public Builder clearResultProj() {
      if (resultProjBuilder_ == null) {
        resultProj_ = null;
        onChanged();
      } else {
        resultProj_ = null;
        resultProjBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * (optional) after the operation has been completed, project the results to a new spatial reference.
     * </pre>
     *
     * <code>.geo.v1.ProjectionData result_proj = 10 [json_name = "resultProj"];</code>
     */
    public geo.v1.ProjectionData.Builder getResultProjBuilder() {
      
      onChanged();
      return getResultProjFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * (optional) after the operation has been completed, project the results to a new spatial reference.
     * </pre>
     *
     * <code>.geo.v1.ProjectionData result_proj = 10 [json_name = "resultProj"];</code>
     */
    public geo.v1.ProjectionDataOrBuilder getResultProjOrBuilder() {
      if (resultProjBuilder_ != null) {
        return resultProjBuilder_.getMessageOrBuilder();
      } else {
        return resultProj_ == null ?
            geo.v1.ProjectionData.getDefaultInstance() : resultProj_;
      }
    }
    /**
     * <pre>
     * (optional) after the operation has been completed, project the results to a new spatial reference.
     * </pre>
     *
     * <code>.geo.v1.ProjectionData result_proj = 10 [json_name = "resultProj"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        geo.v1.ProjectionData, geo.v1.ProjectionData.Builder, geo.v1.ProjectionDataOrBuilder> 
        getResultProjFieldBuilder() {
      if (resultProjBuilder_ == null) {
        resultProjBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            geo.v1.ProjectionData, geo.v1.ProjectionData.Builder, geo.v1.ProjectionDataOrBuilder>(
                getResultProj(),
                getParentForChildren(),
                isClean());
        resultProj_ = null;
      }
      return resultProjBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        geo.v1.Params.Buffer, geo.v1.Params.Buffer.Builder, geo.v1.Params.BufferOrBuilder> bufferParamsBuilder_;
    /**
     * <code>.geo.v1.Params.Buffer buffer_params = 11 [json_name = "bufferParams"];</code>
     * @return Whether the bufferParams field is set.
     */
    @java.lang.Override
    public boolean hasBufferParams() {
      return paramsCase_ == 11;
    }
    /**
     * <code>.geo.v1.Params.Buffer buffer_params = 11 [json_name = "bufferParams"];</code>
     * @return The bufferParams.
     */
    @java.lang.Override
    public geo.v1.Params.Buffer getBufferParams() {
      if (bufferParamsBuilder_ == null) {
        if (paramsCase_ == 11) {
          return (geo.v1.Params.Buffer) params_;
        }
        return geo.v1.Params.Buffer.getDefaultInstance();
      } else {
        if (paramsCase_ == 11) {
          return bufferParamsBuilder_.getMessage();
        }
        return geo.v1.Params.Buffer.getDefaultInstance();
      }
    }
    /**
     * <code>.geo.v1.Params.Buffer buffer_params = 11 [json_name = "bufferParams"];</code>
     */
    public Builder setBufferParams(geo.v1.Params.Buffer value) {
      if (bufferParamsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        params_ = value;
        onChanged();
      } else {
        bufferParamsBuilder_.setMessage(value);
      }
      paramsCase_ = 11;
      return this;
    }
    /**
     * <code>.geo.v1.Params.Buffer buffer_params = 11 [json_name = "bufferParams"];</code>
     */
    public Builder setBufferParams(
        geo.v1.Params.Buffer.Builder builderForValue) {
      if (bufferParamsBuilder_ == null) {
        params_ = builderForValue.build();
        onChanged();
      } else {
        bufferParamsBuilder_.setMessage(builderForValue.build());
      }
      paramsCase_ = 11;
      return this;
    }
    /**
     * <code>.geo.v1.Params.Buffer buffer_params = 11 [json_name = "bufferParams"];</code>
     */
    public Builder mergeBufferParams(geo.v1.Params.Buffer value) {
      if (bufferParamsBuilder_ == null) {
        if (paramsCase_ == 11 &&
            params_ != geo.v1.Params.Buffer.getDefaultInstance()) {
          params_ = geo.v1.Params.Buffer.newBuilder((geo.v1.Params.Buffer) params_)
              .mergeFrom(value).buildPartial();
        } else {
          params_ = value;
        }
        onChanged();
      } else {
        if (paramsCase_ == 11) {
          bufferParamsBuilder_.mergeFrom(value);
        }
        bufferParamsBuilder_.setMessage(value);
      }
      paramsCase_ = 11;
      return this;
    }
    /**
     * <code>.geo.v1.Params.Buffer buffer_params = 11 [json_name = "bufferParams"];</code>
     */
    public Builder clearBufferParams() {
      if (bufferParamsBuilder_ == null) {
        if (paramsCase_ == 11) {
          paramsCase_ = 0;
          params_ = null;
          onChanged();
        }
      } else {
        if (paramsCase_ == 11) {
          paramsCase_ = 0;
          params_ = null;
        }
        bufferParamsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.geo.v1.Params.Buffer buffer_params = 11 [json_name = "bufferParams"];</code>
     */
    public geo.v1.Params.Buffer.Builder getBufferParamsBuilder() {
      return getBufferParamsFieldBuilder().getBuilder();
    }
    /**
     * <code>.geo.v1.Params.Buffer buffer_params = 11 [json_name = "bufferParams"];</code>
     */
    @java.lang.Override
    public geo.v1.Params.BufferOrBuilder getBufferParamsOrBuilder() {
      if ((paramsCase_ == 11) && (bufferParamsBuilder_ != null)) {
        return bufferParamsBuilder_.getMessageOrBuilder();
      } else {
        if (paramsCase_ == 11) {
          return (geo.v1.Params.Buffer) params_;
        }
        return geo.v1.Params.Buffer.getDefaultInstance();
      }
    }
    /**
     * <code>.geo.v1.Params.Buffer buffer_params = 11 [json_name = "bufferParams"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        geo.v1.Params.Buffer, geo.v1.Params.Buffer.Builder, geo.v1.Params.BufferOrBuilder> 
        getBufferParamsFieldBuilder() {
      if (bufferParamsBuilder_ == null) {
        if (!(paramsCase_ == 11)) {
          params_ = geo.v1.Params.Buffer.getDefaultInstance();
        }
        bufferParamsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            geo.v1.Params.Buffer, geo.v1.Params.Buffer.Builder, geo.v1.Params.BufferOrBuilder>(
                (geo.v1.Params.Buffer) params_,
                getParentForChildren(),
                isClean());
        params_ = null;
      }
      paramsCase_ = 11;
      onChanged();;
      return bufferParamsBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        geo.v1.Params.Convex, geo.v1.Params.Convex.Builder, geo.v1.Params.ConvexOrBuilder> convexParamsBuilder_;
    /**
     * <code>.geo.v1.Params.Convex convex_params = 12 [json_name = "convexParams"];</code>
     * @return Whether the convexParams field is set.
     */
    @java.lang.Override
    public boolean hasConvexParams() {
      return paramsCase_ == 12;
    }
    /**
     * <code>.geo.v1.Params.Convex convex_params = 12 [json_name = "convexParams"];</code>
     * @return The convexParams.
     */
    @java.lang.Override
    public geo.v1.Params.Convex getConvexParams() {
      if (convexParamsBuilder_ == null) {
        if (paramsCase_ == 12) {
          return (geo.v1.Params.Convex) params_;
        }
        return geo.v1.Params.Convex.getDefaultInstance();
      } else {
        if (paramsCase_ == 12) {
          return convexParamsBuilder_.getMessage();
        }
        return geo.v1.Params.Convex.getDefaultInstance();
      }
    }
    /**
     * <code>.geo.v1.Params.Convex convex_params = 12 [json_name = "convexParams"];</code>
     */
    public Builder setConvexParams(geo.v1.Params.Convex value) {
      if (convexParamsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        params_ = value;
        onChanged();
      } else {
        convexParamsBuilder_.setMessage(value);
      }
      paramsCase_ = 12;
      return this;
    }
    /**
     * <code>.geo.v1.Params.Convex convex_params = 12 [json_name = "convexParams"];</code>
     */
    public Builder setConvexParams(
        geo.v1.Params.Convex.Builder builderForValue) {
      if (convexParamsBuilder_ == null) {
        params_ = builderForValue.build();
        onChanged();
      } else {
        convexParamsBuilder_.setMessage(builderForValue.build());
      }
      paramsCase_ = 12;
      return this;
    }
    /**
     * <code>.geo.v1.Params.Convex convex_params = 12 [json_name = "convexParams"];</code>
     */
    public Builder mergeConvexParams(geo.v1.Params.Convex value) {
      if (convexParamsBuilder_ == null) {
        if (paramsCase_ == 12 &&
            params_ != geo.v1.Params.Convex.getDefaultInstance()) {
          params_ = geo.v1.Params.Convex.newBuilder((geo.v1.Params.Convex) params_)
              .mergeFrom(value).buildPartial();
        } else {
          params_ = value;
        }
        onChanged();
      } else {
        if (paramsCase_ == 12) {
          convexParamsBuilder_.mergeFrom(value);
        }
        convexParamsBuilder_.setMessage(value);
      }
      paramsCase_ = 12;
      return this;
    }
    /**
     * <code>.geo.v1.Params.Convex convex_params = 12 [json_name = "convexParams"];</code>
     */
    public Builder clearConvexParams() {
      if (convexParamsBuilder_ == null) {
        if (paramsCase_ == 12) {
          paramsCase_ = 0;
          params_ = null;
          onChanged();
        }
      } else {
        if (paramsCase_ == 12) {
          paramsCase_ = 0;
          params_ = null;
        }
        convexParamsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.geo.v1.Params.Convex convex_params = 12 [json_name = "convexParams"];</code>
     */
    public geo.v1.Params.Convex.Builder getConvexParamsBuilder() {
      return getConvexParamsFieldBuilder().getBuilder();
    }
    /**
     * <code>.geo.v1.Params.Convex convex_params = 12 [json_name = "convexParams"];</code>
     */
    @java.lang.Override
    public geo.v1.Params.ConvexOrBuilder getConvexParamsOrBuilder() {
      if ((paramsCase_ == 12) && (convexParamsBuilder_ != null)) {
        return convexParamsBuilder_.getMessageOrBuilder();
      } else {
        if (paramsCase_ == 12) {
          return (geo.v1.Params.Convex) params_;
        }
        return geo.v1.Params.Convex.getDefaultInstance();
      }
    }
    /**
     * <code>.geo.v1.Params.Convex convex_params = 12 [json_name = "convexParams"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        geo.v1.Params.Convex, geo.v1.Params.Convex.Builder, geo.v1.Params.ConvexOrBuilder> 
        getConvexParamsFieldBuilder() {
      if (convexParamsBuilder_ == null) {
        if (!(paramsCase_ == 12)) {
          params_ = geo.v1.Params.Convex.getDefaultInstance();
        }
        convexParamsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            geo.v1.Params.Convex, geo.v1.Params.Convex.Builder, geo.v1.Params.ConvexOrBuilder>(
                (geo.v1.Params.Convex) params_,
                getParentForChildren(),
                isClean());
        params_ = null;
      }
      paramsCase_ = 12;
      onChanged();;
      return convexParamsBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        geo.v1.Params.Relate, geo.v1.Params.Relate.Builder, geo.v1.Params.RelateOrBuilder> relateParamsBuilder_;
    /**
     * <code>.geo.v1.Params.Relate relate_params = 13 [json_name = "relateParams"];</code>
     * @return Whether the relateParams field is set.
     */
    @java.lang.Override
    public boolean hasRelateParams() {
      return paramsCase_ == 13;
    }
    /**
     * <code>.geo.v1.Params.Relate relate_params = 13 [json_name = "relateParams"];</code>
     * @return The relateParams.
     */
    @java.lang.Override
    public geo.v1.Params.Relate getRelateParams() {
      if (relateParamsBuilder_ == null) {
        if (paramsCase_ == 13) {
          return (geo.v1.Params.Relate) params_;
        }
        return geo.v1.Params.Relate.getDefaultInstance();
      } else {
        if (paramsCase_ == 13) {
          return relateParamsBuilder_.getMessage();
        }
        return geo.v1.Params.Relate.getDefaultInstance();
      }
    }
    /**
     * <code>.geo.v1.Params.Relate relate_params = 13 [json_name = "relateParams"];</code>
     */
    public Builder setRelateParams(geo.v1.Params.Relate value) {
      if (relateParamsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        params_ = value;
        onChanged();
      } else {
        relateParamsBuilder_.setMessage(value);
      }
      paramsCase_ = 13;
      return this;
    }
    /**
     * <code>.geo.v1.Params.Relate relate_params = 13 [json_name = "relateParams"];</code>
     */
    public Builder setRelateParams(
        geo.v1.Params.Relate.Builder builderForValue) {
      if (relateParamsBuilder_ == null) {
        params_ = builderForValue.build();
        onChanged();
      } else {
        relateParamsBuilder_.setMessage(builderForValue.build());
      }
      paramsCase_ = 13;
      return this;
    }
    /**
     * <code>.geo.v1.Params.Relate relate_params = 13 [json_name = "relateParams"];</code>
     */
    public Builder mergeRelateParams(geo.v1.Params.Relate value) {
      if (relateParamsBuilder_ == null) {
        if (paramsCase_ == 13 &&
            params_ != geo.v1.Params.Relate.getDefaultInstance()) {
          params_ = geo.v1.Params.Relate.newBuilder((geo.v1.Params.Relate) params_)
              .mergeFrom(value).buildPartial();
        } else {
          params_ = value;
        }
        onChanged();
      } else {
        if (paramsCase_ == 13) {
          relateParamsBuilder_.mergeFrom(value);
        }
        relateParamsBuilder_.setMessage(value);
      }
      paramsCase_ = 13;
      return this;
    }
    /**
     * <code>.geo.v1.Params.Relate relate_params = 13 [json_name = "relateParams"];</code>
     */
    public Builder clearRelateParams() {
      if (relateParamsBuilder_ == null) {
        if (paramsCase_ == 13) {
          paramsCase_ = 0;
          params_ = null;
          onChanged();
        }
      } else {
        if (paramsCase_ == 13) {
          paramsCase_ = 0;
          params_ = null;
        }
        relateParamsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.geo.v1.Params.Relate relate_params = 13 [json_name = "relateParams"];</code>
     */
    public geo.v1.Params.Relate.Builder getRelateParamsBuilder() {
      return getRelateParamsFieldBuilder().getBuilder();
    }
    /**
     * <code>.geo.v1.Params.Relate relate_params = 13 [json_name = "relateParams"];</code>
     */
    @java.lang.Override
    public geo.v1.Params.RelateOrBuilder getRelateParamsOrBuilder() {
      if ((paramsCase_ == 13) && (relateParamsBuilder_ != null)) {
        return relateParamsBuilder_.getMessageOrBuilder();
      } else {
        if (paramsCase_ == 13) {
          return (geo.v1.Params.Relate) params_;
        }
        return geo.v1.Params.Relate.getDefaultInstance();
      }
    }
    /**
     * <code>.geo.v1.Params.Relate relate_params = 13 [json_name = "relateParams"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        geo.v1.Params.Relate, geo.v1.Params.Relate.Builder, geo.v1.Params.RelateOrBuilder> 
        getRelateParamsFieldBuilder() {
      if (relateParamsBuilder_ == null) {
        if (!(paramsCase_ == 13)) {
          params_ = geo.v1.Params.Relate.getDefaultInstance();
        }
        relateParamsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            geo.v1.Params.Relate, geo.v1.Params.Relate.Builder, geo.v1.Params.RelateOrBuilder>(
                (geo.v1.Params.Relate) params_,
                getParentForChildren(),
                isClean());
        params_ = null;
      }
      paramsCase_ = 13;
      onChanged();;
      return relateParamsBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        geo.v1.Params.RandomPoints, geo.v1.Params.RandomPoints.Builder, geo.v1.Params.RandomPointsOrBuilder> randomPointsParamsBuilder_;
    /**
     * <code>.geo.v1.Params.RandomPoints random_points_params = 14 [json_name = "randomPointsParams"];</code>
     * @return Whether the randomPointsParams field is set.
     */
    @java.lang.Override
    public boolean hasRandomPointsParams() {
      return paramsCase_ == 14;
    }
    /**
     * <code>.geo.v1.Params.RandomPoints random_points_params = 14 [json_name = "randomPointsParams"];</code>
     * @return The randomPointsParams.
     */
    @java.lang.Override
    public geo.v1.Params.RandomPoints getRandomPointsParams() {
      if (randomPointsParamsBuilder_ == null) {
        if (paramsCase_ == 14) {
          return (geo.v1.Params.RandomPoints) params_;
        }
        return geo.v1.Params.RandomPoints.getDefaultInstance();
      } else {
        if (paramsCase_ == 14) {
          return randomPointsParamsBuilder_.getMessage();
        }
        return geo.v1.Params.RandomPoints.getDefaultInstance();
      }
    }
    /**
     * <code>.geo.v1.Params.RandomPoints random_points_params = 14 [json_name = "randomPointsParams"];</code>
     */
    public Builder setRandomPointsParams(geo.v1.Params.RandomPoints value) {
      if (randomPointsParamsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        params_ = value;
        onChanged();
      } else {
        randomPointsParamsBuilder_.setMessage(value);
      }
      paramsCase_ = 14;
      return this;
    }
    /**
     * <code>.geo.v1.Params.RandomPoints random_points_params = 14 [json_name = "randomPointsParams"];</code>
     */
    public Builder setRandomPointsParams(
        geo.v1.Params.RandomPoints.Builder builderForValue) {
      if (randomPointsParamsBuilder_ == null) {
        params_ = builderForValue.build();
        onChanged();
      } else {
        randomPointsParamsBuilder_.setMessage(builderForValue.build());
      }
      paramsCase_ = 14;
      return this;
    }
    /**
     * <code>.geo.v1.Params.RandomPoints random_points_params = 14 [json_name = "randomPointsParams"];</code>
     */
    public Builder mergeRandomPointsParams(geo.v1.Params.RandomPoints value) {
      if (randomPointsParamsBuilder_ == null) {
        if (paramsCase_ == 14 &&
            params_ != geo.v1.Params.RandomPoints.getDefaultInstance()) {
          params_ = geo.v1.Params.RandomPoints.newBuilder((geo.v1.Params.RandomPoints) params_)
              .mergeFrom(value).buildPartial();
        } else {
          params_ = value;
        }
        onChanged();
      } else {
        if (paramsCase_ == 14) {
          randomPointsParamsBuilder_.mergeFrom(value);
        }
        randomPointsParamsBuilder_.setMessage(value);
      }
      paramsCase_ = 14;
      return this;
    }
    /**
     * <code>.geo.v1.Params.RandomPoints random_points_params = 14 [json_name = "randomPointsParams"];</code>
     */
    public Builder clearRandomPointsParams() {
      if (randomPointsParamsBuilder_ == null) {
        if (paramsCase_ == 14) {
          paramsCase_ = 0;
          params_ = null;
          onChanged();
        }
      } else {
        if (paramsCase_ == 14) {
          paramsCase_ = 0;
          params_ = null;
        }
        randomPointsParamsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.geo.v1.Params.RandomPoints random_points_params = 14 [json_name = "randomPointsParams"];</code>
     */
    public geo.v1.Params.RandomPoints.Builder getRandomPointsParamsBuilder() {
      return getRandomPointsParamsFieldBuilder().getBuilder();
    }
    /**
     * <code>.geo.v1.Params.RandomPoints random_points_params = 14 [json_name = "randomPointsParams"];</code>
     */
    @java.lang.Override
    public geo.v1.Params.RandomPointsOrBuilder getRandomPointsParamsOrBuilder() {
      if ((paramsCase_ == 14) && (randomPointsParamsBuilder_ != null)) {
        return randomPointsParamsBuilder_.getMessageOrBuilder();
      } else {
        if (paramsCase_ == 14) {
          return (geo.v1.Params.RandomPoints) params_;
        }
        return geo.v1.Params.RandomPoints.getDefaultInstance();
      }
    }
    /**
     * <code>.geo.v1.Params.RandomPoints random_points_params = 14 [json_name = "randomPointsParams"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        geo.v1.Params.RandomPoints, geo.v1.Params.RandomPoints.Builder, geo.v1.Params.RandomPointsOrBuilder> 
        getRandomPointsParamsFieldBuilder() {
      if (randomPointsParamsBuilder_ == null) {
        if (!(paramsCase_ == 14)) {
          params_ = geo.v1.Params.RandomPoints.getDefaultInstance();
        }
        randomPointsParamsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            geo.v1.Params.RandomPoints, geo.v1.Params.RandomPoints.Builder, geo.v1.Params.RandomPointsOrBuilder>(
                (geo.v1.Params.RandomPoints) params_,
                getParentForChildren(),
                isClean());
        params_ = null;
      }
      paramsCase_ = 14;
      onChanged();;
      return randomPointsParamsBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        geo.v1.Params.Generalize, geo.v1.Params.Generalize.Builder, geo.v1.Params.GeneralizeOrBuilder> generalizeParamsBuilder_;
    /**
     * <code>.geo.v1.Params.Generalize generalize_params = 15 [json_name = "generalizeParams"];</code>
     * @return Whether the generalizeParams field is set.
     */
    @java.lang.Override
    public boolean hasGeneralizeParams() {
      return paramsCase_ == 15;
    }
    /**
     * <code>.geo.v1.Params.Generalize generalize_params = 15 [json_name = "generalizeParams"];</code>
     * @return The generalizeParams.
     */
    @java.lang.Override
    public geo.v1.Params.Generalize getGeneralizeParams() {
      if (generalizeParamsBuilder_ == null) {
        if (paramsCase_ == 15) {
          return (geo.v1.Params.Generalize) params_;
        }
        return geo.v1.Params.Generalize.getDefaultInstance();
      } else {
        if (paramsCase_ == 15) {
          return generalizeParamsBuilder_.getMessage();
        }
        return geo.v1.Params.Generalize.getDefaultInstance();
      }
    }
    /**
     * <code>.geo.v1.Params.Generalize generalize_params = 15 [json_name = "generalizeParams"];</code>
     */
    public Builder setGeneralizeParams(geo.v1.Params.Generalize value) {
      if (generalizeParamsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        params_ = value;
        onChanged();
      } else {
        generalizeParamsBuilder_.setMessage(value);
      }
      paramsCase_ = 15;
      return this;
    }
    /**
     * <code>.geo.v1.Params.Generalize generalize_params = 15 [json_name = "generalizeParams"];</code>
     */
    public Builder setGeneralizeParams(
        geo.v1.Params.Generalize.Builder builderForValue) {
      if (generalizeParamsBuilder_ == null) {
        params_ = builderForValue.build();
        onChanged();
      } else {
        generalizeParamsBuilder_.setMessage(builderForValue.build());
      }
      paramsCase_ = 15;
      return this;
    }
    /**
     * <code>.geo.v1.Params.Generalize generalize_params = 15 [json_name = "generalizeParams"];</code>
     */
    public Builder mergeGeneralizeParams(geo.v1.Params.Generalize value) {
      if (generalizeParamsBuilder_ == null) {
        if (paramsCase_ == 15 &&
            params_ != geo.v1.Params.Generalize.getDefaultInstance()) {
          params_ = geo.v1.Params.Generalize.newBuilder((geo.v1.Params.Generalize) params_)
              .mergeFrom(value).buildPartial();
        } else {
          params_ = value;
        }
        onChanged();
      } else {
        if (paramsCase_ == 15) {
          generalizeParamsBuilder_.mergeFrom(value);
        }
        generalizeParamsBuilder_.setMessage(value);
      }
      paramsCase_ = 15;
      return this;
    }
    /**
     * <code>.geo.v1.Params.Generalize generalize_params = 15 [json_name = "generalizeParams"];</code>
     */
    public Builder clearGeneralizeParams() {
      if (generalizeParamsBuilder_ == null) {
        if (paramsCase_ == 15) {
          paramsCase_ = 0;
          params_ = null;
          onChanged();
        }
      } else {
        if (paramsCase_ == 15) {
          paramsCase_ = 0;
          params_ = null;
        }
        generalizeParamsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.geo.v1.Params.Generalize generalize_params = 15 [json_name = "generalizeParams"];</code>
     */
    public geo.v1.Params.Generalize.Builder getGeneralizeParamsBuilder() {
      return getGeneralizeParamsFieldBuilder().getBuilder();
    }
    /**
     * <code>.geo.v1.Params.Generalize generalize_params = 15 [json_name = "generalizeParams"];</code>
     */
    @java.lang.Override
    public geo.v1.Params.GeneralizeOrBuilder getGeneralizeParamsOrBuilder() {
      if ((paramsCase_ == 15) && (generalizeParamsBuilder_ != null)) {
        return generalizeParamsBuilder_.getMessageOrBuilder();
      } else {
        if (paramsCase_ == 15) {
          return (geo.v1.Params.Generalize) params_;
        }
        return geo.v1.Params.Generalize.getDefaultInstance();
      }
    }
    /**
     * <code>.geo.v1.Params.Generalize generalize_params = 15 [json_name = "generalizeParams"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        geo.v1.Params.Generalize, geo.v1.Params.Generalize.Builder, geo.v1.Params.GeneralizeOrBuilder> 
        getGeneralizeParamsFieldBuilder() {
      if (generalizeParamsBuilder_ == null) {
        if (!(paramsCase_ == 15)) {
          params_ = geo.v1.Params.Generalize.getDefaultInstance();
        }
        generalizeParamsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            geo.v1.Params.Generalize, geo.v1.Params.Generalize.Builder, geo.v1.Params.GeneralizeOrBuilder>(
                (geo.v1.Params.Generalize) params_,
                getParentForChildren(),
                isClean());
        params_ = null;
      }
      paramsCase_ = 15;
      onChanged();;
      return generalizeParamsBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        geo.v1.Params.Intersection, geo.v1.Params.Intersection.Builder, geo.v1.Params.IntersectionOrBuilder> intersectionParamsBuilder_;
    /**
     * <code>.geo.v1.Params.Intersection intersection_params = 16 [json_name = "intersectionParams"];</code>
     * @return Whether the intersectionParams field is set.
     */
    @java.lang.Override
    public boolean hasIntersectionParams() {
      return paramsCase_ == 16;
    }
    /**
     * <code>.geo.v1.Params.Intersection intersection_params = 16 [json_name = "intersectionParams"];</code>
     * @return The intersectionParams.
     */
    @java.lang.Override
    public geo.v1.Params.Intersection getIntersectionParams() {
      if (intersectionParamsBuilder_ == null) {
        if (paramsCase_ == 16) {
          return (geo.v1.Params.Intersection) params_;
        }
        return geo.v1.Params.Intersection.getDefaultInstance();
      } else {
        if (paramsCase_ == 16) {
          return intersectionParamsBuilder_.getMessage();
        }
        return geo.v1.Params.Intersection.getDefaultInstance();
      }
    }
    /**
     * <code>.geo.v1.Params.Intersection intersection_params = 16 [json_name = "intersectionParams"];</code>
     */
    public Builder setIntersectionParams(geo.v1.Params.Intersection value) {
      if (intersectionParamsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        params_ = value;
        onChanged();
      } else {
        intersectionParamsBuilder_.setMessage(value);
      }
      paramsCase_ = 16;
      return this;
    }
    /**
     * <code>.geo.v1.Params.Intersection intersection_params = 16 [json_name = "intersectionParams"];</code>
     */
    public Builder setIntersectionParams(
        geo.v1.Params.Intersection.Builder builderForValue) {
      if (intersectionParamsBuilder_ == null) {
        params_ = builderForValue.build();
        onChanged();
      } else {
        intersectionParamsBuilder_.setMessage(builderForValue.build());
      }
      paramsCase_ = 16;
      return this;
    }
    /**
     * <code>.geo.v1.Params.Intersection intersection_params = 16 [json_name = "intersectionParams"];</code>
     */
    public Builder mergeIntersectionParams(geo.v1.Params.Intersection value) {
      if (intersectionParamsBuilder_ == null) {
        if (paramsCase_ == 16 &&
            params_ != geo.v1.Params.Intersection.getDefaultInstance()) {
          params_ = geo.v1.Params.Intersection.newBuilder((geo.v1.Params.Intersection) params_)
              .mergeFrom(value).buildPartial();
        } else {
          params_ = value;
        }
        onChanged();
      } else {
        if (paramsCase_ == 16) {
          intersectionParamsBuilder_.mergeFrom(value);
        }
        intersectionParamsBuilder_.setMessage(value);
      }
      paramsCase_ = 16;
      return this;
    }
    /**
     * <code>.geo.v1.Params.Intersection intersection_params = 16 [json_name = "intersectionParams"];</code>
     */
    public Builder clearIntersectionParams() {
      if (intersectionParamsBuilder_ == null) {
        if (paramsCase_ == 16) {
          paramsCase_ = 0;
          params_ = null;
          onChanged();
        }
      } else {
        if (paramsCase_ == 16) {
          paramsCase_ = 0;
          params_ = null;
        }
        intersectionParamsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.geo.v1.Params.Intersection intersection_params = 16 [json_name = "intersectionParams"];</code>
     */
    public geo.v1.Params.Intersection.Builder getIntersectionParamsBuilder() {
      return getIntersectionParamsFieldBuilder().getBuilder();
    }
    /**
     * <code>.geo.v1.Params.Intersection intersection_params = 16 [json_name = "intersectionParams"];</code>
     */
    @java.lang.Override
    public geo.v1.Params.IntersectionOrBuilder getIntersectionParamsOrBuilder() {
      if ((paramsCase_ == 16) && (intersectionParamsBuilder_ != null)) {
        return intersectionParamsBuilder_.getMessageOrBuilder();
      } else {
        if (paramsCase_ == 16) {
          return (geo.v1.Params.Intersection) params_;
        }
        return geo.v1.Params.Intersection.getDefaultInstance();
      }
    }
    /**
     * <code>.geo.v1.Params.Intersection intersection_params = 16 [json_name = "intersectionParams"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        geo.v1.Params.Intersection, geo.v1.Params.Intersection.Builder, geo.v1.Params.IntersectionOrBuilder> 
        getIntersectionParamsFieldBuilder() {
      if (intersectionParamsBuilder_ == null) {
        if (!(paramsCase_ == 16)) {
          params_ = geo.v1.Params.Intersection.getDefaultInstance();
        }
        intersectionParamsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            geo.v1.Params.Intersection, geo.v1.Params.Intersection.Builder, geo.v1.Params.IntersectionOrBuilder>(
                (geo.v1.Params.Intersection) params_,
                getParentForChildren(),
                isClean());
        params_ = null;
      }
      paramsCase_ = 16;
      onChanged();;
      return intersectionParamsBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        geo.v1.Params.Offset, geo.v1.Params.Offset.Builder, geo.v1.Params.OffsetOrBuilder> offsetParamsBuilder_;
    /**
     * <code>.geo.v1.Params.Offset offset_params = 17 [json_name = "offsetParams"];</code>
     * @return Whether the offsetParams field is set.
     */
    @java.lang.Override
    public boolean hasOffsetParams() {
      return paramsCase_ == 17;
    }
    /**
     * <code>.geo.v1.Params.Offset offset_params = 17 [json_name = "offsetParams"];</code>
     * @return The offsetParams.
     */
    @java.lang.Override
    public geo.v1.Params.Offset getOffsetParams() {
      if (offsetParamsBuilder_ == null) {
        if (paramsCase_ == 17) {
          return (geo.v1.Params.Offset) params_;
        }
        return geo.v1.Params.Offset.getDefaultInstance();
      } else {
        if (paramsCase_ == 17) {
          return offsetParamsBuilder_.getMessage();
        }
        return geo.v1.Params.Offset.getDefaultInstance();
      }
    }
    /**
     * <code>.geo.v1.Params.Offset offset_params = 17 [json_name = "offsetParams"];</code>
     */
    public Builder setOffsetParams(geo.v1.Params.Offset value) {
      if (offsetParamsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        params_ = value;
        onChanged();
      } else {
        offsetParamsBuilder_.setMessage(value);
      }
      paramsCase_ = 17;
      return this;
    }
    /**
     * <code>.geo.v1.Params.Offset offset_params = 17 [json_name = "offsetParams"];</code>
     */
    public Builder setOffsetParams(
        geo.v1.Params.Offset.Builder builderForValue) {
      if (offsetParamsBuilder_ == null) {
        params_ = builderForValue.build();
        onChanged();
      } else {
        offsetParamsBuilder_.setMessage(builderForValue.build());
      }
      paramsCase_ = 17;
      return this;
    }
    /**
     * <code>.geo.v1.Params.Offset offset_params = 17 [json_name = "offsetParams"];</code>
     */
    public Builder mergeOffsetParams(geo.v1.Params.Offset value) {
      if (offsetParamsBuilder_ == null) {
        if (paramsCase_ == 17 &&
            params_ != geo.v1.Params.Offset.getDefaultInstance()) {
          params_ = geo.v1.Params.Offset.newBuilder((geo.v1.Params.Offset) params_)
              .mergeFrom(value).buildPartial();
        } else {
          params_ = value;
        }
        onChanged();
      } else {
        if (paramsCase_ == 17) {
          offsetParamsBuilder_.mergeFrom(value);
        }
        offsetParamsBuilder_.setMessage(value);
      }
      paramsCase_ = 17;
      return this;
    }
    /**
     * <code>.geo.v1.Params.Offset offset_params = 17 [json_name = "offsetParams"];</code>
     */
    public Builder clearOffsetParams() {
      if (offsetParamsBuilder_ == null) {
        if (paramsCase_ == 17) {
          paramsCase_ = 0;
          params_ = null;
          onChanged();
        }
      } else {
        if (paramsCase_ == 17) {
          paramsCase_ = 0;
          params_ = null;
        }
        offsetParamsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.geo.v1.Params.Offset offset_params = 17 [json_name = "offsetParams"];</code>
     */
    public geo.v1.Params.Offset.Builder getOffsetParamsBuilder() {
      return getOffsetParamsFieldBuilder().getBuilder();
    }
    /**
     * <code>.geo.v1.Params.Offset offset_params = 17 [json_name = "offsetParams"];</code>
     */
    @java.lang.Override
    public geo.v1.Params.OffsetOrBuilder getOffsetParamsOrBuilder() {
      if ((paramsCase_ == 17) && (offsetParamsBuilder_ != null)) {
        return offsetParamsBuilder_.getMessageOrBuilder();
      } else {
        if (paramsCase_ == 17) {
          return (geo.v1.Params.Offset) params_;
        }
        return geo.v1.Params.Offset.getDefaultInstance();
      }
    }
    /**
     * <code>.geo.v1.Params.Offset offset_params = 17 [json_name = "offsetParams"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        geo.v1.Params.Offset, geo.v1.Params.Offset.Builder, geo.v1.Params.OffsetOrBuilder> 
        getOffsetParamsFieldBuilder() {
      if (offsetParamsBuilder_ == null) {
        if (!(paramsCase_ == 17)) {
          params_ = geo.v1.Params.Offset.getDefaultInstance();
        }
        offsetParamsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            geo.v1.Params.Offset, geo.v1.Params.Offset.Builder, geo.v1.Params.OffsetOrBuilder>(
                (geo.v1.Params.Offset) params_,
                getParentForChildren(),
                isClean());
        params_ = null;
      }
      paramsCase_ = 17;
      onChanged();;
      return offsetParamsBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        geo.v1.Params.Cut, geo.v1.Params.Cut.Builder, geo.v1.Params.CutOrBuilder> cutParamsBuilder_;
    /**
     * <code>.geo.v1.Params.Cut cut_params = 18 [json_name = "cutParams"];</code>
     * @return Whether the cutParams field is set.
     */
    @java.lang.Override
    public boolean hasCutParams() {
      return paramsCase_ == 18;
    }
    /**
     * <code>.geo.v1.Params.Cut cut_params = 18 [json_name = "cutParams"];</code>
     * @return The cutParams.
     */
    @java.lang.Override
    public geo.v1.Params.Cut getCutParams() {
      if (cutParamsBuilder_ == null) {
        if (paramsCase_ == 18) {
          return (geo.v1.Params.Cut) params_;
        }
        return geo.v1.Params.Cut.getDefaultInstance();
      } else {
        if (paramsCase_ == 18) {
          return cutParamsBuilder_.getMessage();
        }
        return geo.v1.Params.Cut.getDefaultInstance();
      }
    }
    /**
     * <code>.geo.v1.Params.Cut cut_params = 18 [json_name = "cutParams"];</code>
     */
    public Builder setCutParams(geo.v1.Params.Cut value) {
      if (cutParamsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        params_ = value;
        onChanged();
      } else {
        cutParamsBuilder_.setMessage(value);
      }
      paramsCase_ = 18;
      return this;
    }
    /**
     * <code>.geo.v1.Params.Cut cut_params = 18 [json_name = "cutParams"];</code>
     */
    public Builder setCutParams(
        geo.v1.Params.Cut.Builder builderForValue) {
      if (cutParamsBuilder_ == null) {
        params_ = builderForValue.build();
        onChanged();
      } else {
        cutParamsBuilder_.setMessage(builderForValue.build());
      }
      paramsCase_ = 18;
      return this;
    }
    /**
     * <code>.geo.v1.Params.Cut cut_params = 18 [json_name = "cutParams"];</code>
     */
    public Builder mergeCutParams(geo.v1.Params.Cut value) {
      if (cutParamsBuilder_ == null) {
        if (paramsCase_ == 18 &&
            params_ != geo.v1.Params.Cut.getDefaultInstance()) {
          params_ = geo.v1.Params.Cut.newBuilder((geo.v1.Params.Cut) params_)
              .mergeFrom(value).buildPartial();
        } else {
          params_ = value;
        }
        onChanged();
      } else {
        if (paramsCase_ == 18) {
          cutParamsBuilder_.mergeFrom(value);
        }
        cutParamsBuilder_.setMessage(value);
      }
      paramsCase_ = 18;
      return this;
    }
    /**
     * <code>.geo.v1.Params.Cut cut_params = 18 [json_name = "cutParams"];</code>
     */
    public Builder clearCutParams() {
      if (cutParamsBuilder_ == null) {
        if (paramsCase_ == 18) {
          paramsCase_ = 0;
          params_ = null;
          onChanged();
        }
      } else {
        if (paramsCase_ == 18) {
          paramsCase_ = 0;
          params_ = null;
        }
        cutParamsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.geo.v1.Params.Cut cut_params = 18 [json_name = "cutParams"];</code>
     */
    public geo.v1.Params.Cut.Builder getCutParamsBuilder() {
      return getCutParamsFieldBuilder().getBuilder();
    }
    /**
     * <code>.geo.v1.Params.Cut cut_params = 18 [json_name = "cutParams"];</code>
     */
    @java.lang.Override
    public geo.v1.Params.CutOrBuilder getCutParamsOrBuilder() {
      if ((paramsCase_ == 18) && (cutParamsBuilder_ != null)) {
        return cutParamsBuilder_.getMessageOrBuilder();
      } else {
        if (paramsCase_ == 18) {
          return (geo.v1.Params.Cut) params_;
        }
        return geo.v1.Params.Cut.getDefaultInstance();
      }
    }
    /**
     * <code>.geo.v1.Params.Cut cut_params = 18 [json_name = "cutParams"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        geo.v1.Params.Cut, geo.v1.Params.Cut.Builder, geo.v1.Params.CutOrBuilder> 
        getCutParamsFieldBuilder() {
      if (cutParamsBuilder_ == null) {
        if (!(paramsCase_ == 18)) {
          params_ = geo.v1.Params.Cut.getDefaultInstance();
        }
        cutParamsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            geo.v1.Params.Cut, geo.v1.Params.Cut.Builder, geo.v1.Params.CutOrBuilder>(
                (geo.v1.Params.Cut) params_,
                getParentForChildren(),
                isClean());
        params_ = null;
      }
      paramsCase_ = 18;
      onChanged();;
      return cutParamsBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        geo.v1.Params.Clip, geo.v1.Params.Clip.Builder, geo.v1.Params.ClipOrBuilder> clipParamsBuilder_;
    /**
     * <code>.geo.v1.Params.Clip clip_params = 19 [json_name = "clipParams"];</code>
     * @return Whether the clipParams field is set.
     */
    @java.lang.Override
    public boolean hasClipParams() {
      return paramsCase_ == 19;
    }
    /**
     * <code>.geo.v1.Params.Clip clip_params = 19 [json_name = "clipParams"];</code>
     * @return The clipParams.
     */
    @java.lang.Override
    public geo.v1.Params.Clip getClipParams() {
      if (clipParamsBuilder_ == null) {
        if (paramsCase_ == 19) {
          return (geo.v1.Params.Clip) params_;
        }
        return geo.v1.Params.Clip.getDefaultInstance();
      } else {
        if (paramsCase_ == 19) {
          return clipParamsBuilder_.getMessage();
        }
        return geo.v1.Params.Clip.getDefaultInstance();
      }
    }
    /**
     * <code>.geo.v1.Params.Clip clip_params = 19 [json_name = "clipParams"];</code>
     */
    public Builder setClipParams(geo.v1.Params.Clip value) {
      if (clipParamsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        params_ = value;
        onChanged();
      } else {
        clipParamsBuilder_.setMessage(value);
      }
      paramsCase_ = 19;
      return this;
    }
    /**
     * <code>.geo.v1.Params.Clip clip_params = 19 [json_name = "clipParams"];</code>
     */
    public Builder setClipParams(
        geo.v1.Params.Clip.Builder builderForValue) {
      if (clipParamsBuilder_ == null) {
        params_ = builderForValue.build();
        onChanged();
      } else {
        clipParamsBuilder_.setMessage(builderForValue.build());
      }
      paramsCase_ = 19;
      return this;
    }
    /**
     * <code>.geo.v1.Params.Clip clip_params = 19 [json_name = "clipParams"];</code>
     */
    public Builder mergeClipParams(geo.v1.Params.Clip value) {
      if (clipParamsBuilder_ == null) {
        if (paramsCase_ == 19 &&
            params_ != geo.v1.Params.Clip.getDefaultInstance()) {
          params_ = geo.v1.Params.Clip.newBuilder((geo.v1.Params.Clip) params_)
              .mergeFrom(value).buildPartial();
        } else {
          params_ = value;
        }
        onChanged();
      } else {
        if (paramsCase_ == 19) {
          clipParamsBuilder_.mergeFrom(value);
        }
        clipParamsBuilder_.setMessage(value);
      }
      paramsCase_ = 19;
      return this;
    }
    /**
     * <code>.geo.v1.Params.Clip clip_params = 19 [json_name = "clipParams"];</code>
     */
    public Builder clearClipParams() {
      if (clipParamsBuilder_ == null) {
        if (paramsCase_ == 19) {
          paramsCase_ = 0;
          params_ = null;
          onChanged();
        }
      } else {
        if (paramsCase_ == 19) {
          paramsCase_ = 0;
          params_ = null;
        }
        clipParamsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.geo.v1.Params.Clip clip_params = 19 [json_name = "clipParams"];</code>
     */
    public geo.v1.Params.Clip.Builder getClipParamsBuilder() {
      return getClipParamsFieldBuilder().getBuilder();
    }
    /**
     * <code>.geo.v1.Params.Clip clip_params = 19 [json_name = "clipParams"];</code>
     */
    @java.lang.Override
    public geo.v1.Params.ClipOrBuilder getClipParamsOrBuilder() {
      if ((paramsCase_ == 19) && (clipParamsBuilder_ != null)) {
        return clipParamsBuilder_.getMessageOrBuilder();
      } else {
        if (paramsCase_ == 19) {
          return (geo.v1.Params.Clip) params_;
        }
        return geo.v1.Params.Clip.getDefaultInstance();
      }
    }
    /**
     * <code>.geo.v1.Params.Clip clip_params = 19 [json_name = "clipParams"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        geo.v1.Params.Clip, geo.v1.Params.Clip.Builder, geo.v1.Params.ClipOrBuilder> 
        getClipParamsFieldBuilder() {
      if (clipParamsBuilder_ == null) {
        if (!(paramsCase_ == 19)) {
          params_ = geo.v1.Params.Clip.getDefaultInstance();
        }
        clipParamsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            geo.v1.Params.Clip, geo.v1.Params.Clip.Builder, geo.v1.Params.ClipOrBuilder>(
                (geo.v1.Params.Clip) params_,
                getParentForChildren(),
                isClean());
        params_ = null;
      }
      paramsCase_ = 19;
      onChanged();;
      return clipParamsBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        geo.v1.Params.Densify, geo.v1.Params.Densify.Builder, geo.v1.Params.DensifyOrBuilder> densifyParamsBuilder_;
    /**
     * <code>.geo.v1.Params.Densify densify_params = 20 [json_name = "densifyParams"];</code>
     * @return Whether the densifyParams field is set.
     */
    @java.lang.Override
    public boolean hasDensifyParams() {
      return paramsCase_ == 20;
    }
    /**
     * <code>.geo.v1.Params.Densify densify_params = 20 [json_name = "densifyParams"];</code>
     * @return The densifyParams.
     */
    @java.lang.Override
    public geo.v1.Params.Densify getDensifyParams() {
      if (densifyParamsBuilder_ == null) {
        if (paramsCase_ == 20) {
          return (geo.v1.Params.Densify) params_;
        }
        return geo.v1.Params.Densify.getDefaultInstance();
      } else {
        if (paramsCase_ == 20) {
          return densifyParamsBuilder_.getMessage();
        }
        return geo.v1.Params.Densify.getDefaultInstance();
      }
    }
    /**
     * <code>.geo.v1.Params.Densify densify_params = 20 [json_name = "densifyParams"];</code>
     */
    public Builder setDensifyParams(geo.v1.Params.Densify value) {
      if (densifyParamsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        params_ = value;
        onChanged();
      } else {
        densifyParamsBuilder_.setMessage(value);
      }
      paramsCase_ = 20;
      return this;
    }
    /**
     * <code>.geo.v1.Params.Densify densify_params = 20 [json_name = "densifyParams"];</code>
     */
    public Builder setDensifyParams(
        geo.v1.Params.Densify.Builder builderForValue) {
      if (densifyParamsBuilder_ == null) {
        params_ = builderForValue.build();
        onChanged();
      } else {
        densifyParamsBuilder_.setMessage(builderForValue.build());
      }
      paramsCase_ = 20;
      return this;
    }
    /**
     * <code>.geo.v1.Params.Densify densify_params = 20 [json_name = "densifyParams"];</code>
     */
    public Builder mergeDensifyParams(geo.v1.Params.Densify value) {
      if (densifyParamsBuilder_ == null) {
        if (paramsCase_ == 20 &&
            params_ != geo.v1.Params.Densify.getDefaultInstance()) {
          params_ = geo.v1.Params.Densify.newBuilder((geo.v1.Params.Densify) params_)
              .mergeFrom(value).buildPartial();
        } else {
          params_ = value;
        }
        onChanged();
      } else {
        if (paramsCase_ == 20) {
          densifyParamsBuilder_.mergeFrom(value);
        }
        densifyParamsBuilder_.setMessage(value);
      }
      paramsCase_ = 20;
      return this;
    }
    /**
     * <code>.geo.v1.Params.Densify densify_params = 20 [json_name = "densifyParams"];</code>
     */
    public Builder clearDensifyParams() {
      if (densifyParamsBuilder_ == null) {
        if (paramsCase_ == 20) {
          paramsCase_ = 0;
          params_ = null;
          onChanged();
        }
      } else {
        if (paramsCase_ == 20) {
          paramsCase_ = 0;
          params_ = null;
        }
        densifyParamsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.geo.v1.Params.Densify densify_params = 20 [json_name = "densifyParams"];</code>
     */
    public geo.v1.Params.Densify.Builder getDensifyParamsBuilder() {
      return getDensifyParamsFieldBuilder().getBuilder();
    }
    /**
     * <code>.geo.v1.Params.Densify densify_params = 20 [json_name = "densifyParams"];</code>
     */
    @java.lang.Override
    public geo.v1.Params.DensifyOrBuilder getDensifyParamsOrBuilder() {
      if ((paramsCase_ == 20) && (densifyParamsBuilder_ != null)) {
        return densifyParamsBuilder_.getMessageOrBuilder();
      } else {
        if (paramsCase_ == 20) {
          return (geo.v1.Params.Densify) params_;
        }
        return geo.v1.Params.Densify.getDefaultInstance();
      }
    }
    /**
     * <code>.geo.v1.Params.Densify densify_params = 20 [json_name = "densifyParams"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        geo.v1.Params.Densify, geo.v1.Params.Densify.Builder, geo.v1.Params.DensifyOrBuilder> 
        getDensifyParamsFieldBuilder() {
      if (densifyParamsBuilder_ == null) {
        if (!(paramsCase_ == 20)) {
          params_ = geo.v1.Params.Densify.getDefaultInstance();
        }
        densifyParamsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            geo.v1.Params.Densify, geo.v1.Params.Densify.Builder, geo.v1.Params.DensifyOrBuilder>(
                (geo.v1.Params.Densify) params_,
                getParentForChildren(),
                isClean());
        params_ = null;
      }
      paramsCase_ = 20;
      onChanged();;
      return densifyParamsBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        geo.v1.Params.Simplify, geo.v1.Params.Simplify.Builder, geo.v1.Params.SimplifyOrBuilder> simplifyParamsBuilder_;
    /**
     * <code>.geo.v1.Params.Simplify simplify_params = 21 [json_name = "simplifyParams"];</code>
     * @return Whether the simplifyParams field is set.
     */
    @java.lang.Override
    public boolean hasSimplifyParams() {
      return paramsCase_ == 21;
    }
    /**
     * <code>.geo.v1.Params.Simplify simplify_params = 21 [json_name = "simplifyParams"];</code>
     * @return The simplifyParams.
     */
    @java.lang.Override
    public geo.v1.Params.Simplify getSimplifyParams() {
      if (simplifyParamsBuilder_ == null) {
        if (paramsCase_ == 21) {
          return (geo.v1.Params.Simplify) params_;
        }
        return geo.v1.Params.Simplify.getDefaultInstance();
      } else {
        if (paramsCase_ == 21) {
          return simplifyParamsBuilder_.getMessage();
        }
        return geo.v1.Params.Simplify.getDefaultInstance();
      }
    }
    /**
     * <code>.geo.v1.Params.Simplify simplify_params = 21 [json_name = "simplifyParams"];</code>
     */
    public Builder setSimplifyParams(geo.v1.Params.Simplify value) {
      if (simplifyParamsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        params_ = value;
        onChanged();
      } else {
        simplifyParamsBuilder_.setMessage(value);
      }
      paramsCase_ = 21;
      return this;
    }
    /**
     * <code>.geo.v1.Params.Simplify simplify_params = 21 [json_name = "simplifyParams"];</code>
     */
    public Builder setSimplifyParams(
        geo.v1.Params.Simplify.Builder builderForValue) {
      if (simplifyParamsBuilder_ == null) {
        params_ = builderForValue.build();
        onChanged();
      } else {
        simplifyParamsBuilder_.setMessage(builderForValue.build());
      }
      paramsCase_ = 21;
      return this;
    }
    /**
     * <code>.geo.v1.Params.Simplify simplify_params = 21 [json_name = "simplifyParams"];</code>
     */
    public Builder mergeSimplifyParams(geo.v1.Params.Simplify value) {
      if (simplifyParamsBuilder_ == null) {
        if (paramsCase_ == 21 &&
            params_ != geo.v1.Params.Simplify.getDefaultInstance()) {
          params_ = geo.v1.Params.Simplify.newBuilder((geo.v1.Params.Simplify) params_)
              .mergeFrom(value).buildPartial();
        } else {
          params_ = value;
        }
        onChanged();
      } else {
        if (paramsCase_ == 21) {
          simplifyParamsBuilder_.mergeFrom(value);
        }
        simplifyParamsBuilder_.setMessage(value);
      }
      paramsCase_ = 21;
      return this;
    }
    /**
     * <code>.geo.v1.Params.Simplify simplify_params = 21 [json_name = "simplifyParams"];</code>
     */
    public Builder clearSimplifyParams() {
      if (simplifyParamsBuilder_ == null) {
        if (paramsCase_ == 21) {
          paramsCase_ = 0;
          params_ = null;
          onChanged();
        }
      } else {
        if (paramsCase_ == 21) {
          paramsCase_ = 0;
          params_ = null;
        }
        simplifyParamsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.geo.v1.Params.Simplify simplify_params = 21 [json_name = "simplifyParams"];</code>
     */
    public geo.v1.Params.Simplify.Builder getSimplifyParamsBuilder() {
      return getSimplifyParamsFieldBuilder().getBuilder();
    }
    /**
     * <code>.geo.v1.Params.Simplify simplify_params = 21 [json_name = "simplifyParams"];</code>
     */
    @java.lang.Override
    public geo.v1.Params.SimplifyOrBuilder getSimplifyParamsOrBuilder() {
      if ((paramsCase_ == 21) && (simplifyParamsBuilder_ != null)) {
        return simplifyParamsBuilder_.getMessageOrBuilder();
      } else {
        if (paramsCase_ == 21) {
          return (geo.v1.Params.Simplify) params_;
        }
        return geo.v1.Params.Simplify.getDefaultInstance();
      }
    }
    /**
     * <code>.geo.v1.Params.Simplify simplify_params = 21 [json_name = "simplifyParams"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        geo.v1.Params.Simplify, geo.v1.Params.Simplify.Builder, geo.v1.Params.SimplifyOrBuilder> 
        getSimplifyParamsFieldBuilder() {
      if (simplifyParamsBuilder_ == null) {
        if (!(paramsCase_ == 21)) {
          params_ = geo.v1.Params.Simplify.getDefaultInstance();
        }
        simplifyParamsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            geo.v1.Params.Simplify, geo.v1.Params.Simplify.Builder, geo.v1.Params.SimplifyOrBuilder>(
                (geo.v1.Params.Simplify) params_,
                getParentForChildren(),
                isClean());
        params_ = null;
      }
      paramsCase_ = 21;
      onChanged();;
      return simplifyParamsBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        geo.v1.Params.GeneralizeByArea, geo.v1.Params.GeneralizeByArea.Builder, geo.v1.Params.GeneralizeByAreaOrBuilder> generalizeByAreaParamsBuilder_;
    /**
     * <code>.geo.v1.Params.GeneralizeByArea generalize_by_area_params = 22 [json_name = "generalizeByAreaParams"];</code>
     * @return Whether the generalizeByAreaParams field is set.
     */
    @java.lang.Override
    public boolean hasGeneralizeByAreaParams() {
      return paramsCase_ == 22;
    }
    /**
     * <code>.geo.v1.Params.GeneralizeByArea generalize_by_area_params = 22 [json_name = "generalizeByAreaParams"];</code>
     * @return The generalizeByAreaParams.
     */
    @java.lang.Override
    public geo.v1.Params.GeneralizeByArea getGeneralizeByAreaParams() {
      if (generalizeByAreaParamsBuilder_ == null) {
        if (paramsCase_ == 22) {
          return (geo.v1.Params.GeneralizeByArea) params_;
        }
        return geo.v1.Params.GeneralizeByArea.getDefaultInstance();
      } else {
        if (paramsCase_ == 22) {
          return generalizeByAreaParamsBuilder_.getMessage();
        }
        return geo.v1.Params.GeneralizeByArea.getDefaultInstance();
      }
    }
    /**
     * <code>.geo.v1.Params.GeneralizeByArea generalize_by_area_params = 22 [json_name = "generalizeByAreaParams"];</code>
     */
    public Builder setGeneralizeByAreaParams(geo.v1.Params.GeneralizeByArea value) {
      if (generalizeByAreaParamsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        params_ = value;
        onChanged();
      } else {
        generalizeByAreaParamsBuilder_.setMessage(value);
      }
      paramsCase_ = 22;
      return this;
    }
    /**
     * <code>.geo.v1.Params.GeneralizeByArea generalize_by_area_params = 22 [json_name = "generalizeByAreaParams"];</code>
     */
    public Builder setGeneralizeByAreaParams(
        geo.v1.Params.GeneralizeByArea.Builder builderForValue) {
      if (generalizeByAreaParamsBuilder_ == null) {
        params_ = builderForValue.build();
        onChanged();
      } else {
        generalizeByAreaParamsBuilder_.setMessage(builderForValue.build());
      }
      paramsCase_ = 22;
      return this;
    }
    /**
     * <code>.geo.v1.Params.GeneralizeByArea generalize_by_area_params = 22 [json_name = "generalizeByAreaParams"];</code>
     */
    public Builder mergeGeneralizeByAreaParams(geo.v1.Params.GeneralizeByArea value) {
      if (generalizeByAreaParamsBuilder_ == null) {
        if (paramsCase_ == 22 &&
            params_ != geo.v1.Params.GeneralizeByArea.getDefaultInstance()) {
          params_ = geo.v1.Params.GeneralizeByArea.newBuilder((geo.v1.Params.GeneralizeByArea) params_)
              .mergeFrom(value).buildPartial();
        } else {
          params_ = value;
        }
        onChanged();
      } else {
        if (paramsCase_ == 22) {
          generalizeByAreaParamsBuilder_.mergeFrom(value);
        }
        generalizeByAreaParamsBuilder_.setMessage(value);
      }
      paramsCase_ = 22;
      return this;
    }
    /**
     * <code>.geo.v1.Params.GeneralizeByArea generalize_by_area_params = 22 [json_name = "generalizeByAreaParams"];</code>
     */
    public Builder clearGeneralizeByAreaParams() {
      if (generalizeByAreaParamsBuilder_ == null) {
        if (paramsCase_ == 22) {
          paramsCase_ = 0;
          params_ = null;
          onChanged();
        }
      } else {
        if (paramsCase_ == 22) {
          paramsCase_ = 0;
          params_ = null;
        }
        generalizeByAreaParamsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.geo.v1.Params.GeneralizeByArea generalize_by_area_params = 22 [json_name = "generalizeByAreaParams"];</code>
     */
    public geo.v1.Params.GeneralizeByArea.Builder getGeneralizeByAreaParamsBuilder() {
      return getGeneralizeByAreaParamsFieldBuilder().getBuilder();
    }
    /**
     * <code>.geo.v1.Params.GeneralizeByArea generalize_by_area_params = 22 [json_name = "generalizeByAreaParams"];</code>
     */
    @java.lang.Override
    public geo.v1.Params.GeneralizeByAreaOrBuilder getGeneralizeByAreaParamsOrBuilder() {
      if ((paramsCase_ == 22) && (generalizeByAreaParamsBuilder_ != null)) {
        return generalizeByAreaParamsBuilder_.getMessageOrBuilder();
      } else {
        if (paramsCase_ == 22) {
          return (geo.v1.Params.GeneralizeByArea) params_;
        }
        return geo.v1.Params.GeneralizeByArea.getDefaultInstance();
      }
    }
    /**
     * <code>.geo.v1.Params.GeneralizeByArea generalize_by_area_params = 22 [json_name = "generalizeByAreaParams"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        geo.v1.Params.GeneralizeByArea, geo.v1.Params.GeneralizeByArea.Builder, geo.v1.Params.GeneralizeByAreaOrBuilder> 
        getGeneralizeByAreaParamsFieldBuilder() {
      if (generalizeByAreaParamsBuilder_ == null) {
        if (!(paramsCase_ == 22)) {
          params_ = geo.v1.Params.GeneralizeByArea.getDefaultInstance();
        }
        generalizeByAreaParamsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            geo.v1.Params.GeneralizeByArea, geo.v1.Params.GeneralizeByArea.Builder, geo.v1.Params.GeneralizeByAreaOrBuilder>(
                (geo.v1.Params.GeneralizeByArea) params_,
                getParentForChildren(),
                isClean());
        params_ = null;
      }
      paramsCase_ = 22;
      onChanged();;
      return generalizeByAreaParamsBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        geo.v1.Params.AffineTransform, geo.v1.Params.AffineTransform.Builder, geo.v1.Params.AffineTransformOrBuilder> affineTransformParamsBuilder_;
    /**
     * <code>.geo.v1.Params.AffineTransform affine_transform_params = 23 [json_name = "affineTransformParams"];</code>
     * @return Whether the affineTransformParams field is set.
     */
    @java.lang.Override
    public boolean hasAffineTransformParams() {
      return paramsCase_ == 23;
    }
    /**
     * <code>.geo.v1.Params.AffineTransform affine_transform_params = 23 [json_name = "affineTransformParams"];</code>
     * @return The affineTransformParams.
     */
    @java.lang.Override
    public geo.v1.Params.AffineTransform getAffineTransformParams() {
      if (affineTransformParamsBuilder_ == null) {
        if (paramsCase_ == 23) {
          return (geo.v1.Params.AffineTransform) params_;
        }
        return geo.v1.Params.AffineTransform.getDefaultInstance();
      } else {
        if (paramsCase_ == 23) {
          return affineTransformParamsBuilder_.getMessage();
        }
        return geo.v1.Params.AffineTransform.getDefaultInstance();
      }
    }
    /**
     * <code>.geo.v1.Params.AffineTransform affine_transform_params = 23 [json_name = "affineTransformParams"];</code>
     */
    public Builder setAffineTransformParams(geo.v1.Params.AffineTransform value) {
      if (affineTransformParamsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        params_ = value;
        onChanged();
      } else {
        affineTransformParamsBuilder_.setMessage(value);
      }
      paramsCase_ = 23;
      return this;
    }
    /**
     * <code>.geo.v1.Params.AffineTransform affine_transform_params = 23 [json_name = "affineTransformParams"];</code>
     */
    public Builder setAffineTransformParams(
        geo.v1.Params.AffineTransform.Builder builderForValue) {
      if (affineTransformParamsBuilder_ == null) {
        params_ = builderForValue.build();
        onChanged();
      } else {
        affineTransformParamsBuilder_.setMessage(builderForValue.build());
      }
      paramsCase_ = 23;
      return this;
    }
    /**
     * <code>.geo.v1.Params.AffineTransform affine_transform_params = 23 [json_name = "affineTransformParams"];</code>
     */
    public Builder mergeAffineTransformParams(geo.v1.Params.AffineTransform value) {
      if (affineTransformParamsBuilder_ == null) {
        if (paramsCase_ == 23 &&
            params_ != geo.v1.Params.AffineTransform.getDefaultInstance()) {
          params_ = geo.v1.Params.AffineTransform.newBuilder((geo.v1.Params.AffineTransform) params_)
              .mergeFrom(value).buildPartial();
        } else {
          params_ = value;
        }
        onChanged();
      } else {
        if (paramsCase_ == 23) {
          affineTransformParamsBuilder_.mergeFrom(value);
        }
        affineTransformParamsBuilder_.setMessage(value);
      }
      paramsCase_ = 23;
      return this;
    }
    /**
     * <code>.geo.v1.Params.AffineTransform affine_transform_params = 23 [json_name = "affineTransformParams"];</code>
     */
    public Builder clearAffineTransformParams() {
      if (affineTransformParamsBuilder_ == null) {
        if (paramsCase_ == 23) {
          paramsCase_ = 0;
          params_ = null;
          onChanged();
        }
      } else {
        if (paramsCase_ == 23) {
          paramsCase_ = 0;
          params_ = null;
        }
        affineTransformParamsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.geo.v1.Params.AffineTransform affine_transform_params = 23 [json_name = "affineTransformParams"];</code>
     */
    public geo.v1.Params.AffineTransform.Builder getAffineTransformParamsBuilder() {
      return getAffineTransformParamsFieldBuilder().getBuilder();
    }
    /**
     * <code>.geo.v1.Params.AffineTransform affine_transform_params = 23 [json_name = "affineTransformParams"];</code>
     */
    @java.lang.Override
    public geo.v1.Params.AffineTransformOrBuilder getAffineTransformParamsOrBuilder() {
      if ((paramsCase_ == 23) && (affineTransformParamsBuilder_ != null)) {
        return affineTransformParamsBuilder_.getMessageOrBuilder();
      } else {
        if (paramsCase_ == 23) {
          return (geo.v1.Params.AffineTransform) params_;
        }
        return geo.v1.Params.AffineTransform.getDefaultInstance();
      }
    }
    /**
     * <code>.geo.v1.Params.AffineTransform affine_transform_params = 23 [json_name = "affineTransformParams"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        geo.v1.Params.AffineTransform, geo.v1.Params.AffineTransform.Builder, geo.v1.Params.AffineTransformOrBuilder> 
        getAffineTransformParamsFieldBuilder() {
      if (affineTransformParamsBuilder_ == null) {
        if (!(paramsCase_ == 23)) {
          params_ = geo.v1.Params.AffineTransform.getDefaultInstance();
        }
        affineTransformParamsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            geo.v1.Params.AffineTransform, geo.v1.Params.AffineTransform.Builder, geo.v1.Params.AffineTransformOrBuilder>(
                (geo.v1.Params.AffineTransform) params_,
                getParentForChildren(),
                isClean());
        params_ = null;
      }
      paramsCase_ = 23;
      onChanged();;
      return affineTransformParamsBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        geo.v1.Params.GeodeticBuffer, geo.v1.Params.GeodeticBuffer.Builder, geo.v1.Params.GeodeticBufferOrBuilder> geodeticBufferParamsBuilder_;
    /**
     * <code>.geo.v1.Params.GeodeticBuffer geodetic_buffer_params = 24 [json_name = "geodeticBufferParams"];</code>
     * @return Whether the geodeticBufferParams field is set.
     */
    @java.lang.Override
    public boolean hasGeodeticBufferParams() {
      return paramsCase_ == 24;
    }
    /**
     * <code>.geo.v1.Params.GeodeticBuffer geodetic_buffer_params = 24 [json_name = "geodeticBufferParams"];</code>
     * @return The geodeticBufferParams.
     */
    @java.lang.Override
    public geo.v1.Params.GeodeticBuffer getGeodeticBufferParams() {
      if (geodeticBufferParamsBuilder_ == null) {
        if (paramsCase_ == 24) {
          return (geo.v1.Params.GeodeticBuffer) params_;
        }
        return geo.v1.Params.GeodeticBuffer.getDefaultInstance();
      } else {
        if (paramsCase_ == 24) {
          return geodeticBufferParamsBuilder_.getMessage();
        }
        return geo.v1.Params.GeodeticBuffer.getDefaultInstance();
      }
    }
    /**
     * <code>.geo.v1.Params.GeodeticBuffer geodetic_buffer_params = 24 [json_name = "geodeticBufferParams"];</code>
     */
    public Builder setGeodeticBufferParams(geo.v1.Params.GeodeticBuffer value) {
      if (geodeticBufferParamsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        params_ = value;
        onChanged();
      } else {
        geodeticBufferParamsBuilder_.setMessage(value);
      }
      paramsCase_ = 24;
      return this;
    }
    /**
     * <code>.geo.v1.Params.GeodeticBuffer geodetic_buffer_params = 24 [json_name = "geodeticBufferParams"];</code>
     */
    public Builder setGeodeticBufferParams(
        geo.v1.Params.GeodeticBuffer.Builder builderForValue) {
      if (geodeticBufferParamsBuilder_ == null) {
        params_ = builderForValue.build();
        onChanged();
      } else {
        geodeticBufferParamsBuilder_.setMessage(builderForValue.build());
      }
      paramsCase_ = 24;
      return this;
    }
    /**
     * <code>.geo.v1.Params.GeodeticBuffer geodetic_buffer_params = 24 [json_name = "geodeticBufferParams"];</code>
     */
    public Builder mergeGeodeticBufferParams(geo.v1.Params.GeodeticBuffer value) {
      if (geodeticBufferParamsBuilder_ == null) {
        if (paramsCase_ == 24 &&
            params_ != geo.v1.Params.GeodeticBuffer.getDefaultInstance()) {
          params_ = geo.v1.Params.GeodeticBuffer.newBuilder((geo.v1.Params.GeodeticBuffer) params_)
              .mergeFrom(value).buildPartial();
        } else {
          params_ = value;
        }
        onChanged();
      } else {
        if (paramsCase_ == 24) {
          geodeticBufferParamsBuilder_.mergeFrom(value);
        }
        geodeticBufferParamsBuilder_.setMessage(value);
      }
      paramsCase_ = 24;
      return this;
    }
    /**
     * <code>.geo.v1.Params.GeodeticBuffer geodetic_buffer_params = 24 [json_name = "geodeticBufferParams"];</code>
     */
    public Builder clearGeodeticBufferParams() {
      if (geodeticBufferParamsBuilder_ == null) {
        if (paramsCase_ == 24) {
          paramsCase_ = 0;
          params_ = null;
          onChanged();
        }
      } else {
        if (paramsCase_ == 24) {
          paramsCase_ = 0;
          params_ = null;
        }
        geodeticBufferParamsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.geo.v1.Params.GeodeticBuffer geodetic_buffer_params = 24 [json_name = "geodeticBufferParams"];</code>
     */
    public geo.v1.Params.GeodeticBuffer.Builder getGeodeticBufferParamsBuilder() {
      return getGeodeticBufferParamsFieldBuilder().getBuilder();
    }
    /**
     * <code>.geo.v1.Params.GeodeticBuffer geodetic_buffer_params = 24 [json_name = "geodeticBufferParams"];</code>
     */
    @java.lang.Override
    public geo.v1.Params.GeodeticBufferOrBuilder getGeodeticBufferParamsOrBuilder() {
      if ((paramsCase_ == 24) && (geodeticBufferParamsBuilder_ != null)) {
        return geodeticBufferParamsBuilder_.getMessageOrBuilder();
      } else {
        if (paramsCase_ == 24) {
          return (geo.v1.Params.GeodeticBuffer) params_;
        }
        return geo.v1.Params.GeodeticBuffer.getDefaultInstance();
      }
    }
    /**
     * <code>.geo.v1.Params.GeodeticBuffer geodetic_buffer_params = 24 [json_name = "geodeticBufferParams"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        geo.v1.Params.GeodeticBuffer, geo.v1.Params.GeodeticBuffer.Builder, geo.v1.Params.GeodeticBufferOrBuilder> 
        getGeodeticBufferParamsFieldBuilder() {
      if (geodeticBufferParamsBuilder_ == null) {
        if (!(paramsCase_ == 24)) {
          params_ = geo.v1.Params.GeodeticBuffer.getDefaultInstance();
        }
        geodeticBufferParamsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            geo.v1.Params.GeodeticBuffer, geo.v1.Params.GeodeticBuffer.Builder, geo.v1.Params.GeodeticBufferOrBuilder>(
                (geo.v1.Params.GeodeticBuffer) params_,
                getParentForChildren(),
                isClean());
        params_ = null;
      }
      paramsCase_ = 24;
      onChanged();;
      return geodeticBufferParamsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:geo.v1.GeometryRequest)
  }

  // @@protoc_insertion_point(class_scope:geo.v1.GeometryRequest)
  private static final geo.v1.GeometryRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new geo.v1.GeometryRequest();
  }

  public static geo.v1.GeometryRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<GeometryRequest>
      PARSER = new com.google.protobuf.AbstractParser<GeometryRequest>() {
    @java.lang.Override
    public GeometryRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new GeometryRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<GeometryRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<GeometryRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public geo.v1.GeometryRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

