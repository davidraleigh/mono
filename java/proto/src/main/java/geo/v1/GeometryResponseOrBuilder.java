// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/geo/v1/geometry.proto

package geo.v1;

public interface GeometryResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:geo.v1.GeometryResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * if geometry result, then this field holds the geometry data
   * </pre>
   *
   * <code>.geo.v1.GeometryData geometry = 1 [json_name = "geometry"];</code>
   * @return Whether the geometry field is set.
   */
  boolean hasGeometry();
  /**
   * <pre>
   * if geometry result, then this field holds the geometry data
   * </pre>
   *
   * <code>.geo.v1.GeometryData geometry = 1 [json_name = "geometry"];</code>
   * @return The geometry.
   */
  geo.v1.GeometryData getGeometry();
  /**
   * <pre>
   * if geometry result, then this field holds the geometry data
   * </pre>
   *
   * <code>.geo.v1.GeometryData geometry = 1 [json_name = "geometry"];</code>
   */
  geo.v1.GeometryDataOrBuilder getGeometryOrBuilder();

  /**
   * <pre>
   * if a topo spatial relationship request, then this field holds the true or false result
   * </pre>
   *
   * <code>bool spatial_relationship = 2 [json_name = "spatialRelationship"];</code>
   * @return Whether the spatialRelationship field is set.
   */
  boolean hasSpatialRelationship();
  /**
   * <pre>
   * if a topo spatial relationship request, then this field holds the true or false result
   * </pre>
   *
   * <code>bool spatial_relationship = 2 [json_name = "spatialRelationship"];</code>
   * @return The spatialRelationship.
   */
  boolean getSpatialRelationship();

  /**
   * <pre>
   * a measure result will be a float for area and length requests
   * </pre>
   *
   * <code>double measure = 3 [json_name = "measure"];</code>
   * @return Whether the measure field is set.
   */
  boolean hasMeasure();
  /**
   * <pre>
   * a measure result will be a float for area and length requests
   * </pre>
   *
   * <code>double measure = 3 [json_name = "measure"];</code>
   * @return The measure.
   */
  double getMeasure();

  /**
   * <code>.geo.v1.GeodeticInverse geodetic_inverse = 4 [json_name = "geodeticInverse"];</code>
   * @return Whether the geodeticInverse field is set.
   */
  boolean hasGeodeticInverse();
  /**
   * <code>.geo.v1.GeodeticInverse geodetic_inverse = 4 [json_name = "geodeticInverse"];</code>
   * @return The geodeticInverse.
   */
  geo.v1.GeodeticInverse getGeodeticInverse();
  /**
   * <code>.geo.v1.GeodeticInverse geodetic_inverse = 4 [json_name = "geodeticInverse"];</code>
   */
  geo.v1.GeodeticInverseOrBuilder getGeodeticInverseOrBuilder();

  /**
   * <code>map&lt;int64, bool&gt; relate_map = 5 [json_name = "relateMap"];</code>
   */
  int getRelateMapCount();
  /**
   * <code>map&lt;int64, bool&gt; relate_map = 5 [json_name = "relateMap"];</code>
   */
  boolean containsRelateMap(
      long key);
  /**
   * Use {@link #getRelateMapMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.Long, java.lang.Boolean>
  getRelateMap();
  /**
   * <code>map&lt;int64, bool&gt; relate_map = 5 [json_name = "relateMap"];</code>
   */
  java.util.Map<java.lang.Long, java.lang.Boolean>
  getRelateMapMap();
  /**
   * <code>map&lt;int64, bool&gt; relate_map = 5 [json_name = "relateMap"];</code>
   */

  boolean getRelateMapOrDefault(
      long key,
      boolean defaultValue);
  /**
   * <code>map&lt;int64, bool&gt; relate_map = 5 [json_name = "relateMap"];</code>
   */

  boolean getRelateMapOrThrow(
      long key);

  public geo.v1.GeometryResponse.ResultCase getResultCase();
}
