// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/geo/v1/geometry.proto

package geo.v1;

public interface GeometryDataOrBuilder extends
    // @@protoc_insertion_point(interface_extends:geo.v1.GeometryData)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * geometry id as an integer
   * </pre>
   *
   * <code>uint64 geometry_id = 1 [json_name = "geometryId"];</code>
   * @return The geometryId.
   */
  long getGeometryId();

  /**
   * <pre>
   * feature id as a string (for guids and other ids that aren't numeric)
   * </pre>
   *
   * <code>string feature_id = 2 [json_name = "featureId"];</code>
   * @return The featureId.
   */
  java.lang.String getFeatureId();
  /**
   * <pre>
   * feature id as a string (for guids and other ids that aren't numeric)
   * </pre>
   *
   * <code>string feature_id = 2 [json_name = "featureId"];</code>
   * @return The bytes for featureId.
   */
  com.google.protobuf.ByteString
      getFeatureIdBytes();

  /**
   * <pre>
   * well known text format for geometry encoding, https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry
   * </pre>
   *
   * <code>string wkt = 3 [json_name = "wkt"];</code>
   * @return Whether the wkt field is set.
   */
  boolean hasWkt();
  /**
   * <pre>
   * well known text format for geometry encoding, https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry
   * </pre>
   *
   * <code>string wkt = 3 [json_name = "wkt"];</code>
   * @return The wkt.
   */
  java.lang.String getWkt();
  /**
   * <pre>
   * well known text format for geometry encoding, https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry
   * </pre>
   *
   * <code>string wkt = 3 [json_name = "wkt"];</code>
   * @return The bytes for wkt.
   */
  com.google.protobuf.ByteString
      getWktBytes();

  /**
   * <pre>
   * geojson format for geometry encoding, https://en.wikipedia.org/wiki/GeoJSON
   * </pre>
   *
   * <code>string geojson = 4 [json_name = "geojson"];</code>
   * @return Whether the geojson field is set.
   */
  boolean hasGeojson();
  /**
   * <pre>
   * geojson format for geometry encoding, https://en.wikipedia.org/wiki/GeoJSON
   * </pre>
   *
   * <code>string geojson = 4 [json_name = "geojson"];</code>
   * @return The geojson.
   */
  java.lang.String getGeojson();
  /**
   * <pre>
   * geojson format for geometry encoding, https://en.wikipedia.org/wiki/GeoJSON
   * </pre>
   *
   * <code>string geojson = 4 [json_name = "geojson"];</code>
   * @return The bytes for geojson.
   */
  com.google.protobuf.ByteString
      getGeojsonBytes();

  /**
   * <pre>
   * well known binary format for geometry encoding, https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry#Well-known_binary
   * </pre>
   *
   * <code>bytes wkb = 5 [json_name = "wkb"];</code>
   * @return Whether the wkb field is set.
   */
  boolean hasWkb();
  /**
   * <pre>
   * well known binary format for geometry encoding, https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry#Well-known_binary
   * </pre>
   *
   * <code>bytes wkb = 5 [json_name = "wkb"];</code>
   * @return The wkb.
   */
  com.google.protobuf.ByteString getWkb();

  /**
   * <pre>
   * ESRI shape binary format for geometry encoding (fastest decoding and encoding for geometry service) https://www.esri.com/library/whitepapers/pdfs/shapefile.pdf
   * </pre>
   *
   * <code>bytes esri_shape = 6 [json_name = "esriShape"];</code>
   * @return Whether the esriShape field is set.
   */
  boolean hasEsriShape();
  /**
   * <pre>
   * ESRI shape binary format for geometry encoding (fastest decoding and encoding for geometry service) https://www.esri.com/library/whitepapers/pdfs/shapefile.pdf
   * </pre>
   *
   * <code>bytes esri_shape = 6 [json_name = "esriShape"];</code>
   * @return The esriShape.
   */
  com.google.protobuf.ByteString getEsriShape();

  /**
   * <pre>
   * spatial reference of geometry
   * </pre>
   *
   * <code>.geo.v1.ProjectionData proj = 7 [json_name = "proj"];</code>
   * @return Whether the proj field is set.
   */
  boolean hasProj();
  /**
   * <pre>
   * spatial reference of geometry
   * </pre>
   *
   * <code>.geo.v1.ProjectionData proj = 7 [json_name = "proj"];</code>
   * @return The proj.
   */
  geo.v1.ProjectionData getProj();
  /**
   * <pre>
   * spatial reference of geometry
   * </pre>
   *
   * <code>.geo.v1.ProjectionData proj = 7 [json_name = "proj"];</code>
   */
  geo.v1.ProjectionDataOrBuilder getProjOrBuilder();

  /**
   * <pre>
   * envelope or bounding box of geometry
   * </pre>
   *
   * <code>.geo.v1.EnvelopeData envelope = 13 [json_name = "envelope"];</code>
   * @return Whether the envelope field is set.
   */
  boolean hasEnvelope();
  /**
   * <pre>
   * envelope or bounding box of geometry
   * </pre>
   *
   * <code>.geo.v1.EnvelopeData envelope = 13 [json_name = "envelope"];</code>
   * @return The envelope.
   */
  geo.v1.EnvelopeData getEnvelope();
  /**
   * <pre>
   * envelope or bounding box of geometry
   * </pre>
   *
   * <code>.geo.v1.EnvelopeData envelope = 13 [json_name = "envelope"];</code>
   */
  geo.v1.EnvelopeDataOrBuilder getEnvelopeOrBuilder();

  /**
   * <pre>
   * state of the geometry topological correctness. at geometry creation, it is unknown if it is simple
   * </pre>
   *
   * <code>.geo.v1.SimpleState simple = 14 [json_name = "simple"];</code>
   * @return The enum numeric value on the wire for simple.
   */
  int getSimpleValue();
  /**
   * <pre>
   * state of the geometry topological correctness. at geometry creation, it is unknown if it is simple
   * </pre>
   *
   * <code>.geo.v1.SimpleState simple = 14 [json_name = "simple"];</code>
   * @return The simple.
   */
  geo.v1.SimpleState getSimple();

  public geo.v1.GeometryData.DataCase getDataCase();
}
