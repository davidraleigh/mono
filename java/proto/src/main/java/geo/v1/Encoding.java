// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/geo/v1/geometry.proto

package geo.v1;

/**
 * <pre>
 * type of geometry encodings
 * </pre>
 *
 * Protobuf enum {@code geo.v1.Encoding}
 */
public enum Encoding
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * unknown type.
   * </pre>
   *
   * <code>UNKNOWN_ENCODING = 0;</code>
   */
  UNKNOWN_ENCODING(0),
  /**
   * <pre>
   * well-known binary
   * </pre>
   *
   * <code>WKB = 1;</code>
   */
  WKB(1),
  /**
   * <pre>
   * well-known text
   * </pre>
   *
   * <code>WKT = 2;</code>
   */
  WKT(2),
  /**
   * <pre>
   * geojson
   * </pre>
   *
   * <code>GEOJSON = 3;</code>
   */
  GEOJSON(3),
  /**
   * <pre>
   * esri shape binary
   * </pre>
   *
   * <code>ESRI_SHAPE = 4;</code>
   */
  ESRI_SHAPE(4),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * unknown type.
   * </pre>
   *
   * <code>UNKNOWN_ENCODING = 0;</code>
   */
  public static final int UNKNOWN_ENCODING_VALUE = 0;
  /**
   * <pre>
   * well-known binary
   * </pre>
   *
   * <code>WKB = 1;</code>
   */
  public static final int WKB_VALUE = 1;
  /**
   * <pre>
   * well-known text
   * </pre>
   *
   * <code>WKT = 2;</code>
   */
  public static final int WKT_VALUE = 2;
  /**
   * <pre>
   * geojson
   * </pre>
   *
   * <code>GEOJSON = 3;</code>
   */
  public static final int GEOJSON_VALUE = 3;
  /**
   * <pre>
   * esri shape binary
   * </pre>
   *
   * <code>ESRI_SHAPE = 4;</code>
   */
  public static final int ESRI_SHAPE_VALUE = 4;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static Encoding valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static Encoding forNumber(int value) {
    switch (value) {
      case 0: return UNKNOWN_ENCODING;
      case 1: return WKB;
      case 2: return WKT;
      case 3: return GEOJSON;
      case 4: return ESRI_SHAPE;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<Encoding>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      Encoding> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Encoding>() {
          public Encoding findValueByNumber(int number) {
            return Encoding.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return geo.v1.GeometryProto.getDescriptor().getEnumTypes().get(1);
  }

  private static final Encoding[] VALUES = values();

  public static Encoding valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private Encoding(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:geo.v1.Encoding)
}

